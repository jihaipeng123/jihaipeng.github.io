<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>123</title>
        <subtitle>456</subtitle>
        <icon>https://jihaipeng123.github.io/images/favicon.ico</icon>
        <link>https://jihaipeng123.github.io</link>
        <author>
          <name>赖床鹏鹏</name>
        </author>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Tue, 26 Sep 2023 16:33:52 +0800</pubDate>
        <lastBuildDate>Tue, 26 Sep 2023 16:33:52 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/conda%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</guid>
            <title>conda基础命令</title>
            <link>https://jihaipeng123.github.io/conda%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</link>
            <category term="人工智能" scheme="https://jihaipeng123.github.io/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/" />
            <pubDate>Tue, 26 Sep 2023 16:33:52 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;查看所处的环境&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;第一列是环境名，&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;号代表现在所处环境，最后是环境所在的路径。&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;conda env list&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;还可以使用参数 -y 来跳过确认询问&lt;br /&gt;
名字可以别取太长，进入的时候 tab 没办法补全，长了写起来麻烦&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;conda create &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;n &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;环境名&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; python&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;你想要包及版本，多个用空格隔开）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;进入环境&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;conda activate &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;环境名&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;退出环境&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;conda deactivate&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;删除环境&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;conda remove &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;n &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;环境名&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;all&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查找包&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 精确查找&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;conda search &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;full&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;name （包名）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 模糊查找&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;conda search （关键字）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;安装包&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 安装到当前环境&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;conda install &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;包名&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 安装到指定环境&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;conda install &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;name &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;环境名&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;包名&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;安装包时，也会安装一些相关的包&lt;br /&gt;
当使用 conda install 无法进行安装时，可以使用 pip 进行安装。pip 只能安装到当前环境，如果要安装到其他环境，要先切换到目标环境。安装环境已有包时，会先卸载环境里的包，再安装指定的包&lt;br /&gt;
还不行就换源&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pip install 包名 &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;i http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;pypi&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;douban&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;simple &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;trusted&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;host pypi&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;douban&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;更新包&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 更新指定包（多个包时用空格隔开）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;conda update &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;package_name&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;或&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;conda upgrade &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;package_name&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 更新全部包&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;conda update &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;all&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;或&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;conda upgrade &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;all&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA/</guid>
            <title>人工智能导论</title>
            <link>https://jihaipeng123.github.io/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA/</link>
            <category term="人工智能" scheme="https://jihaipeng123.github.io/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/" />
            <pubDate>Tue, 26 Sep 2023 14:08:02 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;机器学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#机器学习&#34;&gt;#&lt;/a&gt; 机器学习&lt;/h1&gt;
&lt;h2 id=&#34;概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;p&gt;机器学习是一门&lt;strong&gt;多领域交叉学科&lt;/strong&gt;，涉及&lt;strong&gt;概率论&lt;/strong&gt;、&lt;strong&gt;统计学&lt;/strong&gt;、逼近论、凸分析、算法复杂度理论等多门学科。它通过专门研究计算机怎样模拟或实现人类的学习行为，以&lt;strong&gt;获取&lt;/strong&gt;新的&lt;strong&gt;知识&lt;/strong&gt;或&lt;strong&gt;技能&lt;/strong&gt;，还凭借重新组织已有的知识结构来不断改善自身的性能。&lt;/p&gt;
&lt;p&gt;近十年来人工智能越来越热门，在我们的日常学习中，我们经常听到一大堆专有名词，像&lt;strong&gt;人工智能&lt;/strong&gt;，&lt;strong&gt;机器学习&lt;/strong&gt;，&lt;strong&gt;监督学习&lt;/strong&gt;，&lt;strong&gt;非监督学习&lt;/strong&gt;，&lt;strong&gt;深度学习&lt;/strong&gt;，&lt;strong&gt;强化学习&lt;/strong&gt;这些， 那它们之间存在什么样的关系呢？&lt;/p&gt;
&lt;p&gt;其中，&lt;strong&gt;强化学习&lt;/strong&gt;（Reinforcement Learning, RL），又称再励学习、评价学习或增强学习，用于描述和解决&lt;strong&gt;智能体（agent）在与环境的&lt;/strong&gt;交互过程中通过学习策略以达成回报最大化或实现特定目标的问题。&lt;/p&gt;
&lt;p&gt;目标：解决预测&lt;strong&gt;和&lt;/strong&gt;分类等问题。&lt;/p&gt;
&lt;h2 id=&#34;机器学习方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#机器学习方法&#34;&gt;#&lt;/a&gt; 机器学习方法&lt;/h2&gt;
&lt;p&gt;机器学习实际上包含很多数学方法，会涉及到&lt;strong&gt;统计学&lt;/strong&gt;、&lt;strong&gt;概率论&lt;/strong&gt;、&lt;strong&gt;信息论&lt;/strong&gt;等知识。 目标是：利用已知的数据，创建一个数学模型，并最终利用该模型进行预测。&lt;/p&gt;
&lt;p&gt;如上图，采用大量&lt;strong&gt;历史（训练）数据&lt;/strong&gt;进行训练， 获取到一个&lt;strong&gt;经验推理&lt;/strong&gt;模型。预测就是应用训练出来的模型，来解决一个未知的问题。&lt;/p&gt;
&lt;p&gt;数据是否有效，关系到训练最终的模型质量。&lt;/p&gt;
&lt;p&gt;训练方法是否有效，同样关系到训练最终的模型质量。&lt;/p&gt;
&lt;h2 id=&#34;机器学习的步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#机器学习的步骤&#34;&gt;#&lt;/a&gt; 机器学习的步骤&lt;/h2&gt;
&lt;p&gt;​            1.       确定与问题相关的数据（&lt;strong&gt;明确输入和输出、均为可观测数据&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;​            2.       收集数据、并预处理（&lt;strong&gt;数据准备，适用于学习和训练的形式&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;​            3.       分析预测结果的类型（&lt;strong&gt;分类，回归&lt;strong&gt;&lt;strong&gt; à&lt;/strong&gt;&lt;/strong&gt; 是预测温度值，还是判断属于某类&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;​            4.       根据预测结果的类型，找到&lt;strong&gt;输入&lt;/strong&gt;和&lt;strong&gt;输出&lt;/strong&gt;之间的逻辑关系（黑盒），确定合适的模型或算法。&lt;/p&gt;
&lt;p&gt;​            5.       用这个算法（&lt;strong&gt;模型&lt;/strong&gt;）去解决新的问题（&lt;strong&gt;未知数据&lt;strong&gt;&lt;strong&gt; à&lt;/strong&gt;&lt;/strong&gt; 同类问题预测&lt;/strong&gt;）&lt;/p&gt;
&lt;h2 id=&#34;机器学习的常用术语&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#机器学习的常用术语&#34;&gt;#&lt;/a&gt; 机器学习的常用术语&lt;/h2&gt;
&lt;p&gt;特征（feature）à 模型的&lt;strong&gt;输入&lt;/strong&gt; à 比拟函数中的&lt;strong&gt;自变量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;标记（label） à 模型的期望&lt;strong&gt;输出&lt;/strong&gt;（非预测值）à 比拟函数中的&lt;strong&gt;因变量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;例如，最简单的线性方程预测模型：&lt;em&gt;f&lt;/em&gt; (x) = mx + b ，其中 x 是特征 **（feature, 自变量），是函数（模型）的输入数据，&lt;strong&gt;f (x) 是预测输出&lt;/strong&gt;的结果（因变量），其目标是尽量与 ** 标记值 y 相同或相近。&lt;/p&gt;
&lt;p&gt;我们的目标就是获取&lt;em&gt; f&lt;/em&gt; (x) 的具体形式，也就是模型中的参数 m 和 b。例如：农业中的测产，不同情况的变量，造成农作物的产量和品质的变化。其目标是&lt;strong&gt;学习规律，进行调控&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;分类和回归&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分类和回归&#34;&gt;#&lt;/a&gt; 分类和回归&lt;/h2&gt;
&lt;p&gt;机器学习的主要任务便是聚焦于两个问题：分类和回归。&lt;/p&gt;
&lt;p&gt;回归问题： regression, 数据通常是连续的。&lt;/p&gt;
&lt;p&gt;​                ●  根据车的品牌，车龄，型号，预测车的价值&lt;/p&gt;
&lt;p&gt;​                ●  根据每天卡路里摄入以及运动量，预测一周后的体重&lt;/p&gt;
&lt;p&gt;​                ●  基于树的直径，预测树的年龄&lt;/p&gt;
&lt;p&gt;分类问题：classification, 数据结果往往是离散的&lt;/p&gt;
&lt;p&gt;​                ●  根据影像学资料，判断是否患有某种疾病&lt;/p&gt;
&lt;p&gt;​                ●  根据 email 内容，判断是否为垃圾邮件&lt;/p&gt;
&lt;h2 id=&#34;注意事项&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意事项&#34;&gt;#&lt;/a&gt; 注意事项&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;训练模型的输入输出，就是自变量和因变量， 对应 feature 和 predict（理想状况下 predict==label）。&lt;/li&gt;
&lt;li&gt;训练和测试的数据集必须是规范，格式统一的，方便计算机处理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分类&lt;/strong&gt;的数目必须是有限个。例如，最常见的二分类问题。属于定性问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;回归&lt;/strong&gt;问题，目标是寻找最优拟合的连续曲线，属于定量问题。&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;训练的核心就是从数据的 feature 和 label 间寻找&lt;strong&gt;联系&lt;/strong&gt;，可能有无数种的算法（模型）， 每种算法都有自己的优缺点（根据场景选择合适的）。&lt;/li&gt;
&lt;li&gt;根据预测（predict）的情况，我们可能需要重新&lt;strong&gt;调整算法&lt;/strong&gt;和&lt;strong&gt;模型&lt;/strong&gt;（&lt;strong&gt;炼丹师&lt;/strong&gt;）。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;环境安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境安装&#34;&gt;#&lt;/a&gt; 环境安装&lt;/h1&gt;
&lt;p&gt;任务：搭建 python 环境，安装神经网络框架（平台工具）以及要使用的功能模块库等等。&lt;/p&gt;
&lt;h2 id=&#34;安装conda虚拟环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装conda虚拟环境&#34;&gt;#&lt;/a&gt; 安装 Conda 虚拟环境&lt;/h2&gt;
&lt;p&gt;​            1.      Anaconda 的安装：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW5hY29uZGEuY29tLyVFRiVCQyU4QyVFNSVBRSU4QyVFNiU4OCU5MCVFNSU5MCU4RSVFNSU5QyVBOCVFMiU4MCU5Q0FuYWNvbmRh&#34;&gt;https://www.anaconda.com/，完成后在 “Anaconda&lt;/span&gt; prompt” 中，采用命令行去创建虚拟环境。&lt;/p&gt;
&lt;p&gt;​            2.     创建虚拟环境&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;conda create &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;n py38 python&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3.8&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​            3.      然后激活当前环境&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;conda activate py38&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​            4.      查看当前虚拟环境中已安装内容&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;conda list&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;
&lt;p&gt;查看当前已有的虚拟环境&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;conda env list&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;pip更换国内镜像&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pip更换国内镜像&#34;&gt;#&lt;/a&gt; pip 更换国内镜像&lt;/h2&gt;
&lt;p&gt;1. 方法一、临时使用&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pip install &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;i https&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;pypi&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tuna&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tsinghua&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;edu&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cn&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;simple some&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; 包名&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;windows 下 pip 更换国内源的方法&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;打开我的电脑，在地址栏中输入 % APPDATA% 按回车跳转到目标目录。在目录下创建一个 pip 文件夹，并在其中创建一个 pip.ini 文件。输入以下信息（不用 window 自带的记事本，建议采 notepad++）&lt;/p&gt;
&lt;p&gt;文件内容为：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;global&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;timeout &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;index&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;url &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; https&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;mirrors&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;aliyun&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;pypi&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;simple&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;trusted&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;host &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; mirrors&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;aliyun&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;come&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;安装神经网络框架平台&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装神经网络框架平台&#34;&gt;#&lt;/a&gt; 安装神经网络框架（平台）&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1QeVRvcmNoUHlUb3JjaC1ydDl6djQ2MmFtajVhZzAwY2lwMWIub3Jn&#34;&gt;访问 PyTorch 的官网 PyTorch.org&lt;/span&gt; 按照官网提示选择对应的版本进行安装。&lt;/p&gt;
&lt;p&gt;需注意的是：如果你的电脑支持 CUDA 并且显存大于 2G，可以安装 CUDA 版本，在神经网络的训练过程中效率会高一点。安装 Cuda 驱动的版本是 cuda11， 所以上面选择的也是 11。&lt;/p&gt;
&lt;p&gt;如果电脑显卡不支持 cuda, 那还可以安装 CPU 版本&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA/image-20230926154821497.png&#34; alt=&#34;image-20230926154821497&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装jupyter-notebook&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装jupyter-notebook&#34;&gt;#&lt;/a&gt; 安装 jupyter notebook&lt;/h2&gt;
&lt;p&gt;Jupyter Notebook 是基于网页的用于交互计算的应用程序。其可被应用于全过程计算：开发、文档编写、运行代码和展示结果。（此前被称为 IPython notebook）是一个交互式笔记本，支持运行 40 多种&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclQkMlOTYlRTclQTglOEIlRTglQUYlQUQlRTglQTglODAvOTg0NTEzMT9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==&#34;&gt;编程语言&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;Jupyter Notebook 的本质是一个 Web 应用程序，便于创建和共享程序文档，支持实时代码，数学方程，可视化和 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9tYXJrZG93bi8zMjQ1ODI5P2Zyb21Nb2R1bGU9bGVtbWFfaW5saW5r&#34;&gt;markdown&lt;/span&gt;。 用途包括：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOTUlQjAlRTYlOEQlQUUlRTYlQjglODUlRTclOTAlODYvMTA5NzI0P2Zyb21Nb2R1bGU9bGVtbWFfaW5saW5r&#34;&gt;数据清理&lt;/span&gt;和转换，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOTUlQjAlRTUlODAlQkMlRTYlQTglQTElRTYlOEIlOUYvODMwMTU4Mz9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==&#34;&gt;数值模拟&lt;/span&gt;，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclQkIlOUYlRTglQUUlQTElRTUlQkIlQkElRTYlQTglQTEvMjY3NjA5P2Zyb21Nb2R1bGU9bGVtbWFfaW5saW5r&#34;&gt;统计建模&lt;/span&gt;，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOUMlQkElRTUlOTklQTglRTUlQUQlQTYlRTQlQjklQTAvMjE3NTk5P2Zyb21Nb2R1bGU9bGVtbWFfaW5saW5r&#34;&gt;机器学习&lt;/span&gt;等&lt;/p&gt;
&lt;p&gt;即 Jupyter Notebook 中所有交互计算、编写说明文档、数学公式、图片以及其他富媒体形式的输入和输出，都是以文档的形式体现的。这些文档是保存为后缀名为 **.ipynb** 的 JSON 格式文件，不仅便于版本控制，也方便与他人共享。此外，文档还可以导出为：HTML、LaTeX、PDF 等格式。&lt;/p&gt;
&lt;p&gt;下面的命令用于安装 jupyter notebook：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pip install jupyter &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pip install &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;upgrade notebook&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6.4&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.12&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;安装 jupyter notebook 的提示功能&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pip install jupyter_contrib_nbextensions&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;jupyter contrib nbextension install &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;user&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pip install &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;user jupyter_nbextensions_configurator&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;jupyter nbextensions_configurator enable &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;user&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;启动 jupyter&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;jupyter notebook&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</guid>
            <title>博客搭建</title>
            <link>https://jihaipeng123.github.io/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</link>
            <category term="博客" scheme="https://jihaipeng123.github.io/categories/%E5%8D%9A%E5%AE%A2/" />
            <category term="博客" scheme="https://jihaipeng123.github.io/tags/%E5%8D%9A%E5%AE%A2/" />
            <pubDate>Tue, 26 Sep 2023 09:34:01 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;安装nodejs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装nodejs&#34;&gt;#&lt;/a&gt; 安装 Node.js&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;进入官网:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25sb2Fk&#34;&gt;Download | Node.js (nodejs.org)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;点击下载好的文件进行安装 node.js&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意：选 windows 版本，使用 Node.js 官方安装程序时，请确保勾选 &lt;strong&gt;Add to PATH&lt;/strong&gt; 选项（默认已勾选）&lt;/p&gt;
&lt;h1 id=&#34;安装git&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装git&#34;&gt;#&lt;/a&gt; 安装 Git&lt;/h1&gt;
&lt;p&gt;进入 Git 淘宝镜像:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yZWdpc3RyeS5ucG1taXJyb3IuY29tL2JpbmFyeS5odG1sP3BhdGg9Z2l0LWZvci13aW5kb3dzLw==&#34;&gt;CNPM Binaries Mirror (npmmirror.com)&lt;/span&gt;&lt;br /&gt;
 滑到底部点击最后一个 (可能因为时间原因，看到本文时已经出现新版本，请选择最新版本)&lt;br /&gt;
 打开下载好的文件进行安装&lt;/p&gt;
&lt;h1 id=&#34;初始化站点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化站点&#34;&gt;#&lt;/a&gt; 初始化站点&lt;/h1&gt;
&lt;p&gt;所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;npm install &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;g hexo&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;cli&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;到这里，Hexo 就已经完全安装成功了！我们来测试一下 hexo.&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不出意外的话，你现在的电脑在任意一个文件夹，选择右键，可以看到一个 Git Bash Here.&lt;/li&gt;
&lt;li&gt;点击它！&lt;/li&gt;
&lt;li&gt;然后在弹出来的框框里面输入  &lt;code&gt;hexo -version&lt;/code&gt;  , 即为安装成功&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;初始化-hexo-模板&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化-hexo-模板&#34;&gt;#&lt;/a&gt; 初始化 hexo 模板&lt;/h1&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hexo init &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 此条命令执行后&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;可以看到很多文件夹&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;说明安装成功&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;npm install &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 此条命令即为安装上一步缺少的库&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;大家在上一个命令执行之后 直接执行即可&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;各个目录简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#各个目录简介&#34;&gt;#&lt;/a&gt; 各个目录简介&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;source
资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。

themes
主题 文件夹。Hexo 会根据主题来生成静态页面。

_config.yml
网站的 配置 信息，您可以在此配置大部分的参数。

package.json
应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除。
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;解锁预览功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解锁预览功能&#34;&gt;#&lt;/a&gt; 解锁预览功能&lt;/h1&gt;
&lt;p&gt;已经完成基本的功能了，虽然主题还是默认的 landscape 主题，但此时我们已经可以预览网站文件了！&lt;/p&gt;
&lt;p&gt;请在 Git Bash Here 中输入以下内容&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 即为删除hexo的缓存&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;建议每次都要执行&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hexo clean的简写&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;清除缓存文件db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;json和已生成的静态文件 &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt;。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hexo cl&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;创建缓存文件 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;即为hexo generate 的简写&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hexo g&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;pre&gt;&lt;code&gt;# 启动服务器。默认情况下，访问网址为： http://localhost:4000/。(hexo server的简写)
hexo s 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;不出意外的话，现在你已经可以访问 http://localhost:4000/ 看到刚刚创建的网站了.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;上述命令还可以连起来写 hexo cl&amp;amp;&amp;amp;hexo g&amp;amp;&amp;amp;hexo s ,作为之后预览网站的快捷指令
&lt;/code&gt;&lt;/pre&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;为生成静态网页文件&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;此命令执行后会生成&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt;文件夹&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;其中的文件就是网站所产生的静态网页文件&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;部署网站&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hexo d&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;github创建个人仓库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#github创建个人仓库&#34;&gt;#&lt;/a&gt; GitHub 创建个人仓库&lt;/h1&gt;
&lt;p&gt;首先，你先要有一个 GitHub 账户，去注册一个。注册完登录后，在 GitHub.com 中看到一个 New repository，新建仓库&lt;/p&gt;
&lt;p&gt;创建一个和你用户名相同的仓库，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS15ZnIxNmFuMTlsLmdpdGh1Yi5pbw==&#34;&gt;后面加.github.io&lt;/span&gt;，只有这样，将来要部署到 GitHub page 的时候，才会被识别，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS14eHh4LTRtNWYzNTRldjVwLmdpdGh1Yi5pbw==&#34;&gt;也就是 xxxx.github.io&lt;/span&gt;，其中 xxx 就是你注册 GitHub 的用户名。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20230927141148282.png&#34; alt=&#34;image-20230927141148282&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;生成ssh添加到github&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生成ssh添加到github&#34;&gt;#&lt;/a&gt; 生成 SSH 添加到 GitHub&lt;/h1&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;git config &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;global user&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token string&#34;&gt;&#34;yourname&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;git config &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;global user&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;email &lt;span class=&#34;token string&#34;&gt;&#34;youremail&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里的 yourname 输入你的 GitHub 用户名，youremail 输入你 GitHub 的邮箱。这样 GitHub 才能知道你是不是对应它的账户。&lt;/p&gt;
&lt;p&gt;可以用以下两条，检查一下你有没有输对&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;git config user&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;git config user&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;email&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后创建 SSH, 一路回车.&lt;/p&gt;
&lt;p&gt;这个时候它会告诉你已经生成了.ssh 的文件夹。在你的电脑中找到这个文件夹。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20230927141436968.png&#34; alt=&#34;image-20230927141436968&#34; /&gt;&lt;/p&gt;
&lt;p&gt;ssh，简单来讲，就是一个秘钥，其中，id_rsa 是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub 是公共秘钥，可以随便给别人看。把这个公钥放在 GitHub 上，这样当你链接 GitHub 自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过 git 上传你的文件到 GitHub 上。&lt;/p&gt;
&lt;p&gt;而后在 GitHub 的 setting 中，找到 SSH keys 的设置选项，点击 New SSH key,  把你的 id_rsa.pub 里面的信息复制进去。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;在gitbash中，查看是否成功&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssh &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt; git&lt;span class=&#34;token annotation punctuation&#34;&gt;@github.com&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;将hexo部署到github&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#将hexo部署到github&#34;&gt;#&lt;/a&gt; 将 hexo 部署到 GitHub&lt;/h1&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;deploy&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  type&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; git&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  repo&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; https&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;github&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;YourgithubName&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;YourgithubName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;github&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;io&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;git&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  branch&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; main&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这个时候需要先安装 deploy-git ，也就是部署的命令，这样你才能用命令部署到 GitHub。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;npm install hexo&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;deployer&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;git &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;save&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;其中 hexo clean 清除了你之前生成的东西，也可以不加。&lt;br /&gt;
hexo generate 顾名思义，生成静态文章，可以用 hexo g 缩写&lt;br /&gt;
 hexo deploy 部署文章，可以用 hexo d 缩写&lt;/p&gt;
&lt;p&gt;注意 deploy 时可能要你输入 username 和 password。&lt;/p&gt;
&lt;p&gt;过一会儿就可以在 http://yourname.github.io 这个网站看到你的博客了&lt;/p&gt;
&lt;h1 id=&#34;设置个人域名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设置个人域名&#34;&gt;#&lt;/a&gt; 设置个人域名&lt;/h1&gt;
&lt;p&gt;现在你的个人网站的地址是 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3lvdXJuYW1lLmdpdGh1Yi5pbw==&#34;&gt;yourname.github.io&lt;/span&gt;，如果觉得这个网址强度不太够，这就需要你设置个人域名了。&lt;/p&gt;
&lt;p&gt;注册一个阿里云账户，在阿里云上买一个域名，可以买 xxx.top，或者 cn，比如最广泛的.com 就比较贵，看个人喜好咯。&lt;/p&gt;
&lt;p&gt;你需要先去进行实名认证，然后在域名控制台中，看到你购买的域名。&lt;/p&gt;
&lt;p&gt;点解析进去，添加解析。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20230927142924937.png&#34; alt=&#34;image-20230927142924937&#34; /&gt;&lt;/p&gt;
&lt;p&gt;其中，192.30.252.153 和 192.30.252.154 是 GitHub 的服务器地址。&lt;br /&gt;
&lt;strong&gt;注意，解析线路选择默认&lt;/strong&gt;，不要选境外。这个境外是后面来做国内外分流用的，。记得现在选择&lt;strong&gt;默认&lt;/strong&gt;！！&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20230927143025929.png&#34; alt=&#34;image-20230927143025929&#34; /&gt;&lt;/p&gt;
&lt;p&gt;登录 GitHub，进入之前创建的仓库，点击 settings，设置 Custom domain，输入你的域名 xxx.top&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20230927143106583.png&#34; alt=&#34;image-20230927143106583&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后在你的博客文件 source 中创建一个名为 CNAME 文件，不要后缀。只写上你的域名。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20230927143226900.png&#34; alt=&#34;image-20230927143226900&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hexo clean&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hexo g&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hexo d&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;过不了多久，再打开你的浏览器，输入你自己的域名，就可以看到搭建的网站啦！&lt;/p&gt;
&lt;h1 id=&#34;编写文章&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#编写文章&#34;&gt;#&lt;/a&gt; 编写文章&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;命令: hexo new  &amp;quot;文章的标题&amp;quot;&lt;/li&gt;
&lt;li&gt;然后全部的文章文件将位于  &lt;code&gt;\source\posts&lt;/code&gt;  文件夹下&lt;/li&gt;
&lt;li&gt;请使用 md 文件编辑器进行编辑&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;设置主题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设置主题&#34;&gt;#&lt;/a&gt; 设置主题&lt;/h1&gt;
&lt;h2 id=&#34;hexo基本配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hexo基本配置&#34;&gt;#&lt;/a&gt; hexo 基本配置&lt;/h2&gt;
&lt;p&gt;在文件根目录下的 &lt;code&gt;_config.yml&lt;/code&gt; ，就是整个 hexo 框架的配置文件了。可以在里面修改大部分的配置。详细可参考&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvY29uZmlndXJhdGlvbg==&#34;&gt;官方的配置&lt;/span&gt;描述&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20230927143751226.png&#34; alt=&#34;image-20230927143751226&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20230927143813675.png&#34; alt=&#34;image-20230927143813675&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在这里，你需要把 &lt;code&gt;url&lt;/code&gt;  改成你的网站域名。&lt;/p&gt;
&lt;p&gt;theme 就是选择主题，也就是在 &lt;code&gt;theme&lt;/code&gt;  这个文件夹下，默认给你安装的是 &lt;code&gt;lanscape&lt;/code&gt;  这个主题。更换主题时，在 hexo 官网上下载，把主题的文件放在 theme 文件夹下，再修改这个参数就可以了。&lt;/p&gt;
&lt;p&gt;直接在 github 链接上下载下来，然后放到 theme 件夹下就行了，然后再在刚才说的配置文件中把 theme` 换成那个主题文件夹的名字。&lt;/p&gt;
&lt;h2 id=&#34;主题设置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#主题设置&#34;&gt;#&lt;/a&gt; 主题设置&lt;/h2&gt;
&lt;p&gt;详见&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcv&#34;&gt; Step.2 基本配置 - Theme Shoka Documentation - 二进制杂谈 - 计算机科学 | Yume Shoka = 優萌初華 = 有夢書架 (lostyu.me)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;menu菜单栏&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#menu菜单栏&#34;&gt;#&lt;/a&gt; menu（菜单栏）&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20230927144517891.png&#34; alt=&#34;image-20230927144517891&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;其中，&lt;span class=&#34;token class-name&#34;&gt;About&lt;/span&gt;这个你是找不到网页的，因为你的文章中没有about这个东西。如果你想要的话，可以执行命令&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hexo &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; page about&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;它就会在根目录下source文件夹中新建了一个about文件夹，以及index&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;md，在index&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;md中写上你想要写的东西，就可以在网站上展示出来&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;如果你想要自己再自定义一个菜单栏的选项，那么就&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hexo &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; page yourdiy&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;然后在主题配置文件的menu菜单栏添加一个 &lt;span class=&#34;token class-name&#34;&gt;Yourdiy&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;yourdiy，注意冒号后面要有空格，以及前面的空格要和menu中默认的保持整齐。然后在languages文件夹中，找到zh&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;CN&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;yml，在index中添加yourdiy&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token char&#34;&gt;&#39;中文意思&#39;&lt;/span&gt;就可以显示中文了。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;customize定制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#customize定制&#34;&gt;#&lt;/a&gt; customize (定制)&lt;/h2&gt;
&lt;p&gt;在这里可以修改你的个人 logo，默认是那个 hueman，在 source/css/images 文件夹中放入自己要的 logo，再改一下 url 的链接名字就可以了。&lt;/p&gt;
&lt;p&gt;favicon 是网站中出现的那个小图标的 icon，找一张你喜欢的 logo，然后转换成 ico 格式，放在 images 文件夹下，配置一下路径就行。&lt;/p&gt;
&lt;p&gt;social_links ，可以显示你的社交链接，而且是有 logo 的。&lt;strong&gt;tips:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在这里可以添加一个 rss 功能，也就是那个符号像 wifi 一样的东西。&lt;/p&gt;
&lt;p&gt;注意：本篇摘自&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzM3NzgxMzA0L2FydGljbGUvZGV0YWlscy84MjcyOTAyOT9vcHNfcmVxdWVzdF9taXNjPSU3QiUyMnJlcXVlc3QlNUZpZCUyMiUzQSUyMjE2OTU3OTQ5MTkxNjgwMDE4NTg0Nzg5NiUyMiUyQyUyMnNjbSUyMiUzQSUyMjIwMTQwNzEzLjEzMDEwMjMzNC4uJTIyJTdEJmFtcDtyZXF1ZXN0X2lkPTE2OTU3OTQ5MTkxNjgwMDE4NTg0Nzg5NiZhbXA7Yml6X2lkPTAmYW1wO3V0bV9tZWRpdW09ZGlzdHJpYnV0ZS5wY19zZWFyY2hfcmVzdWx0Lm5vbmUtdGFzay1ibG9nLTJ+YWxsfnRvcF9wb3NpdGl2ZX5kZWZhdWx0LTEtODI3MjkwMjktbnVsbC1udWxsLjE0MiU1RXY5NCU1RWluc2VydF9kb3duMSZhbXA7dXRtX3Rlcm09aGV4byVFNiU5MCVBRCVFNSVCQiVCQSVFNCVCOCVBQSVFNCVCQSVCQSVFNSU4RCU5QSVFNSVBRSVBMiZhbXA7c3BtPTEwMTguMjIyNi4zMDAxLjQxODc=&#34;&gt; hexo 史上最全搭建教程 - CSDN 博客&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3/</guid>
            <title>算法题解</title>
            <link>https://jihaipeng123.github.io/%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3/</link>
            <category term="算法题库" scheme="https://jihaipeng123.github.io/categories/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/" />
            <pubDate>Mon, 25 Sep 2023 19:22:45 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;dfs1&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dfs1&#34;&gt;#&lt;/a&gt; dfs1&lt;/h1&gt;
&lt;p&gt;给定 n 个整数，要求选出 K 个数，使得选出来的 K 个数的和为 sum; 求一下有多少种情况；&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#include &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;iostream&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;using namespace std&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//n 代表一共多少个数，k 代表需要选的的数个数，sum 代表当前累加的数，ans 表示有多少种情况&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; k&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sum&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ans&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//cnt 当前累加的个数； s = 当前累加的数之和&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; cnt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; k &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; s &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; sum&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			ans&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; cnt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; cnt &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; s &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	cin &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; k &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; sum&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		cin &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	ans &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	cout &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; ans &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#include&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;iostream&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;using namespace std&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; k&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sum&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ans&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;bool xuan&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; s&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; cnt&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; sum &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; k&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        ans&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;xuan&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            xuan&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token function&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;cnt&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            xuan&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    cin &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; k &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; sum&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; n &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        cin &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    ans &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;第二种会显示 12，因为组合 2，3，5 和 3，2，5 和 5，3，2 等当成了不同方法。等待优化&lt;/p&gt;
&lt;p&gt;从 0 到 29 这 30 个数中选出 8 个数，使其和值为 200；&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#include&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;iostream&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;using namespace std&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; k&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sum&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ans&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; cnt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; k&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; sum&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; k &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; s &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; sum&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	ans&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; cnt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; cnt&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;s &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	k &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	sum &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		a&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	ans &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	cout &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; ans &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;dfs2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dfs2&#34;&gt;#&lt;/a&gt; dfs2&lt;/h1&gt;
&lt;p&gt;输入整数 n, 表示木棍数量 (3 &amp;lt; n &amp;lt;= 10)，接下来输入 n 根木棍的长度 pi (1 &amp;lt; pi &amp;lt; 10000), 看是否能装出等边三角形。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#include &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;iostream&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;using namespace std&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; p&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;bool vis&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;sum &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;bool f&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; cnt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; s&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; st&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;f&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        f &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sum &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sum&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;vis&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            vis&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token function&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;s&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;p&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            vis&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;scanf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%d&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;scanf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%d&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;p&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        sum &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; p&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sum &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; cout &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;nono&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;f&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;             cout &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;yesyes&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cout &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;nono&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/%E7%AE%97%E6%B3%95%E5%B0%8F%E7%BB%93/</guid>
            <title>算法小结</title>
            <link>https://jihaipeng123.github.io/%E7%AE%97%E6%B3%95%E5%B0%8F%E7%BB%93/</link>
            <category term="算法题库" scheme="https://jihaipeng123.github.io/categories/%E7%AE%97%E6%B3%95%E9%A2%98%E5%BA%93/" />
            <category term="算法" scheme="https://jihaipeng123.github.io/tags/%E7%AE%97%E6%B3%95/" />
            <pubDate>Sun, 17 Sep 2023 17:36:58 +0800</pubDate>
            <description><![CDATA[ &lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#include&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;bits&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;stdc&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;h&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;using namespace std&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;double&lt;/span&gt; pp &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;acos&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;// 等于 pi, 对精度要求高的题目有用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	cin &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%0.10lf&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; pp&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;../pictures/%E7%AE%97%E6%B3%95%E5%B0%8F%E7%BB%93/image-20230917194058604.png&#34; alt=&#34;image-20230917194058604&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#include &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;bits&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;stdc&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;h&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#include&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;iostream&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;using namespace std&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    string s&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    cin&lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; ans&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; a&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;b&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token char&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; a&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; b&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; ans&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; ans&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; ans&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; ans&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%d&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;ans&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2000 年的 1 月 1 日，是那一年的第 1 天。&lt;br /&gt;
那么，2000 年的 5 月 4 日，是那一年的第几天？&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#include &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;iostream&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#include &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;stdio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;h&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;using namespace std&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; y&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;365&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;366&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;bool &lt;span class=&#34;token function&#34;&gt;judge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;400&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; yy&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; mm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dd&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	cin &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; yy &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; mm &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; dd&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; sum &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2022&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; yy&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;judge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; sum &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; y&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; sum &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; y&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; mm&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;judge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;yy&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		sum &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	sum &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; dd&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	cout &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; sum&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt; &lt;/h4&gt;
&lt;p&gt;小明对数位中含有 2、0、1、9 的数字很感兴趣（不包括前导 0）&lt;br /&gt;
在 1 到 40 中这样的数包括 1、2、9、10 至 32、39 和 40，共 28 个，他们的和是 574。&lt;br /&gt;
请问，在 1 到 n 中，所有这样的数的和是多少？&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#include &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;iostream&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#include &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;stdio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;h&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;using namespace std&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	cin &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; res&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; sum &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; num &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;num&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			res &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; num &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; res &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; res &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; res &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				sum &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			num &lt;span class=&#34;token operator&#34;&gt;/=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	cout &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; sum&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;回文日期&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#回文日期&#34;&gt;#&lt;/a&gt; 回文日期&lt;/h1&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;20110101&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;20111231&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;不能枚举日期然后进行判断，这样跟写一个日历似的，太复杂&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;枚举所有年份，然后把它翻过来扩充成一个“日期”，然后看这个得到的“日期”是不是一个正常的日期格式，然后在看看是不是符合输入给的范围&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; check函数来判断这个日期是不是一个正常的日期格式&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;一个数除几个&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;，就是忽略掉这个数后面的几位&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;一个数mod几个&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;，就是拿到这个数后面的几位&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#include &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;cstring&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#include &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;iostream&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;using namespace std&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; days&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;bool &lt;span class=&#34;token function&#34;&gt;check&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; date&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; year &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; date &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; mouth &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;date &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; day &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; date &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mouth &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; mouth &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;day &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; mouth &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; day &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; days&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;mouth&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mouth &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; leap &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; year &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; year &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; year &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;400&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;day &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; days&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;mouth&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; leap&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; date1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; date2&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    cin &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; date1 &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; date2&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; res &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; date &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; j &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; j &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; j &lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;    date &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; date &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; x &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; x &lt;span class=&#34;token operator&#34;&gt;/=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;date1 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; date &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; date &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; date2 &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;check&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;date&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   res &lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    cout &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; res &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;div class=&#34;links&#34;&gt;&lt;div class=&#34;item&#34; title=&#34;me&#34; style=&#34;--block-color:#e9546b;&#34;&gt;&lt;span class=&#34;exturl image&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzU4MzY3NTg2L2FydGljbGUvZGV0YWlscy8xMjM5ODUzNTc/b3BzX3JlcXVlc3RfbWlzYz0lN0IlMjJyZXF1ZXN0JTVGaWQlMjIlM0ElMjIxNjk0OTUxOTA3MTY4MDAxODU4MTUzNTElMjIlMkMlMjJzY20lMjIlM0ElMjIyMDE0MDcxMy4xMzAxMDIzMzQuLiUyMiU3RCZyZXF1ZXN0X2lkPTE2OTQ5NTE5MDcxNjgwMDE4NTgxNTM1MSZiaXpfaWQ9MCZ1dG1fbWVkaXVtPWRpc3RyaWJ1dGUucGNfc2VhcmNoX3Jlc3VsdC5ub25lLXRhc2stYmxvZy0yfmFsbH50b3BfcG9zaXRpdmV+ZGVmYXVsdC0xLTEyMzk4NTM1Ny1udWxsLW51bGwuMTQy&#34; data-background-image=&#34;https://jihaipeng123.github.io/images/image-main/image(50).jpg&#34;&gt;&lt;/span&gt;
          &lt;div class=&#34;info&#34;&gt;
          &lt;span class=&#34;exturl title&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzU4MzY3NTg2L2FydGljbGUvZGV0YWlscy8xMjM5ODUzNTc/b3BzX3JlcXVlc3RfbWlzYz0lN0IlMjJyZXF1ZXN0JTVGaWQlMjIlM0ElMjIxNjk0OTUxOTA3MTY4MDAxODU4MTUzNTElMjIlMkMlMjJzY20lMjIlM0ElMjIyMDE0MDcxMy4xMzAxMDIzMzQuLiUyMiU3RCZyZXF1ZXN0X2lkPTE2OTQ5NTE5MDcxNjgwMDE4NTgxNTM1MSZiaXpfaWQ9MCZ1dG1fbWVkaXVtPWRpc3RyaWJ1dGUucGNfc2VhcmNoX3Jlc3VsdC5ub25lLXRhc2stYmxvZy0yfmFsbH50b3BfcG9zaXRpdmV+ZGVmYXVsdC0xLTEyMzk4NTM1Ny1udWxsLW51bGwuMTQy&#34;&gt;刷题&lt;/span&gt;
          &lt;p class=&#34;desc&#34;&gt;123&lt;/p&gt;
          &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/6-Linux%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/</guid>
            <title>6.Linux数据库远程连接</title>
            <link>https://jihaipeng123.github.io/6-Linux%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/</link>
            <category term="Linux" scheme="https://jihaipeng123.github.io/categories/Linux/" />
            <pubDate>Fri, 15 Sep 2023 16:39:53 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;主要针对 CentOS7 系统安装 mysql 进行全面讲解与步骤解析&lt;/p&gt;
&lt;h1 id=&#34;特别强调&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#特别强调&#34;&gt;#&lt;/a&gt; 特别强调&lt;/h1&gt;
&lt;p&gt;1. 此方法适合 OS7 以上版本，7 以下的就别费劲了&lt;br /&gt;
 2. 保证你的网络是通的，如果因为 dns 解析 等网络问题，自行百度解决&lt;br /&gt;
 3. 以前装过 mysql 的最好卸载干净，不然会有冲突&lt;/p&gt;
&lt;h1 id=&#34;前期准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前期准备&#34;&gt;#&lt;/a&gt; 前期准备&lt;/h1&gt;
&lt;p&gt;先清空以前安装 mysql 数据残留&lt;/p&gt;
&lt;p&gt;一、检查是否安装了 Mysql&lt;/p&gt;
&lt;p&gt;Yum 检查&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yum list installed &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; grep mysql&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;直接删除&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yum remove mysql&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;community&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;x86_64&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yum remove mysql mysql&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;server mysql&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;libs compat&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;mysql&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yum remove mysql&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;community&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;release&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;../pictures/5-Linux%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/image-20230915164830155.png&#34; alt=&#34;image-20230915164830155&#34; /&gt;&lt;/p&gt;
&lt;p&gt;rpm 检查：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;rpm &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;qa &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; grep &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;i mysql&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;../pictures/5-Linux%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/image-20230915164937638.png&#34; alt=&#34;image-20230915164937638&#34; /&gt;&lt;/p&gt;
&lt;p&gt;二、口令查找 Mysql 的安装目录和残存文件&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;whereis mysql&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;find &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;name mysql&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;找到后，全部 rm -rf 删除，如果提示此为目录文件 则使用命令 rm -r&lt;br /&gt;
 会有提示就输入 y 一个个删&lt;/p&gt;
&lt;p&gt;删除&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT1teXNxbCVFOSU4NSU4RCVFNyVCRCVBRSVFNiU5NiU4NyVFNCVCQiVCNiZhbXA7c3BtPTEwMDEuMjEwMS4zMDAxLjcwMjA=&#34;&gt; mysql 配置文件&lt;/span&gt;：&lt;br /&gt;
一般在 /etc/my.cnf 有就直接删除则可&lt;/p&gt;
&lt;p&gt;最后重复上面步骤 检查，直到彻底删除干净为准&lt;/p&gt;
&lt;h1 id=&#34;安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装&#34;&gt;#&lt;/a&gt; 安装&lt;/h1&gt;
&lt;p&gt;查看安装过程&lt;/p&gt;
&lt;h1 id=&#34;配置远程登录&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置远程登录&#34;&gt;#&lt;/a&gt; 配置远程登录&lt;/h1&gt;
&lt;p&gt;开启远程访问权限&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;mysql&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; grant all privileges on &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;* &lt;span class=&#34;token keyword&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;root&lt;/span&gt;@&lt;span class=&#34;token char&#34;&gt;&#39;%&#39;&lt;/span&gt; identified by &#39;hspedu100&#39;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;mysql&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; flush privileges&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;至此 算是安装完毕，如果有问题 就重启 mysql ：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;systemctl restart mysqld&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;如果还有问题，检查前面是否删除干净，重装一遍&lt;/p&gt;
&lt;h1 id=&#34;远程访问&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#远程访问&#34;&gt;#&lt;/a&gt; 远程访问&lt;/h1&gt;
&lt;p&gt;设置 远程访问的问题了，大部分都是因为防火墙导致；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/5-Linux%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/image-20230915165611859.png&#34; alt=&#34;image-20230915165611859&#34; /&gt;&lt;/p&gt;
&lt;p&gt;步骤：开启 mysql 权限 -&amp;gt; 关闭 linux 防火墙 -&amp;gt; 关闭 windows 防火墙&lt;/p&gt;
&lt;h1 id=&#34;关闭-linux防火墙&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关闭-linux防火墙&#34;&gt;#&lt;/a&gt; 关闭 linux 防火墙&lt;/h1&gt;
&lt;p&gt;1. 在 CentOS7 中关闭防火墙使用以下命令，&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 临时关闭&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;systemctl stop firewalld&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 禁止开机启动&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;systemctl disable firewalld&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;如果安装了 iptables-service，也可以使用下面的命令&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 安装&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yum install &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;y iptables&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;services&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 关闭防火墙&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;service iptables stop&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 检查防火墙状态&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;service iptables status&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;关闭windows-防火墙&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关闭windows-防火墙&#34;&gt;#&lt;/a&gt; 关闭 windows 防火墙&lt;/h1&gt;
&lt;p&gt;控制面板 -&amp;gt; 系统和安全 -&amp;gt; 防火墙 -&amp;gt; 启用或关闭 Windows 防火墙 -&amp;gt; 将两个选项设置为关闭&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/5-Linux%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/image-20230915170257437.png&#34; alt=&#34;image-20230915170257437&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/</guid>
            <title>1.数据库基础</title>
            <link>https://jihaipeng123.github.io/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/</link>
            <category term="数据库" scheme="https://jihaipeng123.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/" />
            <pubDate>Sat, 09 Sep 2023 14:13:22 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;../pictures/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/image-20230909142044884.png&#34; alt=&#34;image-20230909142044884&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/image-20230909142206476.png&#34; alt=&#34;image-20230909142206476&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;表操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表操作&#34;&gt;#&lt;/a&gt; 表操作&lt;/h1&gt;
&lt;h2 id=&#34;查询创建&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查询创建&#34;&gt;#&lt;/a&gt; 查询创建&lt;/h2&gt;
&lt;p&gt;查询当前数据库所有表&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;use itcast&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;     &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;进入数据库&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;show tables&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;查询表&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查看指定表结构&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;desc 表名；&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查询指定表的建表语句&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java1&#34;&gt;show create table 表名；
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;创建表结构&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;TABLE&lt;/span&gt; 表名&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	字段&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; 字段&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;类型 &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;COMMENT&lt;/span&gt; 字段&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;注释 &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;，&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	字段&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; 字段&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;类型 &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;COMMENT&lt;/span&gt; 字段&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;注释 &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;，&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	字段&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; 字段&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;类型 &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;COMMENT&lt;/span&gt; 字段&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;注释 &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;，&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	字段n 字段n类型 &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;COMMENT&lt;/span&gt;字段注释 &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;COMMENT&lt;/span&gt; 表注释 &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;数据类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据类型&#34;&gt;#&lt;/a&gt; 数据类型&lt;/h1&gt;
&lt;h2 id=&#34;数值类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数值类型&#34;&gt;#&lt;/a&gt; 数值类型&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/image-20230917145828380.png&#34; alt=&#34;image-20230917145828380&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;字符串类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字符串类型&#34;&gt;#&lt;/a&gt; 字符串类型&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/image-20230917150426550.png&#34; alt=&#34;image-20230917150426550&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;日期时间类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#日期时间类型&#34;&gt;#&lt;/a&gt; 日期时间类型&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/image-20230917150519694.png&#34; alt=&#34;image-20230917150519694&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;图形化界面工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#图形化界面工具&#34;&gt;#&lt;/a&gt; 图形化界面工具&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/image-20230917150745656.png&#34; alt=&#34;image-20230917150745656&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;安装使用datagrip&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装使用datagrip&#34;&gt;#&lt;/a&gt; 安装使用 DataGrip&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/image-20230917150923398.png&#34; alt=&#34;image-20230917150923398&#34; /&gt;&lt;/p&gt;
&lt;p&gt;创建数据库&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;以下俩种方式都可以创建数据库：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create database itcast&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create schema itcast&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;创建表&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/image-20230917151335035.png&#34; alt=&#34;image-20230917151335035&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在 DataGrip 中执行 SQL 语句&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;在指定的数据库上，右键&lt;span class=&#34;token class-name&#34;&gt;New&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Query&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Console&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;存储引擎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#存储引擎&#34;&gt;#&lt;/a&gt; 存储引擎&lt;/h1&gt;
&lt;h2 id=&#34;mysql体系结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql体系结构&#34;&gt;#&lt;/a&gt; MySQL 体系结构&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/image-20230917151925810.png&#34; alt=&#34;image-20230917151925810&#34; /&gt;&lt;/p&gt;
&lt;p&gt;1). 连接层&lt;br /&gt;
最上层是一些客户端和链接服务，包含本地 sock 通信和大多数基于客户端 / 服务端工具实现的类似于 TCP/IP 的通信。主要完成一些类似于连接处理、授权认证、及相关的安全方案。在该层上引入了线程池的概念，为通过认证安全接入的客户端提供线程。同样在该层上可以实现基于 SSL 的安全链接。服务器也会为安全接入的每个客户端验证它所具有的操作权限。&lt;/p&gt;
&lt;p&gt;2). 服务层&lt;br /&gt;
第二层架构主要完成大多数的核心服务功能，如 SQL 接口，并完成缓存的查询，SQL 的分析和优化，部分内置函数的执行。所有跨存储引擎的功能也在这一层实现，如 过程、函数等。在该层，服务器会解析查询并创建相应的内部解析树，并对其完成相应的优化如确定表的查询的顺序，是否利用索引等，最后生成相应的执行操作。如果是 select 语句，服务器还会查询内部的缓存，如果缓存空间足够大，这样在解决大量读操作的环境中能够很好的提升系统的性能。&lt;/p&gt;
&lt;p&gt;3). 引擎层&lt;br /&gt;
存储引擎层， 存储引擎真正的负责了 MySQL 中数据的存储和提取，服务器通过 API 和存储引擎进行通信。不同的存储引擎具有不同的功能，这样我们可以根据自己的需要，来选取合适的存储引擎。数据库中的索引是在存储引擎层实现的。&lt;/p&gt;
&lt;p&gt;4). 存储层&lt;br /&gt;
数据存储层， 主要是将数据 (如: redolog、undolog、数据、索引、二进制日志、错误日志、查询日志、慢查询日志等) 存储在文件系统之上，并完成与存储引擎的交互。和其他数据库相比，MySQL 有点与众不同，它的架构可以在多种不同场景中应用并发挥良好作用。主要体现在存储引擎上，插件式的存储引擎架构，将查询处理和其他的系统任务以及数据的存储提取分离。这种架构可以根据业务的需求和实际需要选择合适的存储引擎。&lt;/p&gt;
&lt;h2 id=&#34;存储引擎-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#存储引擎-2&#34;&gt;#&lt;/a&gt; 存储引擎&lt;/h2&gt;
&lt;p&gt;建表时指定存储引擎&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;TABLE&lt;/span&gt; 表名&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;字段&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; 字段&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;类型 &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;COMMENT&lt;/span&gt; 字段&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;注释 &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;字段n 字段n类型 &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;COMMENT&lt;/span&gt; 字段n注释 &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;ENGINE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;INNODB&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;COMMENT&lt;/span&gt; 表注释 &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查询当前数据库支持的存储引擎&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;show engines&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;存储引擎特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#存储引擎特点&#34;&gt;#&lt;/a&gt; 存储引擎特点&lt;/h1&gt;
&lt;p&gt;介绍三种存储引擎 InnoDB、MyISAM、Memory 的特点。&lt;/p&gt;
&lt;h2 id=&#34;innodb&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#innodb&#34;&gt;#&lt;/a&gt; InnoDB&lt;/h2&gt;
&lt;p&gt;介绍&lt;/p&gt;
&lt;p&gt;InnoDB 是一种兼顾高可靠性和高性能的通用存储引擎，在 MySQL 5.5 之后，InnoDB 是默认的 MySQL 存储引擎。&lt;/p&gt;
&lt;p&gt;特点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;DML 操作遵循 ACID 模型，支持事务；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;行级锁，提高并发访问性能；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持外键 FOREIGN KEY 约束，保证数据的完整性和正确性；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;逻辑存储结构&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/image-20230917152928877.png&#34; alt=&#34;image-20230917152928877&#34; /&gt;&lt;/p&gt;
&lt;p&gt;表空间 : InnoDB 存储引擎逻辑结构的最高层，ibd 文件其实就是表空间文件，在表空间中可以包含多个 Segment 段。&lt;br /&gt;
段：表空间是由各个段组成的， 常见的段有数据段、索引段、回滚段等。InnoDB 中对于段的管理，都是引擎自身完成，不需要人为对其控制，一个段中包含多个区。&lt;br /&gt;
区：区是表空间的单元结构，每个区的大小为 1M。 默认情况下， InnoDB 存储引擎页大小为 16K， 即一个区中一共有 64 个连续的页。&lt;br /&gt;
页：页是组成区的最小单元，页也是 InnoDB 存储引擎磁盘管理的最小单元，每个页的大小默认为 16KB。为了保证页的连续性，InnoDB 存储引擎每次从磁盘申请 4-5 个区。&lt;br /&gt;
行 : InnoDB 存储引擎是面向行的，也就是说数据是按行进行存放的，在每一行中除了定义表时所指定的字段以外，还包含两个隐藏字段 (后面会详细介绍)。&lt;/p&gt;
&lt;h2 id=&#34;myisam&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#myisam&#34;&gt;#&lt;/a&gt; MyISAM&lt;/h2&gt;
&lt;p&gt;介绍：&lt;br /&gt;
MyISAM 是 MySQL 早期的默认存储引擎。&lt;/p&gt;
&lt;p&gt;2). 特点&lt;br /&gt;
不支持事务，不支持外键&lt;br /&gt;
支持表锁，不支持行锁&lt;br /&gt;
访问速度快&lt;/p&gt;
&lt;h2 id=&#34;memory&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#memory&#34;&gt;#&lt;/a&gt; Memory&lt;/h2&gt;
&lt;p&gt;emory 引擎的表数据时存储在内存中的，由于受到硬件问题、或断电问题的影响，只能将这些表作为临时表或缓存使用。&lt;br /&gt;
特点&lt;br /&gt;
内存存放&lt;br /&gt;
 hash 索引（默认）&lt;br /&gt;
文件&lt;br /&gt;
 xxx.sdi：存储表结构信息&lt;/p&gt;
&lt;h2 id=&#34;区别和特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#区别和特点&#34;&gt;#&lt;/a&gt; 区别和特点&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/image-20230917155711793.png&#34; alt=&#34;image-20230917155711793&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;存储引擎选择&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#存储引擎选择&#34;&gt;#&lt;/a&gt; 存储引擎选择&lt;/h2&gt;
&lt;p&gt;在选择存储引擎时，应该根据应用系统的特点选择合适的存储引擎。对于复杂的应用系统，还可以根据实际情况选择多种存储引擎进行组合。&lt;br /&gt;
InnoDB:&lt;/p&gt;
&lt;p&gt;是 Mysql 的默认存储引擎，支持事务、外键。如果应用对事务的完整性有比较高的要求，在并发条件下要求数据的一致性，数据操作除了插入和查询之外，还包含很多的更新、删除操作，那么 InnoDB 存储引擎是比较合适的选择。&lt;br /&gt;
MyISAM ：&lt;/p&gt;
&lt;p&gt;如果应用是以读操作和插入操作为主，只有很少的更新和删除操作，并且对事务的完整性、并发性要求不是很高，那么选择这个存储引擎是非常合适的。&lt;br /&gt;
MEMORY：&lt;/p&gt;
&lt;p&gt;将所有数据保存在内存中，访问速度快，通常用于临时表及缓存。MEMORY 的缺陷就是&lt;br /&gt;
对表的大小有限制，太大的表无法缓存在内存中，而且无法保障数据的安全性。&lt;/p&gt;
&lt;h1 id=&#34;索引&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#索引&#34;&gt;#&lt;/a&gt; 索引&lt;/h1&gt;
&lt;p&gt;索引（index）是帮助 MySQL 高效获取数据的数据结构 (有序)。在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用（指向）数据， 这样就可以在这些数据结构上实现高级查找算法，这种数据结构就是索引。&lt;/p&gt;
&lt;h2 id=&#34;特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#特点&#34;&gt;#&lt;/a&gt; 特点&lt;/h2&gt;
&lt;p&gt;优势：提高数据检索的效率，降低数据库 IO 成本；通过索引列对数据进行排序，降低数据排序的成本，降低 cpu 的消耗；&lt;/p&gt;
&lt;p&gt;劣势：索引列占用空间；降低更新表的速度，如对表进行 insert,update 时，效率降低&lt;/p&gt;
&lt;h2 id=&#34;索引结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#索引结构&#34;&gt;#&lt;/a&gt; 索引结构&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/image-20230917160404318.png&#34; alt=&#34;image-20230917160404318&#34; /&gt;&lt;/p&gt;
&lt;p&gt;二叉树&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/image-20230917160750413.png&#34; alt=&#34;image-20230917160750413&#34; /&gt;&lt;/p&gt;
&lt;p&gt;如果选择二叉树作为索引结构，会存在以下缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;顺序插入时，会形成一个链表，查询性能大大降低。&lt;/li&gt;
&lt;li&gt;大数据量情况下，层级较深，检索速度慢。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;B-Tree&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/image-20230917161043612.png&#34; alt=&#34;image-20230917161043612&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/image-20230917161110522.png&#34; alt=&#34;image-20230917161110522&#34; /&gt;&lt;/p&gt;
&lt;p&gt;MySQL 索引数据结构对经典的 B+Tree 进行了优化。在原 B+Tree 的基础上，增加一个指向相邻叶子节点的链表指针，就形成了带有顺序指针的 B+Tree，提高区间访问的性能，利于排序。&lt;/p&gt;
&lt;p&gt;Hash&lt;/p&gt;
&lt;p&gt;哈希索引就是采用一定的 hash 算法，将键值换算成新的 hash 值，映射到对应的槽位上，然后存储在 hash 表中。&lt;/p&gt;
&lt;p&gt;MySQL 中，支持 hash 索引的是 Memory 存储引擎。 而 InnoDB 中具有自适应 hash 功能，hash 索引是 InnoDB 存储引擎根据 B+Tree 索引在指定条件下自动构建的。&lt;/p&gt;
&lt;h2 id=&#34;索引分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#索引分类&#34;&gt;#&lt;/a&gt; 索引分类&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/image-20230917161342539.png&#34; alt=&#34;image-20230917161342539&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/image-20230917161417340.png&#34; alt=&#34;image-20230917161417340&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;回表查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#回表查询&#34;&gt;#&lt;/a&gt; 回表查询&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/image-20230917161523916.png&#34; alt=&#34;image-20230917161523916&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果存在主键，主键索引就是聚集索引。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果不存在主键，将使用第一个唯一（UNIQUE）索引作为聚集索引。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果表没有主键，或没有合适的唯一索引，则 InnoDB 会自动生成一个 rowid 作为隐藏的聚集索引。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;索引语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#索引语法&#34;&gt;#&lt;/a&gt; 索引语法&lt;/h2&gt;
&lt;p&gt;创建索引&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;UNIQUE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;FULLTEXT&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;INDEX&lt;/span&gt; index_name &lt;span class=&#34;token class-name&#34;&gt;ON&lt;/span&gt; table_name &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;index_col_name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查看索引&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;SHOW&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;INDEX&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FROM&lt;/span&gt; table_name &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;删除索引&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;DROP&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;INDEX&lt;/span&gt; index_name &lt;span class=&#34;token class-name&#34;&gt;ON&lt;/span&gt; table_name &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/5-%E7%BB%84-%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</guid>
            <title>5.组.权限管理</title>
            <link>https://jihaipeng123.github.io/5-%E7%BB%84-%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</link>
            <category term="Linux" scheme="https://jihaipeng123.github.io/categories/Linux/" />
            <pubDate>Fri, 08 Sep 2023 10:03:58 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;linux组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#linux组&#34;&gt;#&lt;/a&gt; Linux 组&lt;/h1&gt;
&lt;p&gt;在 linux 中的每个用户必须属于一个组，不能独立于组外。在 linux 中每个文件有所有者、所在组、其它组的概念。&lt;/p&gt;
&lt;p&gt;1) 所有者&lt;/p&gt;
&lt;p&gt;2) 所在组&lt;/p&gt;
&lt;p&gt;3) 其它组&lt;/p&gt;
&lt;p&gt;4) 改变用户所在的组&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/5-%E7%BB%84-%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/image-20230908100607586.png&#34; alt=&#34;image-20230908100607586&#34; /&gt;&lt;/p&gt;
&lt;p&gt;文件 / 目录所有者一般为文件的创建者，谁创建了该文件，就自然的成为该文件的所有者。&lt;/p&gt;
&lt;p&gt;查看文件的所有者指令：ls – ahl&lt;/p&gt;
&lt;p&gt;修改文件所有者指令 ：chown 用户名  文件名&lt;/p&gt;
&lt;p&gt;应用案例要求：使用 root 创建一个文件 apple.txt，然后将其所有者修改成 tom;      chown  tom  apple.txt&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/4-Linux%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid>
            <title>4.Linux安装配置</title>
            <link>https://jihaipeng123.github.io/4-Linux%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link>
            <category term="Linux" scheme="https://jihaipeng123.github.io/categories/Linux/" />
            <pubDate>Thu, 31 Aug 2023 18:51:07 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Linux 之 JavaEE 定制篇 - 搭建 JavaEE 环境&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/4-Linux%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20230831185412261.png&#34; alt=&#34;image-20230831185412261&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;安装-jdk&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装-jdk&#34;&gt;#&lt;/a&gt; 安装 JDK&lt;/h1&gt;
&lt;h2 id=&#34;安装步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装步骤&#34;&gt;#&lt;/a&gt; 安装步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在虚拟机上操作  mkdir /opt/jdk&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过 xftp7 上传到 /opt/jdk 下&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cd /opt/jdk&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解压 tar -zxvf jdk-8u261-linux-x64.tar.gz&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mkdir /usr/local/java&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mv /opt/jdk/jdk1.8.0_261 /usr/local/java&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置环境变量的配置文件 vim /etc/profile&lt;/p&gt;
&lt;p&gt;打开文件，找到最后加入下面俩句话 (保存)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;export JAVA_HOME=/usr/local/java/jdk1.8.0_261&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;export PATH=&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;J&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mi&gt;M&lt;/mi&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;JAVA_HOME/bin:&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.09618em;&#34;&gt;J&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.32833099999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;PATH&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;source /etc/profile 刷新环境变量，指令不可少。[让新的环境变量生效]&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;测试安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试安装&#34;&gt;#&lt;/a&gt; 测试安装&lt;/h2&gt;
&lt;p&gt;编写一个简单的 Hello.java 输出 &amp;quot;hello,world!&amp;quot;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vim Hello.java&lt;/li&gt;
&lt;li&gt;javac Hello.java&lt;/li&gt;
&lt;li&gt;java Hello&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tomcat-的安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tomcat-的安装&#34;&gt;#&lt;/a&gt; Tomcat 的安装&lt;/h1&gt;
&lt;h2 id=&#34;步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#步骤&#34;&gt;#&lt;/a&gt; 步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;上传安装文件，并解压缩到 /opt/tomcat&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入解压目录 /bin , 启动 tomcat 命令为   ./startup.sh&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开放端口 8080 , 执行命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;firewall -cmd --permanent --add-port=8080/tcp&lt;/li&gt;
&lt;li&gt;firewall -cmd --reload&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;查看端口是否开放：firewall -cmd --query-port=8080/tcp&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;测试安装-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试安装-2&#34;&gt;#&lt;/a&gt; 测试安装&lt;/h2&gt;
&lt;p&gt;在 windows、Linux 下 访问 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xpbnV4aXA6ODA4MA==&#34;&gt;http://linuxip:8080&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/4-Linux%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20230831193911339.png&#34; alt=&#34;image-20230831193911339&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 Linux 的浏览器中：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xpbnV4aXA6ODA4MC9oc3AuaHRtbA==&#34;&gt;http://linuxip:8080/hsp.html&lt;/span&gt; 查看&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;idea-2020-的安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#idea-2020-的安装&#34;&gt;#&lt;/a&gt; idea 2020 的安装&lt;/h1&gt;
&lt;h2 id=&#34;步骤-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#步骤-2&#34;&gt;#&lt;/a&gt; 步骤&lt;/h2&gt;
&lt;p&gt;（破解版真的香）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS9pZGVhL2Rvd25sb2FkLyNzZWN0aW9uPXdpbmRvd3M=&#34;&gt;https://www.jetbrains.com/idea/download/#section=windows&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;解压缩到 /opt/idea&lt;/li&gt;
&lt;li&gt;启动 idea bin 目录下 ./idea.sh，配置 jdk&lt;/li&gt;
&lt;li&gt;在 VM 下编写 Hello world 程序并测试成功！&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/4-Linux%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20230831185652129.png&#34; alt=&#34;image-20230831185652129&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;mysql57-的安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql57-的安装&#34;&gt;#&lt;/a&gt; mysql5.7 的安装&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;. 新建文件夹 /opt/mysql，并 cd 进去&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行 wget &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2Rldi5teXNxbC5jb20vZ2V0L215c3FsLTUuNy4yNi0xLmVsNy54ODZfNjQucnBtLWJ1bmRsZS50YXIlRUYlQkMlOEM=&#34;&gt;http://dev.mysql.com/get/mysql-5.7.26-1.el7.x86_64.rpm-bundle.tar，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在 Linux 下直接获取并下载 mysql 安装包，开发中常用&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;PS：centos7.6 自带的类 mysql 数据库是 mariadb，会跟 mysql 冲突，要先删除。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;运行 tar -xvf mysql-5.7.26-1.el7.x86_64.rpm-bundle.tar&lt;/li&gt;
&lt;li&gt;运行 rpm -qa|grep mari，查询 mariadb 相关安装包&lt;img data-src=&#34;../pictures/4-Linux%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20230831185919784.png&#34; alt=&#34;image-20230831185919784&#34; /&gt;&lt;/li&gt;
&lt;li&gt;运行 rpm -e --nodeps mariadb-libs，都卸载&lt;/li&gt;
&lt;li&gt;然后开始真正安装 mysql，依次运行以下几条&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;rpm -ivh mysql-community-common-5.7.26-1.el7.x86_64.rpm&lt;br /&gt;
rpm -ivh mysql-community-libs-5.7.26-1.el7.x86_64.rpm&lt;br /&gt;
rpm -ivh mysql-community-client-5.7.26-1.el7.x86_64.rpm&lt;br /&gt;
rpm -ivh mysql-community-server-5.7.26-1.el7.x86_64.rpm&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;运行 systemctl start mysqld.service，启动 mysql&lt;/li&gt;
&lt;li&gt;然后开始设置 root 用户密码&lt;img data-src=&#34;../pictures/4-Linux%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20230831185941731.png&#34; alt=&#34;image-20230831185941731&#34; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Mysql 自动给 root 用户设置随机密码，运行 grep &amp;quot;password&amp;quot; /var/log/mysqld.log 可看到当前密码&lt;/p&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;运行 mysql -u root -p，用 root 用户登录，提示输入密码可用上述的，可以成功登陆进入 mysql 命令行&lt;/li&gt;
&lt;li&gt;设置 root 密码，对于个人开发环境，如果要设比较简单的密码（生产环境服务器要设复杂密码），可以运行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;set global validate_password_policy=0; 提示密码设置策略&lt;br /&gt;
（validate_password_policy 默认值 1，）&lt;/p&gt;
&lt;ol start=&#34;11&#34;&gt;
&lt;li&gt;set password for &#39;root&#39;@&#39;localhost&#39; =password(&#39;hspedu100&#39;);&lt;/li&gt;
&lt;li&gt;运行 flush privileges; 使密码设置生效&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;quit   退出数据库&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/3-Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
            <title>3.Linux常用命令</title>
            <link>https://jihaipeng123.github.io/3-Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
            <category term="Linux" scheme="https://jihaipeng123.github.io/categories/Linux/" />
            <pubDate>Wed, 30 Aug 2023 10:40:52 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;关机注销重启&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关机注销重启&#34;&gt;#&lt;/a&gt; 关机注销重启&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830104820906.png&#34; alt=&#34;image-20230830104820906&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;系统信息和性能查看&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#系统信息和性能查看&#34;&gt;#&lt;/a&gt; 系统信息和性能查看&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830104936576.png&#34; alt=&#34;image-20230830104936576&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830104953152.png&#34; alt=&#34;image-20230830104953152&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;磁盘和分区&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#磁盘和分区&#34;&gt;#&lt;/a&gt; 磁盘和分区&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105028686.png&#34; alt=&#34;image-20230830105028686&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;用户和用户组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#用户和用户组&#34;&gt;#&lt;/a&gt; 用户和用户组&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105108202.png&#34; alt=&#34;image-20230830105108202&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;网络和进程管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#网络和进程管理&#34;&gt;#&lt;/a&gt; 网络和进程管理&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105143706.png&#34; alt=&#34;image-20230830105143706&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105202375.png&#34; alt=&#34;image-20230830105202375&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;常见系统服务命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见系统服务命令&#34;&gt;#&lt;/a&gt; 常见系统服务命令&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105245852.png&#34; alt=&#34;image-20230830105245852&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;文件和目录操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件和目录操作&#34;&gt;#&lt;/a&gt; 文件和目录操作&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105317803.png&#34; alt=&#34;image-20230830105317803&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105400233.png&#34; alt=&#34;image-20230830105400233&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105414945.png&#34; alt=&#34;image-20230830105414945&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;文件查看和处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件查看和处理&#34;&gt;#&lt;/a&gt; 文件查看和处理&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105445618.png&#34; alt=&#34;image-20230830105445618&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105501127.png&#34; alt=&#34;image-20230830105501127&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;打包和解压&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#打包和解压&#34;&gt;#&lt;/a&gt; 打包和解压&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105539241.png&#34; alt=&#34;image-20230830105539241&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;rpm包管理命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rpm包管理命令&#34;&gt;#&lt;/a&gt; RPM 包管理命令&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105626043.png&#34; alt=&#34;image-20230830105626043&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;yum包管理命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#yum包管理命令&#34;&gt;#&lt;/a&gt; YUM 包管理命令&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105651606.png&#34; alt=&#34;image-20230830105651606&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;dpkg包管理命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dpkg包管理命令&#34;&gt;#&lt;/a&gt; DPKG 包管理命令&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105730627.png&#34; alt=&#34;image-20230830105730627&#34; /&gt;&lt;/p&gt;
&lt;p&gt;APT 软件工具&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105806146.png&#34; alt=&#34;image-20230830105806146&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%84%8F%E4%B9%89/</guid>
            <title>写博客的意义</title>
            <link>https://jihaipeng123.github.io/%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%84%8F%E4%B9%89/</link>
            <category term="博客" scheme="https://jihaipeng123.github.io/categories/%E5%8D%9A%E5%AE%A2/" />
            <category term="博客" scheme="https://jihaipeng123.github.io/tags/%E5%8D%9A%E5%AE%A2/" />
            <pubDate>Tue, 29 Aug 2023 13:57:08 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;听完&lt;span class=&#34;red&#34;&gt;程序羊的 “为什么程序员必须写技术博客”&lt;/span&gt;，我好像懂了一点。&lt;/p&gt;
&lt;p&gt;如何培养自己的总结能力，知识学的不深，学了总忘。&lt;/p&gt;
&lt;p&gt;一定要让自己学的知识在某个地方留下一道刻痕，不容易流失。&lt;/p&gt;
&lt;p&gt;每学一个东西，试着输出点什么，笔记，心得，源码的小 demo。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;blue&#34;&gt;博客的意义所在：记录&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;作用：&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;坚持写博客百利无一害；&lt;/p&gt;
&lt;p&gt;技术博客绝对的面试加分项；&lt;/p&gt;
&lt;p&gt;写博客可以系统的整合自己某一阶段的学习成果；&lt;/p&gt;
&lt;p&gt;加深对技术点的理解（看的过程 == 认知，写的过程 == 复现）；&lt;/p&gt;
&lt;p&gt;让自己有一张 “自己的知识清单”；&lt;/p&gt;
&lt;p&gt;个人博客是自己很好的备忘录 + 踩坑记录；&lt;/p&gt;
&lt;p&gt;通过技术博客，结交志同道合的朋友；&lt;/p&gt;
&lt;p&gt;提高自己的写作水平，语言复述；&lt;/p&gt;
&lt;div class=&#34;note danger&#34;&gt;
&lt;p&gt;误区：&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;初学者博客没技术含量，不是牛人也可以写博客。你只要写就可以了。&lt;/p&gt;
&lt;p&gt;要有正确的态度，内容为王，内容沉淀为主，多坚持一会&lt;/p&gt;
&lt;p&gt;敬畏之心，尊重知识产权，引用别人代码，文字，片段表明出处，尽量自己写笔记&lt;/p&gt;
&lt;p&gt;一定要可复现的内容&lt;/p&gt;
&lt;p&gt;如何写：&lt;/p&gt;
&lt;p&gt;写作形式：markdown, 习惯了就好&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;内容：&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;写入门系列（备忘录，笔记，基础理解，踩坑记录）&lt;/p&gt;
&lt;p&gt;写实战类文章（安装过程，环境搭建，操作记录等）&lt;/p&gt;
&lt;p&gt;一年半载后可以写源码分析，模式提炼，做开源项目&lt;/p&gt;
&lt;p&gt;心态放正，敢于去写，敢于尝试，敢于展示，敢于分享&lt;/p&gt;
&lt;p&gt;从无到有，开头难，坚持下去，&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/%E5%9B%9E%E9%A1%BE%E6%80%BB%E7%BB%93%E5%A4%A7%E4%B8%80%E7%94%9F%E6%B4%BB%E5%90%8E%E7%BB%AD/</guid>
            <title>回顾总结大一生活后续</title>
            <link>https://jihaipeng123.github.io/%E5%9B%9E%E9%A1%BE%E6%80%BB%E7%BB%93%E5%A4%A7%E4%B8%80%E7%94%9F%E6%B4%BB%E5%90%8E%E7%BB%AD/</link>
            <category term="自能成羽翼，何必仰云梯" scheme="https://jihaipeng123.github.io/categories/%E8%87%AA%E8%83%BD%E6%88%90%E7%BE%BD%E7%BF%BC%EF%BC%8C%E4%BD%95%E5%BF%85%E4%BB%B0%E4%BA%91%E6%A2%AF/" />
            <pubDate>Tue, 29 Aug 2023 07:51:32 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;做事情应该有始有终，基于昨晚草草的结束，我决定继续写一点东西来讲述讲述。上了大学，这是我第一次写这么长的作文了（真不容易，感动自我了。呜呜～）当你静下心来写的时候，时间真的走的很快，不要吝啬时间，虽然看似好几个小时只写了一篇好似没大用的仿佛狗啃的文章，那你的格局就小喽，这也算是自己对过去一年的时间的总结。总结反思很重要的，总该对过去记录一下。为曾经虚晃一年，碌碌无为的一年勉强的来写一篇总结。&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;昨天写过什么，别问问就是忘了，但是今天的我很清醒，大抵我知道自己要写什么吧。🤔&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span class=&#34;orange&#34;&gt;大雁说过：不懂得浪费时间的人绝对考不上研。&lt;/span&gt;（大雁讲的视频都好有道理，等我哪天好好刷一下）学习讲究效率，讲究方法，而不是耗时间，不是看你坐板凳是否做了一天。我自己好像就中招了，反对无效学习，学习是给自己学的，不是装给他他人看的。感觉自己学了一天，回过头来，好好想一下自己真的到底学过多少东西，收获了多少。学 3 分钟看 5 分钟抖音，结果这仅学的 3 分钟内心里还在等着接受别人的消息。好像说的妥妥的就是我。反思一下：学习的时候就是学习，全神贯注的学。手机真的 “红颜祸水”。说到手机，给自己一个警告吧：手机真的没啥用，玩手机无非是刷抖音，玩游戏，聊天，好好想想这些能让你成长吗？？？跑远了，回来... 学习的时候就要学习，玩耍的时候就放开玩。哎，俺从小就是这样，学的时候想玩，玩的时候想学，大家呢？自己总是可以多多培养一下兴趣，“雨露均沾”🙂也不是不可以的，劳逸结合，才能更加高效的学习。&lt;/p&gt;
&lt;p&gt;突然想起这个话题，有必要认真的讲一下：&lt;span class=&#34;blue&#34;&gt;我就是我，我们只做最真实的自己。&lt;/span&gt;我们总是很在意别人的眼光，在意别人的看法。从小学一路走来，想想哪一位大佬不是都那么的有个性。上课瞧着二郎腿，叼着牙签睡觉，考试永远第一的；一直戴着搞笑帽子，走路唱着难歌走进清华的；永远光头情商为 0 的大佬，总而言之，哪一位大佬都是那样的不一样。我是妥妥的菜狗，我也没有人家那样的实实力（好像说错了，我还没努力呢）&lt;span class=&#34;blue&#34;&gt;狭路相逢勇者胜。&lt;/span&gt;😠所以说：永远不要在意别人对你的看法，大家可能会吐槽，（我也会吐槽的哈哈）但是事实就是无非你吐槽俩句，有影响自己的生活吗？不影响。做好最真实的自己，我的生活我的行为我自己主宰。虽然这样显得自己好像很不合群，去所谓，适合你的圈子总会有的。容我吐槽一下：大学里真的替社会给我给我上了一节课呐，打好全班关系真的很重要。记得有次优秀团员评选，虽然没啥用吧，（但是人总是有欲望的，有总比没有好)，是学生大家评选，哎，我的那票数惨不忍睹，单纯的我认为只要学习好啥都可以。无所谓，我认为：没必要的去迎合所有人，陪他们打游戏？闲的瞎聊？无聊愚蠢的行为。可能在别人眼里我是很 “独” 的一个人吧。做好自己就可以了。反对无效社交，嗯，我真聪明・・・😝&lt;/p&gt;
&lt;p&gt;还有就是，进入大学的一年时间，我认识了好多优秀的学长们，朋友们。每一个人都在努力，可能好多人认为大学里就是玩耍的地方。正如我之前提过的，每个人都要为自己错误的行为买单，熬夜打游戏，上课睡觉的都是，但是你为什么不去和那些日日夜夜学习的那些人学习呢？优秀的人总是优秀的，图书馆里那每天背着书包，等着开门，为自己奋斗的・，回宿舍路上耳机里放的是英语听力的，刷视频刷着宋浩的课程，想来自己原来就是小丑，居然还在为着自己今天背了 1 个单词沾沾自喜。大一结束了，在学长们的答疑下，渐渐的我对自己的未来有了些许的规划。😉&lt;/p&gt;
&lt;p&gt;大二要多学一些技术，技多不压身嘛，有精力的话我会自学大学所有的课程。多参加一些比赛，真的很羡慕拿奖的感觉，虽然不知道拿奖能干什么，但是总是有好处的。大三应该要全力备考考研了吧。我不相信那些什么说什么备考时间长了坚持不下去，只要付出一定会有收获。前提你得真的学习，而不是那些所谓的形式主义。大四俺一定会成功上岸的！！！考研无非就是公共平平得答试卷，靠得都是大家的实力，我喜欢。还有一个长期的计划，每天都必须抽出时间学英语。&lt;/p&gt;
&lt;p&gt;自己有个算是喜好吧，&lt;span class=&#34;yellow&#34;&gt;总是喜欢优秀的人。&lt;/span&gt;“男女老少通吃哇”，这可怎么整呐，遇到大佬，总是很自卑胆小，偷偷的努力去超越。遇到那些不学习的甚至影响自己的，尽量远离，这就是为什么我不回宿舍的原因，回宿舍就只有打游戏了（我和舍友关系还是非常好的），我暗恋过每一个学习好的女生哈哈・・・・（当然开玩笑），妙不可言。好讨厌别人说我卷，我是真的菜，虽然说每天学习了，但是回过头来真的不知道自己学了什么。反思一下：学习过程有点快，没有做到深入理解，只是单纯的听一遍课是不够的・。单纯的听课没有实践。以后每天听完课，要复盘一下，学完课程一定要尝试去代码实现操作一下。永远不要惧怕困难。第一次整这个博客别提有多头大了🤡，什么也不懂，都是靠着别人搭建起来的。后来让自己玩坏了，全部都删从心安装，虽然花费了很多时间但是很成功的完成了，现在回过头来去看过程代码，so easy。😁原来你对自己的潜力一无所知，没有什么东西解决不了，你都没有尝试就已经害怕了，这是永远都不能有的。哪怕尝试了还没有解决，我们可以找学长朋友帮忙，那不雷军说过 “&lt;span class=&#34;green&#34;&gt;实际上，无论你遇到什么问题，别人可能都遇到过，都解决了，甚至都有标准答案，你只要找别人问问就可以了&lt;/span&gt;”。&lt;span class=&#34;green&#34;&gt;你所经历的所有挫折，失败，甚至那些看似毫无意义消磨时间的事情，都将成为你最宝贵的财富。&lt;/span&gt;哈哈，我还年轻&lt;span&gt;我若成佛，天下无魔；我若成魔，佛奈我何&lt;/span&gt;～，要不多做一些看似毫无意义消磨时间的事情？？？随便大胆的去做一些自己想要做的事情，不要害怕，不要去想后果，你只管过程，我不相信命运，我只相信人定胜天，逆天改命。我最喜欢的一句话 “&lt;span class=&#34;blue&#34;&gt;我若成佛，天下无魔；我若成魔，佛奈我何&lt;/span&gt;”😆&lt;/p&gt;
&lt;p&gt;好像想说的也就差不多就这些了吧，不对还有还有。哎，想说什么却又无从开口。可能妈妈又因为我的 4 级日夜无眠吧，现在连打电话的勇气都没有了。一年了，不仅我长了一岁，更多的是妈妈又老了一岁。爸爸也接着日复一日的苦活，哎... 不提了，接着努力学习吧，不要辜负父母们对自己的期望，希望每次聊天的时候都能给他们带去好消息。&lt;/p&gt;
&lt;p&gt;读书不是为了某一刻的熠熠生辉，而是为了人生的每一个时刻，都能够拥有自己的，不管结果怎样，全力以赴去努力过的青春。&lt;span class=&#34;purple&#34;&gt;少年拉满弓，不惧岁月不惧风。我将带着过去的未完成，在未来奔跑起来，即使道路泥泞，也会收获遍野的灿漫。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;note warning&#34;&gt;
&lt;p&gt;整整一年的时间也就由这短短的一篇文章就给结束啦&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;总结是写完了，不知道自己是否真的会像写的这样做，不晓得之后自己再看这篇文章有何感想。（我不会在抽风吧哈哈）写这篇文章就当对自己勉励一下吧，原来自己还是清醒的，至于是否在清醒中堕落就不知道了！！&lt;span class=&#34;aqua&#34;&gt;人就该有所追求，星光不问赶路人，时光不负有心人，愿未来的我们不为虚度年华而悔恨，所愿皆所得，让我们各自努力，顶峰相见。&lt;/span&gt;💝&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;（最后修修改改，整点特效吧。--- 主打摆烂）&lt;/p&gt;
&lt;/div&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/%E5%9B%9E%E9%A1%BE%E6%80%BB%E7%BB%93%E5%A4%A7%E4%B8%80%E7%94%9F%E6%B4%BB/</guid>
            <title>回顾总结大一生活</title>
            <link>https://jihaipeng123.github.io/%E5%9B%9E%E9%A1%BE%E6%80%BB%E7%BB%93%E5%A4%A7%E4%B8%80%E7%94%9F%E6%B4%BB/</link>
            <category term="自能成羽翼，何必仰云梯" scheme="https://jihaipeng123.github.io/categories/%E8%87%AA%E8%83%BD%E6%88%90%E7%BE%BD%E7%BF%BC%EF%BC%8C%E4%BD%95%E5%BF%85%E4%BB%B0%E4%BA%91%E6%A2%AF/" />
            <pubDate>Mon, 28 Aug 2023 20:13:18 +0800</pubDate>
            <description><![CDATA[ &lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;从何说起呢？好问题😃&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;看着反复删除的开头，和我这缓慢的打字速度，我猜这篇总结可能会在黑暗中终结吧。&lt;/p&gt;
&lt;p&gt;想说什么却又不敢说，无所谓啦，想起什么就写什么了，反正能没人看到我写的，某些人看到的话 --- 就当分享给朋友也是可以的。我还是有朋友的，有朋友的感觉真的不错；&lt;/p&gt;
&lt;p&gt;今天晚上不学了，收拾一下心情，反省自己，换副姿态，重新开始。&lt;/p&gt;
&lt;p&gt;回归正题：&lt;/p&gt;
&lt;p&gt;今天是 2023 年 8 月 28 日，我开始做我对过去的总结，人生的第一次，哈哈。曾经无数次的想要养成做日常笔记的习惯，感觉很帅。高中的时候，舍友每天都会拿起自己的小本本总结一下我就傻傻的看着。想来，别提了，我太懒；以后我会经常的更新我的日常生活，分享心情。说出来就是痛快，放个小歌 ，喝个小酒，随意的敲击键盘...（原谅我，我在做梦😂）&lt;/p&gt;
&lt;p&gt;不知不觉大一转眼就过去了，时间真的不等人啊！从曾经刚来学校的不停吐槽的我到如今只能自我安慰随遇而安的摆烂的我，早已没有了当年的那股傲气，想想曾经高中奋斗的 3 年，真的满是不甘，想想高一的第一，高二的前几，高三的几十，想想智学网上那一次次的考试，想想那 3 次模拟 5 百六七的感觉，再想想高考的 506，哎，过去的都过去了，想想网上那些安慰高考失利的孩子的话，高考只是通向成功的一条道路，想想有道理。于是我奔向未知的前方，来到了石家庄学院。&lt;/p&gt;
&lt;p&gt;这算我人生的起点了吧，以后出去找工作别人会说自己是哪哪 981，211，自己这算在起跑线都输了吧，哎，无所谓，走一步看一步啦，今天路途的风景都没有看够呢，为什么要想以后呢？今天的我只需要保质保量做好我今天的事，相信未来的路途一定不会差；说到以后，我一定要考研，不知道自己到备考的时候是否还会有现在的决心。当你走出校门的那一刻，意味着你真正的长大了，你的青春就结束了，你永远都不会在踏进学校的大门，你的目标就成为了工作。我希望我可以一直学下去，一直享受学生的那种无忧。考研目标现在还没有呢，容我下去认真的研究研究。&lt;/p&gt;
&lt;p&gt;面对着已经过去的大一，问自己一个问题 “&lt;span class=&#34;red&#34;&gt;这一年你干了什么，有什么收获？&lt;/span&gt;” 又是一个好问题，让我好好的回味一下这个问题。🤔&lt;/p&gt;
&lt;div class=&#34;note danger&#34;&gt;
&lt;p&gt;干了什么？？？干了一堆荒唐事，容我慢慢道来。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;先说选班委的事情吧，真得很想当学习委员，真的很想，为啥吧，我个人单纯认为：首先可以先在老师面前刷个脸缘，有助于更好的和老师打好关系，多多请教些问题，真的是再好不过了，不会的问题我都敢问三遍，哎，后来吧自己也社恐，看着班级群里天天聊天早已和学长学，同学们打好关系的抢着当学委的那些..... 我放弃了，如果再给我一次机会，我一定会有信心的去争。做什么都不要轻言放弃，你都未曾开始，哪里来的” 我就一定会失败 “。我就是我，我就是那个桀骜不驯的我，你们都是大白菜，我都瞧不起，不要迷恋哥，哥只是个传说，哥略微出手，就已是这个分段的极限。来玩笑的，我就是妥妥的菜狗😿。&lt;/p&gt;
&lt;p&gt;还有就是，这个哎，浅提一下吧，暗恋过一个小姑娘吧，也不算吧单纯好感，至于结果吧，我是沙雕，阳光开朗大男孩，女生都是神秘物种，都是开渔塘的，有对象还到处瞎聊，也对，大学生这年龄也就是瞎玩的年龄，哦不对，还是有真爱的，比如特例：王某某同学呀，由衷的祝福他们（真心的，骗人是小狗）。搞对象无非是牵着别人牵过的手，亲这别人亲过的嘴，搂着别人摸过的腿，没意思。&lt;span class=&#34;red&#34;&gt;（在我的律师到来之前，我拒绝发言，有对象的人别动手，实在不行轻点打。）&lt;/span&gt;所以我觉得：在我有绝对的实力和金钱之前，我愿意做一条单生狗。听说搞对象老花钱哩，对于我这种月花 600 块钱的刚刚解决温饱的人来说，俩个字：要命；😷况且 lihuibear 大师说过一句名言：&lt;span class=&#34;green&#34;&gt;没前途，女生有那俩行代码好看吗，有那时间不如多敲一敲代码。&lt;/span&gt;说这话是那鄙夷的目光现在还记忆犹新；因此一句话总结：&lt;span class=&#34;pink&#34;&gt;智者不如爱河，冥王一路硕博💯&lt;/span&gt;；&lt;/p&gt;
&lt;p&gt;还有一件事吧，哎，更丢人，还想当学习委员的我做梦也想不到我挂科了，离谱，离了个大谱。大一下学期我的网修课程挂了😿，就是人们口中所说的水课，挂个脚本自己就可以刷的课，而且还挂了 2 门，我觉得：这将可能是我大学生活里永远不能忘记的事了。有句话说到没挂过科的大学不算上过大学，哈哈我已经把大学读完了，从此什么评优可能都与我擦肩而过了吧！！！我曾还埋怨过那些班团怎么不提醒，别的班都提醒了，哎，就只是为我的无知为我的愚蠢找个借口吧，多大的人了，做错事情总事要为自己的错误买单。人家有什么义务替你操心，自己的事情一定要自己放到心上。&lt;/p&gt;
&lt;p&gt;应该是我最后一件事吧，我的第一次 4 级考试 401，距离 425 差的好远，哎，接着学吧。从我参加报名到考试中间也有小一段时间，想想这段时间我干了什么，干了什么我忘了，但是我清楚的记得我没有学英语。考试那天早晨，我在网上查着要靠什么题型，你们可能会很震惊😢？不骗你们，事实真的就是这样，虽然脑中真的记着这件事情，嘴上也说着要学英语，但是成绩不会骗人，没学就是没学，你要过了就是对那些学习的人的不公平，我认。有时候，学习不是你咋呼咋呼就来的，是那种脚踏实地，一步一步的积累起来的。我英语一直都差，英语差的无非都是懒，但勤快点也不至于如此。。。话说到这里，突然想起自己一直说着要好好学算法，惭愧惭愧😭，又过嘴瘾了，想抽自己大嘴巴子。哎，从明天开始，我得详细得做个计划了。总结一下：学习不是你说说就能学会的，不能懒，要扎扎实实地去做，行动起来。&lt;/p&gt;
&lt;p&gt;有些事情要说做就做，一定不能拖拉。一直想参加一些能够学习的社团，比赛。结果大一下学期才进入算法社团，有点小晚。但是只要学多会都不晚，加油，太空慢步的皮卡丘，不就是迟进了社团嘛，晓得后来者居上嘛！！！看着别人在老师的带领下拿奖，纯纯羡慕。当班团确实是真的有好处啊，俺想参加还没机会哩～～～妙不可言。。。所以有些事情要自己决定，机会总会留给有准备的人，一定要有勇气，多请教学长老师，再次提 pink 一下王铭颢学长，真的给我解了很多疑惑。感谢学长（不要问为什么是再次提一下）哈哈～&lt;/p&gt;
&lt;p&gt;至于大一学到了什么，我做过的每一件事都让我学到了很多很多。浅浅的提一下具体学习历程吧：先是在图书馆度过了无数的啃书时间（傻笑😃，没有无数，也就是除了上课时间，晚上回宿舍睡觉，其余时间差不多都在吧)，后来就来到项目组蹭空调，抛弃了我的 “同伙”。等大二开学，一定叫他来陪我。一年内学过没用的物理，学完高数，线代，英语，C 语言，数据结构。。。学啥忘啥，主打经典白学，哎，别提了。。&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;时间不早了，22 点 43 了，要回宿舍了，今天的总结草草的就收尾了。。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;😴&lt;span class=&#34;blue&#34;&gt;汝欲醉眠吾且去，明朝有意抱琴来....&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/2-Linux%E5%AE%9E%E6%93%8D/</guid>
            <title>2.Linux实操</title>
            <link>https://jihaipeng123.github.io/2-Linux%E5%AE%9E%E6%93%8D/</link>
            <category term="Linux" scheme="https://jihaipeng123.github.io/categories/Linux/" />
            <pubDate>Mon, 28 Aug 2023 17:02:21 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;关机重启&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关机重启&#34;&gt;#&lt;/a&gt; 关机 &amp;amp; 重启&lt;/h1&gt;
&lt;h2 id=&#34;基本介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本介绍&#34;&gt;#&lt;/a&gt; 基本介绍&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;shutdown  –h  now&lt;/p&gt;
&lt;p&gt;立该进行关机&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;shudown  -h  1&lt;/p&gt;
&lt;p&gt;&amp;quot;hello,1 分钟后会关机了&amp;quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;shutdown  –r  now&lt;/p&gt;
&lt;p&gt;现在重新启动计算机&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;halt&lt;/p&gt;
&lt;p&gt;关机，作用和上面一样.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;reboot&lt;/p&gt;
&lt;p&gt;现在重新启动计算机&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sync&lt;/p&gt;
&lt;p&gt;把内存的数据同步到磁盘&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;不管是重启系统还是关闭系统，首先要运行&lt;span class=&#34;orange&#34;&gt; sync 命令&lt;/span&gt;，把内存中的数据写到磁盘中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目前的 shutdown/reboot/halt 等命令均已经在关机前进行了 sync&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;用户登录和注销&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#用户登录和注销&#34;&gt;#&lt;/a&gt; 用户登录和注销&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;登录时尽量少用 root 帐号登录，因为它是系统管理员，最大的权限，避免操作失误。&lt;/li&gt;
&lt;li&gt;可以利用普通用户登录，登录后再用”su - 用户名 &amp;quot; 命令来切换成系统管理员身份.&lt;/li&gt;
&lt;li&gt;在提示符下输入 logout 即可注销用户&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;logout -- 注销指令在图形运行级别无效，在运行级别 3 下有效&lt;/p&gt;
&lt;h1 id=&#34;用户管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#用户管理&#34;&gt;#&lt;/a&gt; 用户管理&lt;/h1&gt;
&lt;p&gt;Linux 系统是一个多用户多任务的操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/2-Linux%E5%AE%9E%E6%93%8D/image-20230828172007329.png&#34; alt=&#34;image-20230828172007329&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;添加用户&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#添加用户&#34;&gt;#&lt;/a&gt; 添加用户&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;useradd   用户名&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;添加一个用户 milan, 默认该用户的家目录在 /home/milan&lt;/p&gt;
&lt;p&gt;当创建用户成功后，会自动的创建和用户同名的家目录&lt;/p&gt;
&lt;p&gt;也可以通过    useradd   -d    指定目录   新的用户名，给新创建的用户指定家目录&lt;/p&gt;
&lt;h2 id=&#34;指定修改密码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指定修改密码&#34;&gt;#&lt;/a&gt; 指定 / 修改密码&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;passwd   用户名&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;显示当前用户所在的目录&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#显示当前用户所在的目录&#34;&gt;#&lt;/a&gt; 显示当前用户所在的目录&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;pwd&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;删除用户&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#删除用户&#34;&gt;#&lt;/a&gt; 删除用户&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;userdel   用户名&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;删除用户 milan，但是要保留家目录，userdel   milan&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除用户以及用户主目录，userdel   -r    tom&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;查询用户信息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查询用户信息&#34;&gt;#&lt;/a&gt; 查询用户信息&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;id  用户名&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;切换用户&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#切换用户&#34;&gt;#&lt;/a&gt; 切换用户&lt;/h2&gt;
&lt;p&gt;在操作 Linux 中，如果当前用户的权限不够，可以通过 su - 指令，切换到高权限用户，比如 root&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;su  - 切换用户名&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;从权限高的用户切换到权限低的用户，不需要输入密码，反之需要。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当需要返回到原来用户时，使用 exit/logout 指令&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;查看当前用户登录用户&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查看当前用户登录用户&#34;&gt;#&lt;/a&gt; 查看当前用户 / 登录用户&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;whoami 或 who  am  I&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;用户组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#用户组&#34;&gt;#&lt;/a&gt; 用户组&lt;/h1&gt;
&lt;p&gt;类似于角色，系统可以对有共性 / 权限的多个用户进行统一的管理&lt;/p&gt;
&lt;h2 id=&#34;新增组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#新增组&#34;&gt;#&lt;/a&gt; 新增组&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;groupadd   组名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;增加用户时直接加上组&lt;/p&gt;
&lt;p&gt;指令 (基本语法):useradd   –g   用户组   用户名&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增加一个用户 zwj, 直接将他指定到 wudang&lt;/li&gt;
&lt;li&gt;groupadd  wudang&lt;/li&gt;
&lt;li&gt;useradd  -g   wudang  zwj&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;删除组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#删除组&#34;&gt;#&lt;/a&gt; 删除组&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;groupdel   组名&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;修改用户的组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#修改用户的组&#34;&gt;#&lt;/a&gt; 修改用户的组&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;usermod   –g   用户组   用户名
&lt;ul&gt;
&lt;li&gt;创建一个组 mojiao，把 zwj 放入到 mojiao&lt;/li&gt;
&lt;li&gt;指令:usermod   -g   mojiao   zwj&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;指定运行级别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指定运行级别&#34;&gt;#&lt;/a&gt; 指定运行级别&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;0：关机
1：单用户【找回丢失密码】
2：多用户状态没有网络服务
3：多用户状态有网络服务
4：系统未使用保留给用户
5：图形界面
6：系统重启
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;init[0123456]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过 init 来切换不同的运行级别，常用运行级别是 3 和 5&lt;/p&gt;
&lt;h1 id=&#34;指令大全&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指令大全&#34;&gt;#&lt;/a&gt; 指令大全&lt;/h1&gt;
&lt;p&gt;man&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法：man  [命令或配置文件]&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;查看 ls 命令的帮助信息  man  ls&lt;/p&gt;
&lt;p&gt;在隐藏文件是以。开头，选项可以组合使用比如 ls   -al, 比如 man ls  -al/root&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;help&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;基本语法：help  命令（功能描述：获得 shell 内置命令的帮助信息）&lt;/p&gt;
&lt;p&gt;百度&lt;/p&gt;
&lt;p&gt;帮助更直接如果英语不太好的，也可以直接百度靠谱。(以上俩种没毛用)&lt;/p&gt;
&lt;h1 id=&#34;文件目录类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件目录类&#34;&gt;#&lt;/a&gt; 文件目录类&lt;/h1&gt;
&lt;h2 id=&#34;pwd指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pwd指令&#34;&gt;#&lt;/a&gt; pwd 指令&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;基本语法：pwd    (功能描述：显示当前工作目录的绝对路径)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;应用实例：显示当前工作目录的绝对路径&lt;/p&gt;
&lt;h2 id=&#34;ls指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ls指令&#34;&gt;#&lt;/a&gt; ls 指令&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;基本语法：ls   [选项]   [目录或文件]&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;[选项]：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-a：显示当前目录所有的文件和目录，包括隐藏的。&lt;/li&gt;
&lt;li&gt;-l：以列表的方式显示信息  简写 ll&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;案例：查看当前目录的所有内容信息  ll&lt;/p&gt;
&lt;h2 id=&#34;cd指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cd指令&#34;&gt;#&lt;/a&gt; cd 指令&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;基本语法：cd  [参数]&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(功能描述：切换到指定目录)&lt;/p&gt;
&lt;p&gt;理解：绝对路径和相对路径&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cd ~  回到自己的家目录，比如你是 root，cd  ~  到 /root&lt;/li&gt;
&lt;li&gt;cd ..  回到当前目录的上一级目录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;案例 1：使用绝对路径切换到 root 目录，cd  /root&lt;/p&gt;
&lt;p&gt;案例 2: 使用相对路径到 /root 目录，比如在 /home/tom,cd  ../../root&lt;/p&gt;
&lt;p&gt;案例 3：表示回到当前目录的上一级目录，cd ..&lt;/p&gt;
&lt;p&gt;案例 4：回到家目录，cd  ~&lt;/p&gt;
&lt;h2 id=&#34;mkdir指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mkdir指令&#34;&gt;#&lt;/a&gt; mkdir 指令&lt;/h2&gt;
&lt;p&gt;mkdir 创建目录&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法：mkdir   [选项]   要创建的目录&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;常用 [选项]  -p：创建多级目录&lt;/p&gt;
&lt;p&gt;案例 1: 创建一个目录 mkdir   /home/dog&lt;/p&gt;
&lt;p&gt;案例 2: 创建多级目录 mkdir   -p   /home/animal/tiger&lt;/p&gt;
&lt;h2 id=&#34;rmdir指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rmdir指令&#34;&gt;#&lt;/a&gt; rmdir 指令&lt;/h2&gt;
&lt;p&gt;rmdir 删除空目录&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法   rmdir   [选项]   要删除的空目录&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例：删除一个目录   rmdir/home/dog&lt;/p&gt;
&lt;p&gt;使用细节:   rmdir 删除的是空目录，如果目录下有内容时无法删除的。&lt;/p&gt;
&lt;p&gt;提示：如果需要删除非空目录，需要使用  rm  -  rf 要删除的目录比如：rm  -rf  /home/animal&lt;/p&gt;
&lt;h2 id=&#34;touch指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#touch指令&#34;&gt;#&lt;/a&gt; touch 指令&lt;/h2&gt;
&lt;p&gt;touch 指令创建空文件&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法   touch   文件名称&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例：在 /home 目录下，创建一个空文件 hello.txt&lt;/p&gt;
&lt;h2 id=&#34;cp指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cp指令&#34;&gt;#&lt;/a&gt; cp 指令&lt;/h2&gt;
&lt;p&gt;cp 指令拷贝文件到指定目录&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法  cp   [选项]   source dest&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;常用 [选项]  -r  ：递归复制整个文件夹&lt;/p&gt;
&lt;p&gt;案例 1: 将 /home/hello.txt 拷贝到 /home/bbb 目录下  cp  hello.txt    /home/bbb&lt;/p&gt;
&lt;p&gt;案例 2: 递归复制整个文件夹，比如将 /home/bbb 整个目录，拷贝到 /opt cp-r/home/bbb   /opt&lt;/p&gt;
&lt;p&gt;强制覆盖不提示的方法：\cp,  \cp  -r  /home/bbb   /opt&lt;/p&gt;
&lt;h2 id=&#34;rm指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rm指令&#34;&gt;#&lt;/a&gt; rm 指令&lt;/h2&gt;
&lt;p&gt;rm 指令移除文件或目录&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法  rm   [选项]   要删除的文件或目录&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;常用 [选项]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-r：递归删除整个文件夹&lt;/li&gt;
&lt;li&gt;-f ：强制删除不提示&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;案例 1: 将 /home/hello.txt 删除，rm  /home/hello.txt&lt;/p&gt;
&lt;p&gt;案例 2: 递归删除整个文件夹 /home/bbb,   rm -rf  /home/bbb   [删除整个文件夹，不提示]&lt;/p&gt;
&lt;p&gt;使用细节强制删除不提示的方法：带上 - f 参数即可&lt;/p&gt;
&lt;h2 id=&#34;mv指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mv指令&#34;&gt;#&lt;/a&gt; mv 指令&lt;/h2&gt;
&lt;p&gt;mv 移动文件与目录或重命名&lt;/p&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;mv   oldNameFile   newNameFile (功能描述：重命名)&lt;/li&gt;
&lt;li&gt;mv   /temp/movefile   /targetFolder (功能描述：移动文件)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例 1: 将 /home/cat.txt 文件重新命名为 pig.txt&lt;/p&gt;
&lt;p&gt;案例 2: 将 /home/pig.txt 文件移动到 /root 目录下&lt;/p&gt;
&lt;p&gt;案例 3: 移动整个目录，比如将 /opt/bbb 移动到 /home 下 mv   /opt/bbb   /home/&lt;/p&gt;
&lt;h2 id=&#34;cat指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cat指令&#34;&gt;#&lt;/a&gt; cat 指令&lt;/h2&gt;
&lt;p&gt;cat 查看文件内容&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法  cat  [选项] 要查看的文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;常用 [选项]  -n ：显示行号&lt;/p&gt;
&lt;p&gt;使用细节  cat 只能浏览文件，而不能修改文件，为了浏览方便，一般会带上管道命令 | more&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cat   -n   /etc/profile  |  more [进行交互]&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;more指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#more指令&#34;&gt;#&lt;/a&gt; more 指令&lt;/h2&gt;
&lt;p&gt;more 指令是一个基于 VI 编辑器的文本过滤器，它以全屏幕的方式按页显示文本文件的内容。more 指令中内置了若干快捷键 (交互的指令)，详见操作说明&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法  more   要查看的文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/2-Linux%E5%AE%9E%E6%93%8D/image-20230828191014263.png&#34; alt=&#34;image-20230828191014263&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;less指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#less指令&#34;&gt;#&lt;/a&gt; less 指令&lt;/h2&gt;
&lt;p&gt;less 指令用来分屏查看文件内容，它的功能与 more 指令类似，但是比 more 指令更加强大，支持各种显示终端。less 指令在显示文件内容时，并不是一次将整个文件加载之后才显示，而是根据显示需要加载内容，对于显示大型文件具有较高的效率。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法  less  要查看的文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/2-Linux%E5%AE%9E%E6%93%8D/image-20230828191125138.png&#34; alt=&#34;image-20230828191125138&#34; /&gt;&lt;/p&gt;
&lt;p&gt;案例：采用 less 查看一个大文件文件 /opt/ 杂文.txt     less   /opt/ 杂文.txt&lt;/p&gt;
&lt;h2 id=&#34;echo指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#echo指令&#34;&gt;#&lt;/a&gt; echo 指令&lt;/h2&gt;
&lt;p&gt;echo 输出内容到控制台&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法  echo   [选项]  [输出内容]&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例：使用 echo 指令输出环境变量，比如输出 $PATH  ,  $HOSTNAME,&lt;/p&gt;
&lt;p&gt;echo   $HOSTNAME&lt;/p&gt;
&lt;p&gt;案例：使用 echo 指令输出 hello,world!&lt;/p&gt;
&lt;h2 id=&#34;head指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#head指令&#34;&gt;#&lt;/a&gt; head 指令&lt;/h2&gt;
&lt;p&gt;head 用于显示文件的开头部分内容，默认情况下 head 指令显示文件的前 10 行内容&lt;/p&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;head   文件 (功能描述：查看文件头 10 行内容)&lt;/li&gt;
&lt;li&gt;head   -n  5  文件  (功能描述：查看文件头 5 行内容，5 可以是任意行数)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例：查看 /etc/profile 的前面 5 行代码  head   -n   5   /etc/profile&lt;/p&gt;
&lt;h2 id=&#34;tail指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tail指令&#34;&gt;#&lt;/a&gt; tail 指令&lt;/h2&gt;
&lt;p&gt;tail 用于输出文件中尾部的内容，默认情况下 tail 指令显示文件的前 10 行内容。&lt;/p&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;tail   文件（功能描述：查看文件尾 10 行内容）&lt;/li&gt;
&lt;li&gt;tail   -n  5  文件（功能描述：查看文件尾 5 行内容，5 可以是任意行数）&lt;/li&gt;
&lt;li&gt;tail  -f  文件（功能描述：实时追踪该文档的所有更新）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例 1: 查看 /etc/profile 最后 5 行的代码  tail  -n  5  /etc/profile&lt;/p&gt;
&lt;p&gt;案例 2: 实时监控 mydate.txt, 看看到文件有变化时，是否看到，实时的追加 hello,world&lt;/p&gt;
&lt;p&gt;tail  -f  /home/mydate.txt&lt;/p&gt;
&lt;h2 id=&#34;指令和指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指令和指令&#34;&gt;#&lt;/a&gt; &amp;gt; 指令和 &amp;gt;&amp;gt; 指令&lt;/h2&gt;
&lt;p&gt;&amp;gt; 输出重定向和 &amp;gt;&amp;gt; 追加&lt;/p&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ls  -l  &amp;gt;  文件（功能描述：列表的内容写入文件 a.txt 中（覆盖写））&lt;/li&gt;
&lt;li&gt;ls  -al  &amp;gt;&amp;gt; 文件（功能描述：列表的内容追加到文件 aa.txt 的末尾）&lt;/li&gt;
&lt;li&gt;cat  文件 1  &amp;gt; 文件 2（功能描述：将文件 1 的内容覆盖到文件 2）&lt;/li&gt;
&lt;li&gt;echo  &amp;quot;内容&amp;quot;  &amp;gt;&amp;gt; 文件 (追加)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例 1: 将 /home 目录下的文件列表写入到 /home/info.txt 中，覆盖写入 ls  -l  /home  &amp;gt;  /home/info.txt [如果 info.txt 没有，则会创建]&lt;/p&gt;
&lt;p&gt;案例 2: 将当前日历信息追加到 /home/mycal 文件中指令为：cal  &amp;gt;&amp;gt;  /home/mycal&lt;/p&gt;
&lt;h2 id=&#34;history指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#history指令&#34;&gt;#&lt;/a&gt; history 指令&lt;/h2&gt;
&lt;p&gt;查看已经执行过历史命令，也可以执行历史指令&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法 history（功能描述：查看已经执行过历史命令）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例 1: 显示所有的历史命令  history&lt;/p&gt;
&lt;p&gt;案例 2: 显示最近使用过的 10 个指令。history  10&lt;/p&gt;
&lt;p&gt;案例 3：执行历史编号为 5 的指令！5&lt;/p&gt;
&lt;h1 id=&#34;时间日期类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#时间日期类&#34;&gt;#&lt;/a&gt; 时间日期类&lt;/h1&gt;
&lt;h2 id=&#34;date指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#date指令&#34;&gt;#&lt;/a&gt; date 指令&lt;/h2&gt;
&lt;h3 id=&#34;显示当前日期&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#显示当前日期&#34;&gt;#&lt;/a&gt; 显示当前日期&lt;/h3&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;date（功能描述：显示当前时间）&lt;/li&gt;
&lt;li&gt;date+% Y（功能描述：显示当前年份）&lt;/li&gt;
&lt;li&gt;date+% m（功能描述：显示当前月份）&lt;/li&gt;
&lt;li&gt;date+% d（功能描述：显示当前是哪一天）&lt;/li&gt;
&lt;li&gt;date&amp;quot;+% Y-% m-% d% H:% M:% S&amp;quot;（功能描述：显示年月日时分秒）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;指令-设置日期&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指令-设置日期&#34;&gt;#&lt;/a&gt; 指令 - 设置日期&lt;/h3&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;date  -s  字符串时间&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例 1: 设置系统当前时间，比如设置成 2020-11-0320:02:10   date  -s  “2020-11-0320:02:10&lt;/p&gt;
&lt;h2 id=&#34;cal指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cal指令&#34;&gt;#&lt;/a&gt; cal 指令&lt;/h2&gt;
&lt;p&gt;查看日历指令&lt;/p&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;cal  [选项]（功能描述：不加选项，显示本月日历）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例：显示 2020 年日历:cal  2020&lt;/p&gt;
&lt;h1 id=&#34;搜索查找类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#搜索查找类&#34;&gt;#&lt;/a&gt; 搜索查找类&lt;/h1&gt;
&lt;h2 id=&#34;find指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#find指令&#34;&gt;#&lt;/a&gt; find 指令&lt;/h2&gt;
&lt;p&gt;find 指令将从指定目录向下递归地遍历其各个子目录，将满足条件的文件或者目录显示在终端。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法  find   [搜索范围]   [选项]&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/2-Linux%E5%AE%9E%E6%93%8D/image-20230828193151543.png&#34; alt=&#34;image-20230828193151543&#34; /&gt;&lt;/p&gt;
&lt;p&gt;案例 1: 按文件名：根据名称查找 /home 目录下的 hello.txt 文件   find   /home   -name   hello.txt&lt;/p&gt;
&lt;p&gt;案例 2：按拥有者：查找 /opt 目录下，用户名称为 nobody 的文件   find   /opt   -user   nobody&lt;/p&gt;
&lt;p&gt;案例 3：查找整个系统下大于 200M 的文件（+n 大于 - n 小于 n 等于，单位有 k,M,G）find /  -size +200M&lt;/p&gt;
&lt;h2 id=&#34;grep指令和管道符号&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#grep指令和管道符号&#34;&gt;#&lt;/a&gt; grep 指令和管道符号 |&lt;/h2&gt;
&lt;p&gt;grep 过滤查找，管道符，“|”，表示将前一个命令的处理结果输出传递给后面的命令处理。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;grep  [选项]  查找内容源文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/2-Linux%E5%AE%9E%E6%93%8D/image-20230828193511230.png&#34; alt=&#34;image-20230828193511230&#34; /&gt;&lt;/p&gt;
&lt;p&gt;案例 1: 请在 hello.txt 文件中，查找 &amp;quot;yes&amp;quot; 所在行，并且显示行号&lt;/p&gt;
&lt;p&gt;写法 1:cat  /home/hello.txt   |   grep &amp;quot;yes&amp;quot;&lt;/p&gt;
&lt;p&gt;写法 2: grep  -n &amp;quot;yes&amp;quot;  /home/hello.txt&lt;/p&gt;
&lt;h1 id=&#34;压缩和解压类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#压缩和解压类&#34;&gt;#&lt;/a&gt; 压缩和解压类&lt;/h1&gt;
&lt;h2 id=&#34;gzipgunzip指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gzipgunzip指令&#34;&gt;#&lt;/a&gt; gzip/gunzip 指令&lt;/h2&gt;
&lt;p&gt;gzip 用于压缩文件，gunzip 用于解压的&lt;/p&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;gzip   文件（功能描述：压缩文件，只能将文件压缩为 *.gz 文件）&lt;/li&gt;
&lt;li&gt;gunzip   文件.gz（功能描述：解压缩文件命令）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例 1:gzip 压缩，将 /home 下的 hello.txt 文件进行压缩   gzip   /home/hello.txt&lt;/p&gt;
&lt;p&gt;案例 2:gunzip 压缩，将 /home 下的 hello.txt.gz 文件进行解压缩  gunzip  /home/hello.txt.gz&lt;/p&gt;
&lt;h2 id=&#34;zipunzip指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#zipunzip指令&#34;&gt;#&lt;/a&gt; zip/unzip 指令&lt;/h2&gt;
&lt;p&gt;zip 用于压缩文件，unzip 用于解压的，这个在项目打包发布中很有用的&lt;/p&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;zip  [选项]   XXX.zip  将要压缩的内容（功能描述：压缩文件和目录的命令）&lt;/li&gt;
&lt;li&gt;unzip  [选项]  XXX.zip（功能描述：解压缩文件）&lt;/li&gt;
&lt;li&gt;zip 常用选项  -r  ：递归压缩，即压缩目录&lt;/li&gt;
&lt;li&gt;unzip 的常用选项 -d &amp;lt;目录&amp;gt; ：指定解压后文件的存放目录&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例 1: 将 /home 下的所有文件 / 文件夹进行压缩成 myhome.zip ；  zip  -r  myhome.zip  /home/ [将 home 目录及其包含的文件和子文件夹都压缩]&lt;/p&gt;
&lt;p&gt;案例 2: 将 myhome.zip 解压到 /opt/tmp 目录下； unzip  -d   /opt/tmp   /home/myhome.zip&lt;/p&gt;
&lt;h2 id=&#34;tar指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tar指令&#34;&gt;#&lt;/a&gt; tar 指令&lt;/h2&gt;
&lt;p&gt;tar 指令是打包指令，最后打包后的文件是.tar.gz 的文件。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法  tar  [选项]  XXX.tar.gz   打包的内容  (功能描述：打包目录，压缩后的文件格式.tar.gz)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例 1: 压缩多个文件，将 /home/pig.txt 和 /home/cat.txt 压缩成 pc.tar.gz&lt;/p&gt;
&lt;p&gt;tar    -zcvf  pc.tar.gz   /home/pig.txt  /home/cat.txt&lt;/p&gt;
&lt;p&gt;案例 2: 将 /home 的文件夹压缩成 myhome.tar.gz&lt;/p&gt;
&lt;p&gt;tar   -zcvf   myhome.tar.gz   /home/&lt;/p&gt;
&lt;p&gt;案例 3: 将 pc.tar.gz 解压到当前目录&lt;/p&gt;
&lt;p&gt;tar  -zxvf   pc.tar.gz&lt;/p&gt;
&lt;p&gt;案例 4: 将 myhome.tar.gz 解压到 /opt/tmp2 目录下&lt;/p&gt;
&lt;p&gt;tar  -zxvf   /home/myhome.tar.gz  -C  /opt/tmp2&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/1-Linux%E5%85%A5%E9%97%A8/</guid>
            <title>1.Linux入门</title>
            <link>https://jihaipeng123.github.io/1-Linux%E5%85%A5%E9%97%A8/</link>
            <category term="Linux" scheme="https://jihaipeng123.github.io/categories/Linux/" />
            <pubDate>Mon, 28 Aug 2023 15:07:37 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;应用领域&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#应用领域&#34;&gt;#&lt;/a&gt; 应用领域&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828151126324.png&#34; alt=&#34;image-20230828151126324&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828154542640.png&#34; alt=&#34;image-20230828154542640&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;服务器领域&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#服务器领域&#34;&gt;#&lt;/a&gt; 服务器领域&lt;/h2&gt;
&lt;p&gt;​	服务器领域 linux 在服务器领域的应用是最强的。linux 免费、稳定、高效等特点在这里得到了很好的体现，尤其在一些高端领域尤为广泛（c/c++/php/java/python/go）。&lt;/p&gt;
&lt;h2 id=&#34;嵌入式领域&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#嵌入式领域&#34;&gt;#&lt;/a&gt; 嵌入式领域&lt;/h2&gt;
&lt;p&gt;​	嵌入式领域 linux 运行稳定、对网络的良好支持性、低成本，且可以根据需要进行软件裁剪，内核最小可以达到几百 KB 等特点，使其近些年来在嵌入式领域的应用得到非常大的提高主要应用：机顶盒、数字电视、网络电话、程控交换机、手机、PDA、智能家居、智能硬件等都是其应用领域。以后在物联网中应用会更加广泛。&lt;/p&gt;
&lt;h1 id=&#34;介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#介绍&#34;&gt;#&lt;/a&gt; 介绍&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;linux 是一个开源、免费的操作系统，其稳定性、安全性、处理多并发已经得到业界的认可，目前很多企业级的项目 (c/c++/php/python/java/go) 都会部署到 Linux/unix 系统上。&lt;/li&gt;
&lt;li&gt;常见的操作系统 (windows、IOS、Android、MacOS,Linux,Unix)&lt;/li&gt;
&lt;li&gt;xLinux 之父 -----LinusTorvalds-----Git 创作者 ----- 世界著名黑客&lt;/li&gt;
&lt;li&gt;Linux 主要的发行版：Ubuntu (乌班图)、RedHat (红帽)、CentOS、Debain [蝶变]、Fedora、SuSE、OpenSUS&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Linux 和 Unix 的关系&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828155310706.png&#34; alt=&#34;image-20230828155310706&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;vm和linux的安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vm和linux的安装&#34;&gt;#&lt;/a&gt; VM 和 Linux 的安装&lt;/h2&gt;
&lt;p&gt;先安装 virtualmachine15.52.  ---- 官方地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudm13YXJlLmNvbS9jbi5odG1s&#34;&gt;https://www.vmware.com/cn.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;再安装 Linux (CentOS7.6/centOS8.1)&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828162218104.png&#34; alt=&#34;image-20230828162218104&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;centos安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#centos安装&#34;&gt;#&lt;/a&gt; CentOS 安装&lt;/h2&gt;
&lt;p&gt;1. 创建虚拟机&lt;/p&gt;
&lt;p&gt;2. 开始安装系统 (CentOS7.6) 的步骤 https://mirrors.aliyun.com/centos/8.1.1911/isos/x86_64/CentOS-8.1.1911-x86_64-dvd1.iso&lt;/p&gt;
&lt;p&gt;3. 提示生成复杂密码:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zdWlqaW1pbWFzaGVuZ2NoZW5nLjUxMjQwLmNvbS8zLkNlbnRPUw==&#34;&gt;https://suijimimashengcheng.51240.com/3.CentOS&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;安装难点 - 网络连接方式理解&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828162428999.png&#34; alt=&#34;image-20230828162428999&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;虚拟机快照&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#虚拟机快照&#34;&gt;#&lt;/a&gt; 虚拟机快照&lt;/h2&gt;
&lt;p&gt;如果你在使用虚拟机系统的时候 (比如 linux)，你想回到原先的某一个状态，也就是说你担心可能有些误操作造成系统异常，需要回到原先某个正常运行的状态，vmware 也提供了这样的功能，就叫快照管理。&lt;/p&gt;
&lt;h2 id=&#34;虚拟机迁移和删除&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#虚拟机迁移和删除&#34;&gt;#&lt;/a&gt; 虚拟机迁移和删除&lt;/h2&gt;
&lt;p&gt;​    虚拟系统安装好了，它的本质就是文件 (放在文件夹的)。因此虚拟系统的迁移很方便，你可以把安装好的虚拟系统这个文件夹整体拷贝或者剪切到另外位置使用。删除也很简单，用 vmware 进行移除，再点击菜单 -&amp;gt; 从磁盘删除即可，或者直接手动删除虚拟系统对应的文件夹即可&lt;/p&gt;
&lt;h2 id=&#34;安装vmtools&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装vmtools&#34;&gt;#&lt;/a&gt; 安装 vmtools&lt;/h2&gt;
&lt;p&gt;1) 进入 centos&lt;/p&gt;
&lt;p&gt;2) 点击 vm 菜单的 -&amp;gt;installvmwaretools&lt;/p&gt;
&lt;p&gt;3) centos 会出现一个 vm 的安装包，xx.tar.gz&lt;/p&gt;
&lt;p&gt;4) 拷贝到 /opt&lt;/p&gt;
&lt;p&gt;5) 使用解压命令 tar, 得到一个安装文件 cd/opt [进入到 opt 目录] tar-zxvfxx.tar.gz&lt;/p&gt;
&lt;p&gt;6) 进入该 vm 解压的目录，/opt 目录下 cdvmware...&lt;/p&gt;
&lt;p&gt;7) 安装./vmware-install.pl&lt;/p&gt;
&lt;p&gt;8) 全部使用默认设置即可，就可以安装成功&lt;/p&gt;
&lt;p&gt;9) 注意：安装 vmtools 需要有 gcc.gcc-v&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828162921575.png&#34; alt=&#34;image-20230828162921575&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;目录详解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目录详解&#34;&gt;#&lt;/a&gt; 目录详解&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;linux 的文件系统是采用级层式的树状目录结构，在此结构中的最上层是根目录 “/”，然后在此目录下再创建其他的目录。&lt;/li&gt;
&lt;li&gt;深刻理解 linux 树状文件目录是非常重要的记住一句经典的话：在 Linux 世界里，一切皆文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828163147597.png&#34; alt=&#34;image-20230828163147597&#34; /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;/bin  常用（/usr/bin、/usr/local/bin）是 Binary 的缩写，这个目录存放着最经常使用的命令&lt;/li&gt;
&lt;li&gt;/sbin  (/usr/sbin、/usr/local/sbin) SuperUser，这里存放的是系统管理员使用的系统管理程序。&lt;/li&gt;
&lt;li&gt;/home 常用 存放普通用户的主目录，在 Linux 中每个用户都有一个自己的目录，一般该目录名是以用户的账号命名&lt;/li&gt;
&lt;li&gt;/root  常用  该目录为系统管理员，也称作超级权限者的用户主目录&lt;/li&gt;
&lt;li&gt;/lib 系统开机所需要最基本的动态连接共享库，其作用类似于 Windows 里的 DLL 文件。几乎所有的应用程序都需要用到这些共享库&lt;/li&gt;
&lt;li&gt;/lost+found 这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件&lt;/li&gt;
&lt;li&gt;/etc  常用  所有的系统管理所需要的配置文件和子目录，比如安装 mysql 数据库 my.conf&lt;/li&gt;
&lt;li&gt;/usr   常用   这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似与 windows 下的 programfiles 目录。&lt;/li&gt;
&lt;li&gt;/boot   常用   存放的是启动 Linux 时使用的一些核心文件，包括一些连接文件以及镜像文件&lt;/li&gt;
&lt;li&gt;/proc    不能动    这个目录是一个虚拟的目录，它是系统内存的映射，访问这个目录来获取系统信息&lt;/li&gt;
&lt;li&gt;/srv   不能动   service 缩写，该目录存放一些服务启动之后需要提取的数据&lt;/li&gt;
&lt;li&gt;/sys  不能动   这是 linux2.6 内核的一个很大的变化。该目录下安装了 2.6 内核中新出现的一个文件系统 sysfs=》【别动】&lt;/li&gt;
&lt;li&gt;/tmp  这个目录是用来存放一些临时文件的&lt;/li&gt;
&lt;li&gt;/dev   类似于 windows 的设备管理器，把所有的硬件用文件的形式存储&lt;/li&gt;
&lt;li&gt;/media   常用   linux 系统会自动识别一些设备，例如 U 盘、光驱等等，当识别后，linux 会把识别的设备挂载到这个目录下&lt;/li&gt;
&lt;li&gt;/mnt    常用   系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将外部的存储挂载在 /mnt/ 上，然后进入该目录就可以查看里的内容了。d:/myshare&lt;/li&gt;
&lt;li&gt;/opt   这是给主机额外安装软件所存放的目录。如安装 ORACLE 数据库就可放到该目录下。默认为空&lt;/li&gt;
&lt;li&gt;/usr/local   常用   这是另一个给主机额外安装软件所安装的目录。一般是通过编译源码方式安装的程序&lt;/li&gt;
&lt;li&gt;/var    常用    这个目录中存放着在不断扩充着的东西，习惯将经常被修改的目录放在这个目录下。包括各种日志文件&lt;/li&gt;
&lt;li&gt;/selinux     [security-enhancedlinux] SELinux 是一种安全子系统，它能控制程序只能访问特定文件，有三种工作模式，可以自行设置.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;linux-xshell7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#linux-xshell7&#34;&gt;#&lt;/a&gt; Linux-Xshell7&lt;/h1&gt;
&lt;h2 id=&#34;远程登录&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#远程登录&#34;&gt;#&lt;/a&gt; 远程登录&lt;/h2&gt;
&lt;p&gt;1) linux 服务器是开发小组共享&lt;/p&gt;
&lt;p&gt;2) 正式上线的项目是运行在公网&lt;/p&gt;
&lt;p&gt;3) 因此程序员需要远程登录到 Linux 进行项目管理或者开发&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828164146308.png&#34; alt=&#34;image-20230828164146308&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt; &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Xshell 是目前最好的远程登录到 Linux 操作的软件，流畅的速度并且完美解决了中文乱码的问题，是目前程序员首选的软件。&lt;/li&gt;
&lt;li&gt;Xshell 是一个强大的安全终端模拟软件，它支持 SSH1,SSH2, 以及 MicrosoftWindows 平台的 TELNET 协议。&lt;/li&gt;
&lt;li&gt;Xshell 可以在 Windows 界面下用来访问远端不同系统下的服务器，从而比较好的达到远程控制终端的目的&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安装配置和使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装配置和使用&#34;&gt;#&lt;/a&gt; 安装配置和使用&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828164529802.png&#34; alt=&#34;image-20230828164529802&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解决中文乱码&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828164543283.png&#34; alt=&#34;image-20230828164543283&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;vi和vim编辑器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vi和vim编辑器&#34;&gt;#&lt;/a&gt; Vi 和 Vim 编辑器&lt;/h2&gt;
&lt;p&gt;Linux 系统会内置 vi 文本编辑器 Vim 具有程序编辑的能力，可以看做是 Vi 的增强版本，可以主动的以字体颜色辨别语法的正确性，方便程序设计。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。vi 和 vim 常用的三种模式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;正常模式以 vim 打开一个档案就直接进入一般模式了 (这是默认的模式)。在这个模式中，你可以使用『上下左右』按键来移动光标，你可以使用『删除字符』或『删除整行』来处理档案内容，也可以使用『复制、粘贴』来处理你的文件数据。&lt;/li&gt;
&lt;li&gt;插入模式按下 i,I,o,O,a,A,r,R 等任何一个字母之后才会进入编辑模式，一般来说按 i 即可.&lt;/li&gt;
&lt;li&gt;命令行模式输入 esc 再输入：在这个模式当中，可以提供你相关指令，完成读取、存盘、替换、离开 vim、显示行号等的动作则是在此模式中达成的！&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;拷贝当前行yy&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;拷贝当前行向下的&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;行&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;yy，并粘贴（输入p）。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;删除当前行dd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;删除当前行向下的&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;行&lt;span class=&#34;token number&#34;&gt;5d&lt;/span&gt;d&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;在文件中查找某个单词&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;命令行下&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;关键字，回车查找&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;输入n就是查找下一个&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;设置文件的行号，取消文件的行号&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;命令行下&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;setnu和&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;setnonu&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;编辑&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;etc&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;profile文件，在一般模式下&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;使用快捷键到该文档的最末行&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;G&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;和最首行&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;gg&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;在一个文件中输入&lt;span class=&#34;token string&#34;&gt;&#34;hello&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;在一般模式下&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;然后又撤销这个动作u&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;编辑&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;etc&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;profile文件，在一般模式下&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;并将光标移动到&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;输入&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;再输入shift&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;g&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828165435437.png&#34; alt=&#34;image-20230828165435437&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/11-redis/</guid>
            <title>11.redis</title>
            <link>https://jihaipeng123.github.io/11-redis/</link>
            <category term="JavaWeb" scheme="https://jihaipeng123.github.io/categories/JavaWeb/" />
            <pubDate>Mon, 28 Aug 2023 12:38:04 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;../pictures/11-redis/image-20230824171703738.png&#34; alt=&#34;image-20230824171703738&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;redis&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis&#34;&gt;#&lt;/a&gt; Redis&lt;/h1&gt;
&lt;h2 id=&#34;概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;p&gt;redis 是一款高性能的 NOSQL 系列的非关系型数据库&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.什么是NOSQL
	NoSQL(NoSQL = Not Only SQL)，意即“不仅仅是SQL”，是一项全新的数据库理念，泛指非关系型的数据库。
	随着互联网web2.0网站的兴起，传统的关系数据库在应付web2.0网站，特别是超大规模和高并发的SNS类型的web2.0纯动态网站已经显得力不从心，暴露了很多难以克服的问题，而非关系型的数据库则由于其本身的特点得到了非常迅速的发展。NoSQL数据库的产生就是为了解决大规模数据集合多重数据种类带来的挑战，尤其是大数据应用难题。
	1.1. NOSQL和关系型数据库比较
		优点：
		1）成本：nosql数据库简单易部署，基本都是开源软件，不需要像使用oracle那样花费大量成本购买使用，相比关系型数据库价格便宜。
		2）查询速度：nosql数据库将数据存储于缓存之中，关系型数据库将数据存储在硬盘中，自然查询速度远不及nosql数据库。
		3）存储数据的格式：nosql的存储格式是key,value形式、文档形式、图片形式等等，所以可以存储基础类型以及对象或者是集合等各种格式，而数据库则只支持基础类型。
		4）扩展性：关系型数据库有类似join这样的多表查询机制的限制导致扩展很艰难。
		缺点：
		1）维护的工具和资料有限，因为nosql是属于新的技术，不能和关系型数据库10几年的技术同日而语。
		2）不提供对sql的支持，如果不支持sql这样的工业标准，将产生一定用户的学习和使用成本。
		3）不提供关系型数据库对事务的处理。

		1.2. 非关系型数据库的优势：
		1）性能NOSQL是基于键值对的，可以想象成表中的主键和值的对应关系，而且不需要经过SQL层的解析，所以性能非常高。
		2）可扩展性同样也是因为基于键值对，数据之间没有耦合性，所以非常容易水平扩展。

		1.3. 关系型数据库的优势：
		1）复杂查询可以用SQL语句方便的在一个表以及多个表之间做非常复杂的数据查询。
		2）事务支持使得对于安全性能很高的数据访问要求得以实现。对于这两类数据库，对方的优势就是自己的弱势，反之亦然。
		
		1.4. 总结
		关系型数据库与NoSQL数据库并非对立而是互补的关系，即通常情况下使用关系型数据库，在适合使用NoSQL的时候使用NoSQL数据库，
		让NoSQL数据库对关系型数据库的不足进行弥补。
		一般会将数据存储在关系型数据库中，在nosql数据库中备份存储关系型数据库的数据

2.主流的NOSQL产品
	•	键值(Key-Value)存储数据库
		相关产品： Tokyo Cabinet/Tyrant、Redis、Voldemort、Berkeley DB
		典型应用： 内容缓存，主要用于处理大量数据的高访问负载。 
		数据模型： 一系列键值对
		优势： 快速查询
		劣势： 存储的数据缺少结构化
	•	列存储数据库
		相关产品：Cassandra, HBase, Riak
		典型应用：分布式的文件系统
		数据模型：以列簇式存储，将同一列数据存在一起
		优势：查找速度快，可扩展性强，更容易进行分布式扩展
		劣势：功能相对局限
	•	文档型数据库
		相关产品：CouchDB、MongoDB
		典型应用：Web应用（与Key-Value类似，Value是结构化的）
		数据模型： 一系列键值对
		优势：数据结构要求不严格
		劣势： 查询性能不高，而且缺乏统一的查询语法
	•	图形(Graph)数据库
		相关数据库：Neo4J、InfoGrid、Infinite Graph
		典型应用：社交网络
		数据模型：图结构
		优势：利用图结构相关算法。
		劣势：需要对整个图做计算才能得出结果，不容易做分布式的集群方案。
3 什么是Redis
	Redis是用C语言开发的一个开源的高性能键值对（key-value）数据库，官方提供测试数据，50个并发执行100000个请求,读的速度是110000次/s,写的速度是81000次/s ，且Redis通过提供多种键值数据类型来适应不同场景下的存储需求，目前为止Redis支持的键值数据类型如下：
		1) 字符串类型 string
		2) 哈希类型 hash
		3) 列表类型 list
		4) 集合类型 set
		5) 有序集合类型 sortedset
	3.1 redis的应用场景
		•	缓存（数据查询、短连接、新闻内容、商品内容等等）
		•	聊天室的在线好友列表
		•	任务队列。（秒杀、抢购、12306等等）
		•	应用排行榜
		•	网站访问统计
		•	数据过期处理（可以精确到毫秒
		•	分布式集群架构中的session分离
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;下载安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#下载安装&#34;&gt;#&lt;/a&gt; 下载安装&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;	1. 官网：https://redis.io
	2. 中文网：http://www.redis.net.cn/
	3. 解压直接可以使用：
		* redis.windows.conf：配置文件
		* redis-cli.exe：redis的客户端
		* redis-server.exe：redis服务器端
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;命令操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#命令操作&#34;&gt;#&lt;/a&gt; 命令操作&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;1. redis的数据结构：
	* redis存储的是：key,value格式的数据，其中key都是字符串，value有5种不同的数据结构
	* value的数据结构：
			1 字符串类型 string
			2 哈希类型 hash ： map格式  
			3 列表类型 list ： linkedlist格式。支持重复元素
			4 集合类型 set  ： 不允许重复元素
			5 有序集合类型 sortedset：不允许重复元素，且元素有顺序
		
2. 字符串类型 string
	1. 存储： set key value
		127.0.0.1:6379&amp;gt; set username zhangsan
		OK
	2. 获取： get key
		127.0.0.1:6379&amp;gt; get username
		&amp;quot;zhangsan&amp;quot;
	3. 删除： del key
		127.0.0.1:6379&amp;gt; del age
		(integer) 1
3. 哈希类型 hash
	1. 存储： hset key field value
		127.0.0.1:6379&amp;gt; hset myhash username lisi
		(integer) 1
		127.0.0.1:6379&amp;gt; hset myhash password 123
		(integer) 1
	2. 获取： 
		* hget key field: 获取指定的field对应的值
			127.0.0.1:6379&amp;gt; hget myhash username
			&amp;quot;lisi&amp;quot;
		* hgetall key：获取所有的field和value
			127.0.0.1:6379&amp;gt; hgetall myhash
			1) &amp;quot;username&amp;quot;
			2) &amp;quot;lisi&amp;quot;
			3) &amp;quot;password&amp;quot;
			4) &amp;quot;123&amp;quot;		
	3. 删除： hdel key field
			127.0.0.1:6379&amp;gt; hdel myhash username
			(integer) 1
	
4. 列表类型 list:可以添加一个元素到列表的头部（左边）或者尾部（右边）
	1. 添加：
		1. lpush key value: 将元素加入列表左表
		2. rpush key value：将元素加入列表右边	
			127.0.0.1:6379&amp;gt; lpush myList a
			(integer) 1
			127.0.0.1:6379&amp;gt; lpush myList b
			(integer) 2
			127.0.0.1:6379&amp;gt; rpush myList c
			(integer) 3
	2. 获取：
		* lrange key start end ：范围获取
			127.0.0.1:6379&amp;gt; lrange myList 0 -1
			1) &amp;quot;b&amp;quot;
			2) &amp;quot;a&amp;quot;
			3) &amp;quot;c&amp;quot;
	3. 删除：
		* lpop key： 删除列表最左边的元素，并将元素返回
		* rpop key： 删除列表最右边的元素，并将元素返回
5. 集合类型 set ： 不允许重复元素
	1. 存储：sadd key value
		127.0.0.1:6379&amp;gt; sadd myset a
		(integer) 1
		127.0.0.1:6379&amp;gt; sadd myset a
		(integer) 0
	2. 获取：smembers key:获取set集合中所有元素
		127.0.0.1:6379&amp;gt; smembers myset
		1) &amp;quot;a&amp;quot;
	3. 删除：srem key value:删除set集合中的某个元素	
		127.0.0.1:6379&amp;gt; srem myset a
		(integer) 1
6. 有序集合类型 sortedset
	不允许重复元素，且元素有顺序.每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。
	1. 存储：zadd key score value
		127.0.0.1:6379&amp;gt; zadd mysort 60 zhangsan
		(integer) 1
		127.0.0.1:6379&amp;gt; zadd mysort 50 lisi
		(integer) 1
		127.0.0.1:6379&amp;gt; zadd mysort 80 wangwu
		(integer) 1
	2. 获取：zrange key start end [withscores]
		127.0.0.1:6379&amp;gt; zrange mysort 0 -1
		1) &amp;quot;lisi&amp;quot;
		2) &amp;quot;zhangsan&amp;quot;
		3) &amp;quot;wangwu&amp;quot;
		127.0.0.1:6379&amp;gt; zrange mysort 0 -1 withscores
		1) &amp;quot;zhangsan&amp;quot;
		2) &amp;quot;60&amp;quot;
		3) &amp;quot;wangwu&amp;quot;
		4) &amp;quot;80&amp;quot;
		5) &amp;quot;lisi&amp;quot;
		6) &amp;quot;500&amp;quot;
	3. 删除：zrem key value
		127.0.0.1:6379&amp;gt; zrem mysort lisi
		(integer) 1
7. 通用命令
	1. keys * : 查询所有的键
	2. type key ： 获取键对应的value的类型
	3. del key：删除指定的key value
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;持久化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#持久化&#34;&gt;#&lt;/a&gt; 持久化&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;   1. redis是一个内存数据库，当redis服务器重启，获取电脑重启，数据会丢失，我们可以将redis内存中的数据持久化保存到硬盘的文件中。
   2. redis持久化机制：
		1. RDB：默认方式，不需要进行配置，默认就使用这种机制
			* 在一定的间隔时间中，检测key的变化情况，然后持久化数据
			1. 编辑redis.windwos.conf文件
				#   after 900 sec (15 min) if at least 1 key changed
				save 900 1
				#   after 300 sec (5 min) if at least 10 keys changed
				save 300 10
				#   after 60 sec if at least 10000 keys changed
				save 60 10000
				
			2. 重新启动redis服务器，并指定配置文件名称
				D:\JavaWeb2018\day23_redis\资料\redis\windows-64\redis-2.8.9&amp;gt;redis-server.exe redis.windows.conf	
			
		2. AOF：日志记录的方式，可以记录每一条命令的操作。可以每一次命令操作后，持久化数据
			1. 编辑redis.windwos.conf文件
				appendonly no（关闭aof） --&amp;gt; appendonly yes （开启aof）
				
				# appendfsync always ： 每一次操作都进行持久化
				appendfsync everysec ： 每隔一秒进行一次持久化
				# appendfsync no	 ： 不进行持久化
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;h1 id=&#34;java客户端-jedis&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#java客户端-jedis&#34;&gt;#&lt;/a&gt; Java 客户端 Jedis&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Jedis: 一款 java 操作 redis 数据库的工具.&lt;/li&gt;
&lt;li&gt;使用步骤：
&lt;ol&gt;
&lt;li&gt;下载 jedis 的 jar 包&lt;/li&gt;
&lt;li&gt;使用&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//1. 获取连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt; jedis &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;localhost&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6379&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//2. 操作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;username&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//3. 关闭连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;jedis操作各种redis中的数据结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jedis操作各种redis中的数据结构&#34;&gt;#&lt;/a&gt; Jedis 操作各种 redis 中的数据结构&lt;/h1&gt;
&lt;h2 id=&#34;字符串类型-string&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字符串类型-string&#34;&gt;#&lt;/a&gt; 字符串类型 string&lt;/h2&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;set&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;get&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//1. 获取连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt; jedis &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 如果使用空参构造，默认值 &#34;localhost&#34;,6379 端口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//2. 操作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token comment&#34;&gt;// 存储&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;username&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;username&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token comment&#34;&gt;// 可以使用 setex () 方法存储可以指定过期时间的 key value		        jedis.setex (&#34;activecode&#34;,20,&#34;hehe&#34;);// 将 activecode：hehe 键值对存入 redis，并且 20 秒后自动删除该键值对&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//3. 关闭连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;哈希类型-hash&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#哈希类型-hash&#34;&gt;#&lt;/a&gt; 哈希类型 hash :&lt;/h2&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;map格式&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hset&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hget&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hgetAll&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//1. 获取连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt; jedis &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 如果使用空参构造，默认值 &#34;localhost&#34;,6379 端口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;//2. 操作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 存储 hash&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;hset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;lisi&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;hset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;23&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;hset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;gender&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;female&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 获取 hash&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;hget&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;		        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 获取 hash 的所有 map 中的数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	 &lt;span class=&#34;token class-name&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; user &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;hgetAll&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// keyset&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token class-name&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; keySet &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; user&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;keySet&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; key &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; keySet&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		            &lt;span class=&#34;token comment&#34;&gt;// 获取 value&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		            &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; user&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		            &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;//3. 关闭连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;列表类型-list&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#列表类型-list&#34;&gt;#&lt;/a&gt; 列表类型 list&lt;/h2&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;linkedlist格式。支持重复元素&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			lpush &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; rpush&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			lpop &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; rpop&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			lrange start end &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; 范围获取&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			 &lt;span class=&#34;token comment&#34;&gt;//1. 获取连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt; jedis &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 如果使用空参构造，默认值 &#34;localhost&#34;,6379 端口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//2. 操作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//list 存储&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;lpush&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mylist&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 从左边存&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;rpush&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mylist&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 从右边存&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//list 范围获取&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; mylist &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;lrange&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mylist&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mylist&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//list 弹出&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; element1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;lpop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mylist&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//c&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;element1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; element2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;rpop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mylist&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//c&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;element2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//list 范围获取&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; mylist2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;lrange&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mylist&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mylist2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//3. 关闭连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;集合类型-set&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#集合类型-set&#34;&gt;#&lt;/a&gt; 集合类型 set&lt;/h2&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;不允许重复元素&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			sadd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			smembers&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;获取所有元素&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;//1. 获取连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt; jedis &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 如果使用空参构造，默认值 &#34;localhost&#34;,6379 端口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//2. 操作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//set 存储&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sadd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;myset&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;java&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;php&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c++&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		     &lt;span class=&#34;token comment&#34;&gt;//set 获取&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token class-name&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; myset &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;smembers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;myset&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;myset&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;//3. 关闭连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;有序集合类型-sortedset&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#有序集合类型-sortedset&#34;&gt;#&lt;/a&gt; 有序集合类型 sortedset&lt;/h2&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;不允许重复元素，且元素有顺序&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			zadd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			zrange&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;//1. 获取连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt; jedis &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 如果使用空参构造，默认值 &#34;localhost&#34;,6379 端口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//2. 操作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//sortedset 存储&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;zadd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mysortedset&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;亚瑟&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;zadd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mysortedset&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;后裔&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;zadd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mysortedset&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;55&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;孙悟空&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//sortedset 获取&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; mysortedset &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;zrange&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mysortedset&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mysortedset&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//3. 关闭连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		      jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;h1 id=&#34;jedis连接池-jedispool&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jedis连接池-jedispool&#34;&gt;#&lt;/a&gt; jedis 连接池： JedisPool&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用：&lt;br /&gt;
​				1. 创建 JedisPool 连接池对象&lt;br /&gt;
​				2. 调用方法 getResource () 方法获取 Jedis 连接&lt;br /&gt;
​&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;​	&lt;span class=&#34;token comment&#34;&gt;//0. 创建一个配置对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			        &lt;span class=&#34;token class-name&#34;&gt;JedisPoolConfig&lt;/span&gt; config &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JedisPoolConfig&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			        config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setMaxTotal&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			        config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setMaxIdle&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			        &lt;span class=&#34;token comment&#34;&gt;//1. 创建 Jedis 连接池对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			        &lt;span class=&#34;token class-name&#34;&gt;JedisPool&lt;/span&gt; jedisPool &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JedisPool&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;localhost&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6379&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			        &lt;span class=&#34;token comment&#34;&gt;//2. 获取连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			        &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt; jedis &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedisPool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getResource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			        &lt;span class=&#34;token comment&#34;&gt;//3. 使用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			        jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hehe&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;heihei&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;​			            &lt;span class=&#34;token comment&#34;&gt;//4. 关闭 归还到连接池中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;​			           jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;​&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;连接池工具类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#连接池工具类&#34;&gt;#&lt;/a&gt; 连接池工具类&lt;/h1&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JedisPoolUtils&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	 &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JedisPool&lt;/span&gt; jedisPool&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		    &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token comment&#34;&gt;// 读取配置文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token class-name&#34;&gt;InputStream&lt;/span&gt; is &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JedisPoolUtils&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getClassLoader&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getResourceAsStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;jedis.properties&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token comment&#34;&gt;// 创建 Properties 对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token class-name&#34;&gt;Properties&lt;/span&gt; pro &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Properties&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token comment&#34;&gt;// 关联文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		            pro&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;load&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;is&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;IOException&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		            e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;printStackTrace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token comment&#34;&gt;// 获取数据，设置到 JedisPoolConfig 中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token class-name&#34;&gt;JedisPoolConfig&lt;/span&gt; config &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JedisPoolConfig&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setMaxTotal&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;parseInt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pro&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getProperty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;maxTotal&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setMaxIdle&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;parseInt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pro&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getProperty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;maxIdle&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token comment&#34;&gt;// 初始化 JedisPool&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        jedisPool &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JedisPool&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;pro&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getProperty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;host&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;parseInt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pro&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getProperty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;port&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		     * 获取连接方法&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getJedis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; jedisPool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getResource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​				&lt;br /&gt;
​&lt;/p&gt;
&lt;h1 id=&#34;案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例&#34;&gt;#&lt;/a&gt; 案例&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/11-redis/image-20230825100655015.png&#34; alt=&#34;image-20230825100655015&#34; /&gt;&lt;/p&gt;
&lt;p&gt;案例需求：&lt;br /&gt;
1. 提供 index.html 页面，页面中有一个省份 下拉列表&lt;br /&gt;
 2. 当 页面加载完成后 发送 ajax 请求，加载所有省份&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意：使用 redis 缓存一些不经常发生变化的数据。
&lt;ul&gt;
&lt;li&gt;数据库的数据一旦发生改变，则需要更新缓存。
&lt;ul&gt;
&lt;li&gt;数据库的表执行 增删改的相关操作，需要将 redis 缓存数据情况，再次存入&lt;/li&gt;
&lt;li&gt;在 service 对应的增删改方法中，将 redis 数据删除。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/10-Ajax-Json/</guid>
            <title>10.Ajax&amp;Json</title>
            <link>https://jihaipeng123.github.io/10-Ajax-Json/</link>
            <category term="JavaWeb" scheme="https://jihaipeng123.github.io/categories/JavaWeb/" />
            <pubDate>Mon, 28 Aug 2023 12:25:53 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;ajax&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ajax&#34;&gt;#&lt;/a&gt; AJAX&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;1. 概念： ASynchronous JavaScript And XML	异步的JavaScript 和 XML
	1. 异步和同步：客户端和服务器端相互通信的基础上
		* 客户端必须等待服务器端的响应。在等待的期间客户端不能做其他操作。
		* 客户端不需要等待服务器端的响应。在服务器处理请求的过程中，客户端可以进行其他的操作。
		Ajax 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。 [1] 
		通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。
		传统的网页（不使用 Ajax）如果需要更新内容，必须重载整个网页页面。
		提升用户的体验

2. 实现方式：
	1. 原生的JS实现方式（了解）
		//1.创建核心对象
	            var xmlhttp;
	            if (window.XMLHttpRequest)
	            &amp;#123;// code for IE7+, Firefox, Chrome, Opera, Safari
	                xmlhttp=new XMLHttpRequest();
	            &amp;#125;
	            else
	            &amp;#123;// code for IE6, IE5
	                xmlhttp=new ActiveXObject(&amp;quot;Microsoft.XMLHTTP&amp;quot;);
	            &amp;#125;
	
	    //2. 建立连接
	            /* 参数：
	                    1. 请求方式：GET、POST
	                        * get方式，请求参数在URL后边拼接。send方法为空参
	                        * post方式，请求参数在send方法中定义
	                    2. 请求的URL：
	                    3. 同步或异步请求：true（异步）或 false（同步）*/
	            xmlhttp.open(&amp;quot;GET&amp;quot;,&amp;quot;ajaxServlet?username=tom&amp;quot;,true);
	
	    //3.发送请求
	            xmlhttp.send();
	
	    //4.接受并处理来自服务器的响应结果
	    //获取方式 ：xmlhttp.responseText
	    //什么时候获取？当服务器响应成功后再获取
	
	    //当xmlhttp对象的就绪状态改变时，触发事件onreadystatechange。
	            xmlhttp.onreadystatechange=function()
	            &amp;#123;
	                //判断readyState就绪状态是否为4，判断status响应状态码是否为200
	                if (xmlhttp.readyState==4 &amp;amp;&amp;amp; xmlhttp.status==200)
	                &amp;#123;
	                   //获取服务器的响应结果
	                    var responseText = xmlhttp.responseText;
	                    alert(responseText);
	                &amp;#125;
	            &amp;#125;
	2. JQeury实现方式
		1. $.ajax()
			* 语法：$.ajax(&amp;#123;键值对&amp;#125;);
			 //使用$.ajax()发送异步请求
	            $.ajax(&amp;#123;
	                url:&amp;quot;ajaxServlet1111&amp;quot; , // 请求路径
	                type:&amp;quot;POST&amp;quot; , //请求方式,默认get
	                //data: &amp;quot;username=jack&amp;amp;age=23&amp;quot;,//请求参数
	                data:&amp;#123;&amp;quot;username&amp;quot;:&amp;quot;jack&amp;quot;,&amp;quot;age&amp;quot;:23&amp;#125;,
	                success:function (data) &amp;#123;
	                    alert(data);
	                &amp;#125;,//响应成功后的回调函数
	                error:function () &amp;#123;
	                    alert(&amp;quot;出错啦...&amp;quot;)
	                &amp;#125;,//表示如果请求响应出现错误，会执行的回调函数
	                dataType:&amp;quot;text&amp;quot;//设置接受到的响应数据的格式
	            &amp;#125;);
		2. $.get()：发送get请求
			* 语法：$.get(url, [data], [callback], [type])
				* 参数：
					* url：请求路径
					* data：请求参数
					* callback：回调函数
					* type：响应结果的类型

		3. $.post()：发送post请求
			* 语法：$.post(url, [data], [callback], [type])
				* 参数：
					* url：请求路径
					* data：请求参数
					* callback：回调函数
					* type：响应结果的类型
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/10-Ajax-Json/image-20230824091008576.png&#34; alt=&#34;image-20230824091008576&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;json&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#json&#34;&gt;#&lt;/a&gt; JSON&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;1. 概念： JavaScript Object Notation		JavaScript对象表示法
	Person p = new Person();
	p.setName(&amp;quot;张三&amp;quot;);
	p.setAge(23);
	p.setGender(&amp;quot;男&amp;quot;);

	var p = &amp;#123;&amp;quot;name&amp;quot;:&amp;quot;张三&amp;quot;,&amp;quot;age&amp;quot;:23,&amp;quot;gender&amp;quot;:&amp;quot;男&amp;quot;&amp;#125;;

	* json现在多用于存储和交换文本信息的语法
	* 进行数据的传输
	* JSON 比 XML 更小、更快，更易解析。

2. 语法：
	1. 基本规则
		* 数据在名称/值对中：json数据是由键值对构成的
			* 键用引号(单双都行)引起来，也可以不使用引号
			* 值得取值类型：
				1. 数字（整数或浮点数）
				2. 字符串（在双引号中）
				3. 逻辑值（true 或 false）
				4. 数组（在方括号中）	&amp;#123;&amp;quot;persons&amp;quot;:[&amp;#123;&amp;#125;,&amp;#123;&amp;#125;]&amp;#125;
				5. 对象（在花括号中） &amp;#123;&amp;quot;address&amp;quot;:&amp;#123;&amp;quot;province&amp;quot;：&amp;quot;陕西&amp;quot;....&amp;#125;&amp;#125;
				6. null
		* 数据由逗号分隔：多个键值对由逗号分隔
		* 花括号保存对象：使用&amp;#123;&amp;#125;定义json 格式
		* 方括号保存数组：[]
	2. 获取数据:
		1. json对象.键名
		2. json对象[&amp;quot;键名&amp;quot;]
		3. 数组对象[索引]
		4. 遍历
			//1.定义基本格式
		        var person = &amp;#123;&amp;quot;name&amp;quot;: &amp;quot;张三&amp;quot;, age: 23, &#39;gender&#39;: true&amp;#125;;
		
		        var ps = [&amp;#123;&amp;quot;name&amp;quot;: &amp;quot;张三&amp;quot;, &amp;quot;age&amp;quot;: 23, &amp;quot;gender&amp;quot;: true&amp;#125;,
		            &amp;#123;&amp;quot;name&amp;quot;: &amp;quot;李四&amp;quot;, &amp;quot;age&amp;quot;: 24, &amp;quot;gender&amp;quot;: true&amp;#125;,
		            &amp;#123;&amp;quot;name&amp;quot;: &amp;quot;王五&amp;quot;, &amp;quot;age&amp;quot;: 25, &amp;quot;gender&amp;quot;: false&amp;#125;];
		          //获取person对象中所有的键和值
			  //for in 循环
			       /* for(var key in person)&amp;#123;
			            //这样的方式获取不行。因为相当于  person.&amp;quot;name&amp;quot;
			            //alert(key + &amp;quot;:&amp;quot; + person.key);
			            alert(key+&amp;quot;:&amp;quot;+person[key]);
			        &amp;#125;*/
			//获取ps中的所有值
		        for (var i = 0; i &amp;lt; ps.length; i++) &amp;#123;
		            var p = ps[i];
		            for(var key in p)&amp;#123;
		                alert(key+&amp;quot;:&amp;quot;+p[key]);
		            &amp;#125;
		        &amp;#125;


3. JSON数据和Java对象的相互转换

	* JSON解析器：
		* 常见的解析器：Jsonlib，Gson，fastjson，jackson
	
	1. JSON转为Java对象
		1. 导入jackson的相关jar包
		2. 创建Jackson核心对象 ObjectMapper
		3. 调用ObjectMapper的相关方法进行转换
			1. readValue(json字符串数据,Class)
	2. Java对象转换JSON
		1. 使用步骤：
			1. 导入jackson的相关jar包
			2. 创建Jackson核心对象 ObjectMapper
			3. 调用ObjectMapper的相关方法进行转换
				1. 转换方法：
					* writeValue(参数1，obj):
	                    参数1：
	              File：将obj对象转换为JSON字符串，并保存到指定的文件中
	              Writer：将obj对象转换为JSON字符串，并将json数据填充到字符输出流中
	              OutputStream：将obj对象转换为JSON字符串，并将json数据填充到字节输出流中
	                * writeValueAsString(obj):将对象转为json字符串
				2. 注解：
					1. @JsonIgnore：排除属性。
					2. @JsonFormat：属性值得格式化
						* @JsonFormat(pattern = &amp;quot;yyyy-MM-dd&amp;quot;)
				3. 复杂java对象转换
					1. List：数组
					2. Map：对象格式一致
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例&#34;&gt;#&lt;/a&gt; 案例：&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;* 校验用户名是否存在
	1. 服务器响应的数据，在客户端使用时，要想当做json数据格式使用。有两种解决方案：
		1. $.get(type):将最后一个参数type指定为&amp;quot;json&amp;quot;
		2. 在服务器端设置MIME类型
			response.setContentType(&amp;quot;application/json;charset=utf-8&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/9-JQuery/</guid>
            <title>9.JQuery</title>
            <link>https://jihaipeng123.github.io/9-JQuery/</link>
            <category term="JavaWeb" scheme="https://jihaipeng123.github.io/categories/JavaWeb/" />
            <pubDate>Mon, 28 Aug 2023 11:31:17 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;jquery-基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jquery-基础&#34;&gt;#&lt;/a&gt; JQuery 基础&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;概念： 一个 JavaScript 框架。简化 JS 开发&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;jQuery 是一个快速、简洁的 JavaScript 框架，是继 Prototype 之后又一个优秀的 JavaScript 代码库（或 JavaScript 框架）。jQuery 设计的宗旨	是 “write Less，Do More”，即倡导写更少的代码，做更多的事情。它封装 JavaScript 常用的功能代码，提供一种简便的 JavaScript 设计模式，优	化 HTML 文档操作、事件处理、动画设计和 Ajax 交互。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JavaScript 框架：本质上就是一些 js 文件，封装了 js 的原生代码而已&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;快速入门&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;步骤：&lt;br /&gt;
1. 下载 JQuery&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;目前 jQuery 有三个大版本：&lt;br /&gt;
1.x：兼容 ie678, 使用最为广泛的，官方只做 BUG 维护，&lt;br /&gt;
功能不再新增。因此一般项目来说，使用 1.x 版本就可以了，&lt;br /&gt;
最终版本：1.12.4 (2016 年 5 月 20 日)&lt;br /&gt;
 2.x：不兼容 ie678，很少有人使用，官方只做 BUG 维护，&lt;br /&gt;
功能不再新增。如果不考虑兼容低版本的浏览器可以使用 2.x，&lt;br /&gt;
最终版本：2.2.4 (2016 年 5 月 20 日)&lt;br /&gt;
 3.x：不兼容 ie678，只支持最新的浏览器。除非特殊要求，&lt;br /&gt;
一般不会使用 3.x 版本的，很多老的 jQuery 插件不支持这个版本。&lt;br /&gt;
目前该版本是官方主要更新维护的版本。最新版本：3.2.1（2017 年 3 月 20 日）&lt;/li&gt;
&lt;li&gt;jquery-xxx.js 与 jquery-xxx.min.js 区别：
&lt;ol&gt;
&lt;li&gt;jquery-xxx.js：开发版本。给程序员看的，有良好的缩进和注释。体积大一些&lt;/li&gt;
&lt;li&gt;jquery-xxx.min.js：生产版本。程序中使用，没有缩进。体积小一些。程序加载更快&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;导入 JQuery 的 js 文件：导入 min.js 文件&lt;/p&gt;
&lt;p&gt;使用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  var div1 = $(&amp;quot;#div1&amp;quot;);
  alert(div1.html());
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;JQuery 对象和 JS 对象区别与转换&lt;/p&gt;
&lt;p&gt;JQuery 对象在操作时，更加方便。&lt;/p&gt;
&lt;p&gt;JQuery 对象和 js 对象方法不通用的.&lt;/p&gt;
&lt;p&gt;两者相互转换&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;jq -- &amp;gt; js : jq 对象 [索引] 或者 jq 对象.get (索引)&lt;/li&gt;
&lt;li&gt;js -- &amp;gt; jq : $(js 对象)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;选择器：筛选具有相似特征的元素 (标签)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;事件绑定&lt;br /&gt;
&lt;a href=&#34;//1.xn--b1-wi6co09cbr2bwjv&#34;&gt; //1. 获取 b1 按钮&lt;/a&gt;&lt;br /&gt;
 $(&amp;quot;#b1&amp;quot;).click (function (){&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;alert(&amp;quot;abc&amp;quot;);
 &amp;#125;);
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;入口函数&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;function &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;window.onload  和 $(function) 区别&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; * window.onload 只能定义一次,如果定义多次，后边的会将前边的覆盖掉
    $(function)可以定义多次的。
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;样式控制：css 方法&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// $(&#34;#div1&#34;).css(&#34;background-color&#34;,&#34;red&#34;);&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  	$&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;#div1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;css&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;backgroundColor&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;pink&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​&lt;/p&gt;
&lt;h1 id=&#34;选择器分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#选择器分类&#34;&gt;#&lt;/a&gt; 选择器分类&lt;/h1&gt;
&lt;h2 id=&#34;基本选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本选择器&#34;&gt;#&lt;/a&gt; 基本选择器&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;标签选择器（元素选择器）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： $(&amp;quot;html 标签名&amp;quot;) 获得所有匹配标签名称的元素语法： $(&amp;quot;html 标签名&amp;quot;) 获得所有匹配标签名称的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;id 选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： $(&amp;quot;#id 的属性值&amp;quot;) 获得与指定 id 属性值匹配的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;类选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： $(&amp;quot;.class 的属性值&amp;quot;) 获得与指定的 class 属性值匹配的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;并集选择器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： $(&amp;quot;选择器 1, 选择器 2....&amp;quot;) 获取多个选择器选中的所有元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;层级选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#层级选择器&#34;&gt;#&lt;/a&gt; 层级选择器&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;后代选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： $(&amp;quot;A B&amp;quot;) 选择 A 元素内部的所有 B 元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;子选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： $(&amp;quot;A&amp;gt; B&amp;quot;) 选择 A 元素内部的所有 B 子元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;属性选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#属性选择器&#34;&gt;#&lt;/a&gt; 属性选择器&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;属性名称选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： $(&amp;quot;A [属性名]&amp;quot;) 包含指定属性的选择器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;属性选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： $(&amp;quot;A [属性名 =&#39; 值 &#39;]&amp;quot;) 包含指定属性等于指定值的选择器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;复合属性选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： $(&amp;quot;A [属性名 =&#39; 值 &#39;][]...&amp;quot;) 包含多个属性条件的选择器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;过滤选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#过滤选择器&#34;&gt;#&lt;/a&gt; 过滤选择器&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;首元素选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :first 获得选择的元素中的第一个元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;尾元素选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :last 获得选择的元素中的最后一个元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;非元素选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :not (selector) 不包括指定内容的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;偶数选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :even 偶数，从 0 开始计数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;奇数选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :odd 奇数，从 0 开始计数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;等于索引选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :eq (index) 指定索引元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;大于索引选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :gt (index) 大于指定索引元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;小于索引选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :lt (index) 小于指定索引元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;标题选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :header 获得标题（h1~h6）元素，固定写法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;表单过滤选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表单过滤选择器&#34;&gt;#&lt;/a&gt; 表单过滤选择器&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;可用元素选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :enabled 获得可用元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不可用元素选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :disabled 获得不可用元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选中选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :checked 获得单选 / 复选框选中的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选中选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :selected 获得下拉框选中的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;dom操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dom操作&#34;&gt;#&lt;/a&gt; DOM 操作&lt;/h1&gt;
&lt;h2 id=&#34;内容操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内容操作&#34;&gt;#&lt;/a&gt; 内容操作&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;html (): 获取 / 设置元素的标签体内容   &amp;lt;a&amp;gt;&amp;lt;font &amp;gt; 内容 &amp;lt;/font&amp;gt;&amp;lt;/a&amp;gt;  --&amp;gt; &amp;lt;font &amp;gt; 内容 &amp;lt;/font&amp;gt;&lt;/li&gt;
&lt;li&gt;text (): 获取 / 设置元素的标签体纯文本内容   &amp;lt;a&amp;gt;&amp;lt;font &amp;gt; 内容 &amp;lt;/font&amp;gt;&amp;lt;/a&amp;gt; --&amp;gt; 内容&lt;/li&gt;
&lt;li&gt;val ()： 获取 / 设置元素的 value 属性值&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;属性操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#属性操作&#34;&gt;#&lt;/a&gt; 属性操作&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;通用属性操作
&lt;ol&gt;
&lt;li&gt;attr (): 获取 / 设置元素的属性&lt;/li&gt;
&lt;li&gt;removeAttr (): 删除属性&lt;/li&gt;
&lt;li&gt;prop (): 获取 / 设置元素的属性&lt;/li&gt;
&lt;li&gt;removeProp (): 删除属性&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;attr 和 prop 区别？&lt;br /&gt;
1. 如果操作的是元素的固有属性，则建议使用 prop&lt;br /&gt;
2. 如果操作的是元素自定义的属性，则建议使用 attr&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;对 class 属性操作
&lt;ol&gt;
&lt;li&gt;addClass (): 添加 class 属性值&lt;/li&gt;
&lt;li&gt;removeClass (): 删除 class 属性值&lt;/li&gt;
&lt;li&gt;toggleClass (): 切换 class 属性&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;toggleClass(&amp;quot;one&amp;quot;):
&lt;ul&gt;
&lt;li&gt;判断如果元素对象上存在 class=&amp;quot;one&amp;quot;，则将属性值 one 删除掉。  如果元素对象上不存在 class=&amp;quot;one&amp;quot;，则添加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;crud操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#crud操作&#34;&gt;#&lt;/a&gt; CRUD 操作&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;append (): 父元素将子元素追加到末尾&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象 1.append (对象 2): 将对象 2 添加到对象 1 元素内部，并且在末尾&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;prepend (): 父元素将子元素追加到开头&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象 1.prepend (对象 2): 将对象 2 添加到对象 1 元素内部，并且在开头&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;appendTo():&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象 1.appendTo (对象 2): 将对象 1 添加到对象 2 内部，并且在末尾&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;prependTo()：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象 1.prependTo (对象 2): 将对象 1 添加到对象 2 内部，并且在开头&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;after (): 添加元素到元素后边&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象 1.after (对象 2)： 将对象 2 添加到对象 1 后边。对象 1 和对象 2 是兄弟关系&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;before (): 添加元素到元素前边&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象 1.before (对象 2)： 将对象 2 添加到对象 1 前边。对象 1 和对象 2 是兄弟关系&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;insertAfter()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象 1.insertAfter (对象 2)：将对象 2 添加到对象 1 后边。对象 1 和对象 2 是兄弟关系&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;insertBefore()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象 1.insertBefore (对象 2)： 将对象 2 添加到对象 1 前边。对象 1 和对象 2 是兄弟关系&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;remove (): 移除元素&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象.remove (): 将对象删除掉&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;empty (): 清空元素的所有后代元素。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象.empty (): 将对象的后代元素全部清空，但是保留当前对象以及其属性节点&lt;br /&gt;
注意： $(&amp;quot;#b&amp;quot;).clone (); 克隆所有 b 元素；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;jquery-高级&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jquery-高级&#34;&gt;#&lt;/a&gt; JQuery 高级&lt;/h1&gt;
&lt;h1 id=&#34;动画&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动画&#34;&gt;#&lt;/a&gt; 动画&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;三种方式显示和隐藏元素
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;默认显示和隐藏方式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;show([speed,[easing],[fn]])&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;speed：动画的速度。三个预定义的值 (&amp;quot;slow&amp;quot;,&amp;quot;normal&amp;quot;, &amp;quot;fast&amp;quot;) 或表示动画时长的毫秒数值 (如：1000)&lt;/li&gt;
&lt;li&gt;easing：用来指定切换效果，默认是 &amp;quot;swing&amp;quot;，可用参数 &amp;quot;linear&amp;quot;
&lt;ul&gt;
&lt;li&gt;swing：动画执行时效果是 先慢，中间快，最后又慢&lt;/li&gt;
&lt;li&gt;linear：动画执行时速度是匀速的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;fn：在动画完成时执行的函数，每个元素执行一次。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hide([speed,[easing],[fn]])&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;toggle([speed],[easing],[fn])&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;滑动显示和隐藏方式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;slideDown([speed],[easing],[fn])&lt;/li&gt;
&lt;li&gt;slideUp([speed,[easing],[fn]])&lt;/li&gt;
&lt;li&gt;slideToggle([speed],[easing],[fn])&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;淡入淡出显示和隐藏方式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;fadeIn([speed],[easing],[fn])&lt;/li&gt;
&lt;li&gt;fadeOut([speed],[easing],[fn])&lt;/li&gt;
&lt;li&gt;fadeToggle([speed,[easing],[fn]])&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;遍历&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#遍历&#34;&gt;#&lt;/a&gt; 遍历&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;js 的遍历方式
&lt;ul&gt;
&lt;li&gt;for (初始化值；循环结束条件；步长)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;jq 的遍历方式
&lt;ol&gt;
&lt;li&gt;jq 对象.each (callback)
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;语法：&lt;br /&gt;
jquery 对象.each (function (index,element){});&lt;br /&gt;
* index: 就是元素在集合中的索引&lt;br /&gt;
 * element：就是集合中的每一个元素对象&lt;/p&gt;
&lt;p&gt;​    * this：集合中的每一个元素对象&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;回调函数返回值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;true: 如果当前 function 返回为 false，则结束循环 (break)。&lt;/li&gt;
&lt;li&gt;false: 如果当前 function 返回为 true，则结束本次循环，继续下次循环 (continue)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;$.each(object, [callback])&lt;/li&gt;
&lt;li&gt;for..of: jquery 3.0 版本之后提供的方式&lt;br /&gt;
 for (元素对象 of 容器对象)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;事件绑定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事件绑定&#34;&gt;#&lt;/a&gt; 事件绑定&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;jquery 标准的绑定方式
&lt;ul&gt;
&lt;li&gt;jq 对象。事件方法 (回调函数)；&lt;/li&gt;
&lt;li&gt;注：如果调用事件方法，不传递回调函数，则会触发浏览器默认行为。&lt;/li&gt;
&lt;li&gt;表单对象.submit ();// 让表单提交&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;on 绑定事件 /off 解除绑定
&lt;ul&gt;
&lt;li&gt;jq 对象.on (&amp;quot;事件名称&amp;quot;, 回调函数)&lt;/li&gt;
&lt;li&gt;jq 对象.off (&amp;quot;事件名称&amp;quot;)&lt;/li&gt;
&lt;li&gt;如果 off 方法不传递任何参数，则将组件上的所有事件全部解绑&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;事件切换：toggle
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;jq 对象.toggle (fn1,fn2...)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当单击 jq 对象对应的组件后，会执行 fn1. 第二次点击会执行 fn2.....&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意：1.9 版本 .toggle () 方法删除，jQuery Migrate（迁移）插件可以恢复此功能。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;../js/jquery-migrate-1.0.0.js&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;text/javascript&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;utf-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例&#34;&gt;#&lt;/a&gt; 案例&lt;/h1&gt;
&lt;p&gt;见代码&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/8JSP-EL-JSTL/</guid>
            <title>8.JSP&amp;EL&amp;JSTL</title>
            <link>https://jihaipeng123.github.io/8JSP-EL-JSTL/</link>
            <category term="JavaWeb" scheme="https://jihaipeng123.github.io/categories/JavaWeb/" />
            <pubDate>Mon, 28 Aug 2023 10:08:20 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;jsp入门学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jsp入门学习&#34;&gt;#&lt;/a&gt; JSP：入门学习&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java Server Pages： java 服务器端页面
&lt;ul&gt;
&lt;li&gt;可以理解为：一个特殊的页面，其中既可以指定定义 html 标签，又可以定义 java 代码&lt;/li&gt;
&lt;li&gt;用于简化书写！！！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;原理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JSP 本质上就是一个 Servlet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JSP 的脚本：JSP 定义 Java 代码的方式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;lt;%  代码 %&amp;gt;：定义的 java 代码，在 service 方法中。service 方法中可以定义什么，该脚本中就可以定义什么。&lt;/li&gt;
&lt;li&gt;&amp;lt;%! 代码 %&amp;gt;：定义的 java 代码，在 jsp 转换后的 java 类的成员位置。&lt;/li&gt;
&lt;li&gt;&amp;lt;%= 代码 %&amp;gt;：定义的 java 代码，会输出到页面上。输出语句中可以定义什么，该脚本中就可以定义什么。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JSP 的内置对象：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 jsp 页面中不需要获取和创建，可以直接使用的对象&lt;/li&gt;
&lt;li&gt;jsp 一共有 9 个内置对象。&lt;/li&gt;
&lt;li&gt;今天学习 3 个：
&lt;ul&gt;
&lt;li&gt;request&lt;/li&gt;
&lt;li&gt;response&lt;/li&gt;
&lt;li&gt;out：字符输出流对象。可以将数据输出到页面上。和 response.getWriter () 类似
&lt;ul&gt;
&lt;li&gt;response.getWriter () 和 out.write () 的区别：
&lt;ul&gt;
&lt;li&gt;在 tomcat 服务器真正给客户端做出响应之前，会先找 response 缓冲区数据，再找 out 缓冲区数据。&lt;/li&gt;
&lt;li&gt;response.getWriter () 数据输出永远在 out.write () 之前&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指令&#34;&gt;#&lt;/a&gt; 指令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;作用：用于配置 JSP 页面，导入资源文件&lt;/li&gt;
&lt;li&gt;格式：&lt;br /&gt;
&amp;lt;%@ 指令名称 属性名 1 = 属性值 1 属性名 2 = 属性值 2 ... %&amp;gt;&lt;/li&gt;
&lt;li&gt;分类：
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;page		： 配置 JSP 页面的&lt;br /&gt;
 * contentType：等同于 response.setContentType ()&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设置响应体的 mime 类型以及字符集&lt;/li&gt;
&lt;li&gt;设置当前 jsp 页面的编码（只能是高级的 IDE 才能生效，如果使用低级工具，则需要设置 pageEncoding 属性设置当前页面的字符集）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;* import：导包
* errorPage：当前页面发生异常后，会自动跳转到指定的错误页面
* isErrorPage：标识当前也是是否是错误页面。
	* true：是，可以使用内置对象exception
	* false：否。默认值。不可以使用内置对象exception
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;include	： 页面包含的。导入页面的资源文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;%@include file=&amp;quot;top.jsp&amp;quot;%&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;taglib	： 导入资源&lt;br /&gt;
 * &amp;lt;%@ taglib prefix=&amp;quot;c&amp;quot; uri=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2phdmEuc3VuLmNvbS9qc3AvanN0bC9jb3Jl&#34;&gt;http://java.sun.com/jsp/jstl/core&lt;/span&gt;&amp;quot; %&amp;gt;&lt;br /&gt;
* prefix：前缀，自定义的&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;注释&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注释&#34;&gt;#&lt;/a&gt; 注释&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;html 注释：&lt;br /&gt;
&amp;lt;!-- --&amp;gt;: 只能注释 html 代码片段&lt;/li&gt;
&lt;li&gt;jsp 注释：推荐使用&lt;br /&gt;
 &amp;lt;%-- --%&amp;gt;：可以注释所有&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;内置对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内置对象&#34;&gt;#&lt;/a&gt; 内置对象&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;在 jsp 页面中不需要创建，直接使用的对象&lt;/li&gt;
&lt;li&gt;一共有 9 个：&lt;br /&gt;
变量名					真实类型						作用
&lt;ul&gt;
&lt;li&gt;pageContext				PageContext					当前页面共享数据，还可以获取其他八个内置对象&lt;/li&gt;
&lt;li&gt;request					HttpServletRequest			一次请求访问的多个资源 (转发)&lt;/li&gt;
&lt;li&gt;session					HttpSession					一次会话的多个请求间&lt;/li&gt;
&lt;li&gt;application				ServletContext				所有用户间共享数据&lt;/li&gt;
&lt;li&gt;response					HttpServletResponse			响应对象&lt;/li&gt;
&lt;li&gt;page						Object						当前页面 (Servlet) 的对象  this&lt;/li&gt;
&lt;li&gt;out						JspWriter					输出对象，数据输出到页面上&lt;/li&gt;
&lt;li&gt;config					ServletConfig				Servlet 的配置对象&lt;/li&gt;
&lt;li&gt;exception					Throwable					异常对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;mvc开发模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mvc开发模式&#34;&gt;#&lt;/a&gt; MVC：开发模式&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;jsp 演变历史&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;早期只有 servlet，只能使用 response 输出标签数据，非常麻烦&lt;/li&gt;
&lt;li&gt;后来又 jsp，简化了 Servlet 的开发，如果过度使用 jsp，在 jsp 中即写大量的 java 代码，有写 html 表，造成难于维护，难于分工协作&lt;/li&gt;
&lt;li&gt;再后来，java 的 web 开发，借鉴 mvc 开发模式，使得程序的设计更加合理性&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MVC：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;M：Model，模型。JavaBean
&lt;ul&gt;
&lt;li&gt;完成具体的业务操作，如：查询数据库，封装对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;V：View，视图。JSP
&lt;ul&gt;
&lt;li&gt;展示数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C：Controller，控制器。Servlet
&lt;ul&gt;
&lt;li&gt;获取用户的输入&lt;/li&gt;
&lt;li&gt;调用模型&lt;/li&gt;
&lt;li&gt;将数据交给视图进行展示&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;优缺点：
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;耦合性低，方便维护，可以利于分工协作&lt;/li&gt;
&lt;li&gt;重用性高&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使得项目架构变得复杂，对开发人员要求高&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/8JSP-EL-JSTL/image-20230828102729900.png&#34; alt=&#34;image-20230828102729900&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;el表达式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#el表达式&#34;&gt;#&lt;/a&gt; EL 表达式&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;概念：Expression Language 表达式语言&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;作用：替换和简化 jsp 页面中 java 代码的编写&lt;/p&gt;
&lt;/li&gt;
&lt;li 表达式=&#34;&#34;&gt;
&lt;p&gt;语法：$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;jsp 默认支持 el 表达式的。如果要忽略 el 表达式
&lt;ol&gt;
&lt;li&gt;设置 jsp 中 page 指令中：isELIgnored=&amp;quot;true&amp;quot; 忽略当前 jsp 页面中所有的 el 表达式&lt;/li&gt;
&lt;li&gt;${表达式} ：忽略当前这个 el 表达式&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;运算：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运算符：
&lt;ol&gt;
&lt;li&gt;算数运算符： + - * /(div) %(mod)&lt;/li&gt;
&lt;li&gt;比较运算符： &amp;gt; &amp;lt; &amp;gt;= &amp;lt;= == !=&lt;/li&gt;
&lt;li&gt;逻辑运算符： &amp;amp;&amp;amp;(and) ||(or) !(not)&lt;/li&gt;
&lt;li&gt;空运算符： empty
&lt;ul&gt;
&lt;li&gt;功能：用于判断字符串、集合、数组对象是否为 null 或者长度是否为 0&lt;/li&gt;
&lt;li&gt;${empty list}: 判断字符串、集合、数组对象是否为 null 或者长度为 0&lt;/li&gt;
&lt;li&gt;${not empty str}: 表示判断字符串、集合、数组对象是否不为 null 并且 长度 &amp;gt; 0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取值&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;el 表达式只能从域对象中获取值&lt;/li&gt;
&lt;li&gt;语法：&lt;/li&gt;
&lt;li&gt;${域名称。键名}：从指定域中获取指定键的值&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt; * 域名称：
 	1. pageScope		--&amp;gt; pageContext
 	2. requestScope 	--&amp;gt; request
 	3. sessionScope 	--&amp;gt; session
 	4. applicationScope --&amp;gt; application（ServletContext）
 * 举例：在request域中存储了name=张三
 * 获取：$&amp;#123;requestScope.name&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;${键名}：表示依次从最小的域中查找是否有该键对应的值，直到找到为止。&lt;/p&gt;
&lt;/li&gt;
&lt;li 域名称.键名.属性名=&#34;&#34;&gt;
&lt;p&gt;获取对象、List 集合、Map 集合的值&lt;br /&gt;
 1. 对象：$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本质上会去调用对象的 getter 方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt; 2. List集合：$&amp;#123;域名称.键名[索引]&amp;#125;
 3. Map集合：
 	* $&amp;#123;域名称.键名.key名称&amp;#125;
 	* $&amp;#123;域名称.键名[&amp;quot;key名称&amp;quot;]&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;隐式对象：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;el 表达式中有 11 个隐式对象&lt;/li&gt;
&lt;li&gt;pageContext：
&lt;ul&gt;
&lt;li&gt;获取 jsp 其他八个内置对象
&lt;ul&gt;
&lt;li&gt;${pageContext.request.contextPath}：动态获取虚拟目录.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;jstl&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jstl&#34;&gt;#&lt;/a&gt; JSTL&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;概念：JavaServer Pages Tag Library  JSP 标准标签库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是由 Apache 组织提供的开源的免费的 jsp 标签		&amp;lt;标签&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;作用：用于简化和替换 jsp 页面上的 java 代码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;导入 jstl 相关 jar 包&lt;/li&gt;
&lt;li&gt;引入标签库：taglib 指令：  &amp;lt;%@ taglib %&amp;gt;&lt;/li&gt;
&lt;li&gt;使用标签&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常用的 JSTL 标签&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;if: 相当于 java 代码的 if 语句&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;属性：
&lt;ul&gt;
&lt;li&gt;test 必须属性，接受 boolean 表达式
&lt;ul&gt;
&lt;li&gt;如果表达式为 true，则显示 if 标签体内容，如果为 false，则不显示标签体内容&lt;/li&gt;
&lt;li&gt;一般情况下，test 属性值会结合 el 表达式一起使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;注意：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; c&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;标签没有&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;情况，想要&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;情况，则可以在定义一个c&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;标签&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;2. choose:相当于java代码的switch语句
1. 使用choose标签声明         			相当于switch声明
   2. 使用when标签做判断         			相当于case
  3. 使用otherwise标签做其他情况的声明    	相当于default

3. foreach:相当于java代码的for语句
  1. 完成重复的操作
      for(int i = 0; i &amp;lt; 10; i ++)&amp;#123;

      &amp;#125;
      * 属性：
          begin：开始值（包含）
          end：结束值（包含）
          var：临时变量
          step：步长
          varStatus:循环状态对象
              index:容器中元素的索引，从0开始
              count:循环次数，从1开始
  2. 遍历容器
      List&amp;lt;User&amp;gt; list;
      for(User user : list)&amp;#123;

      &amp;#125;

      * 属性：
          items:容器对象
          var:容器中元素的临时变量
          varStatus:循环状态对象
              index:容器中元素的索引，从0开始
              count:循环次数，从1开始
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;练习：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需求：在 request 域中有一个存有 User 对象的 List 集合。需要使用 jstl+el 将 list 集合数据展示到 jsp 页面的表格 table 中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;三层架构软件设计架构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三层架构软件设计架构&#34;&gt;#&lt;/a&gt; 三层架构：软件设计架构&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;界面层 (表示层)：用户看的得界面。用户可以通过界面上的组件和服务器进行交互&lt;/li&gt;
&lt;li&gt;业务逻辑层：处理业务逻辑的。&lt;/li&gt;
&lt;li&gt;数据访问层：操作数据存储文件。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/8JSP-EL-JSTL/image-20230828103017151.png&#34; alt=&#34;image-20230828103017151&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;案例用户信息列表展示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例用户信息列表展示&#34;&gt;#&lt;/a&gt; 案例：用户信息列表展示&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;需求：用户信息的增删改查操作&lt;/li&gt;
&lt;li&gt;设计：&lt;/li&gt;
&lt;li&gt;技术选型：Servlet+JSP+MySQL+JDBCTempleat+Duird+BeanUtilS+tomcat&lt;/li&gt;
&lt;li&gt;数据库设计：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;create database day17; -- 创建数据库
use day17; 			   -- 使用数据库
create table user(   -- 创建表
	id int primary key auto_increment,
	name varchar(20) not null,
	gender varchar(5),
	age int,
	address varchar(32),
	qq	varchar(20),
	email varchar(50)
);
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;开发：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;环境搭建&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建数据库环境&lt;br /&gt;
 2. 创建项目，导入需要的 jar 包&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测试&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;部署运维&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://jihaipeng123.github.io/7Cookie&amp;Session/</guid>
            <title>7.Cookie&amp;Session</title>
            <link>https://jihaipeng123.github.io/7Cookie&amp;Session/</link>
            <category term="JavaWeb" scheme="https://jihaipeng123.github.io/categories/JavaWeb/" />
            <pubDate>Mon, 28 Aug 2023 09:25:43 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;会话技术&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Cookie&lt;/li&gt;
&lt;li&gt;Session&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;会话技术&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#会话技术&#34;&gt;#&lt;/a&gt; 会话技术&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;会话：一次会话中包含多次请求和响应。
&lt;ul&gt;
&lt;li&gt;一次会话：浏览器第一次给服务器资源发送请求，会话建立，直到有一方断开为止&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;功能：在一次会话的范围内的多次请求间，共享数据&lt;/li&gt;
&lt;li&gt;方式：
&lt;ol&gt;
&lt;li&gt;客户端会话技术：Cookie&lt;/li&gt;
&lt;li&gt;服务器端会话技术：Session&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;cookie&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cookie&#34;&gt;#&lt;/a&gt; Cookie：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;概念：客户端会话技术，将数据保存到客户端&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;快速入门：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用步骤：
&lt;ol&gt;
&lt;li&gt;创建 Cookie 对象，绑定数据
&lt;ul&gt;
&lt;li&gt;new Cookie(String name, String value)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;发送 Cookie 对象
&lt;ul&gt;
&lt;li&gt;response.addCookie(Cookie cookie)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;获取 Cookie，拿到数据
&lt;ul&gt;
&lt;li&gt;Cookie[]  request.getCookies()&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实现原理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于响应头 set-cookie 和请求头 cookie 实现&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cookie 的细节&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一次可不可以发送多个 cookie?
&lt;ul&gt;
&lt;li&gt;可以&lt;/li&gt;
&lt;li&gt;可以创建多个 Cookie 对象，使用 response 调用多次 addCookie 方法发送 cookie 即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;cookie 在浏览器中保存多长时间？
&lt;ol&gt;
&lt;li&gt;默认情况下，当浏览器关闭后，Cookie 数据被销毁&lt;/li&gt;
&lt;li&gt;持久化存储：
&lt;ul&gt;
&lt;li&gt;setMaxAge(int seconds)
&lt;ol&gt;
&lt;li&gt;正数：将 Cookie 数据写到硬盘的文件中。持久化存储。并指定 cookie 存活时间，时间到后，cookie 文件自动失效&lt;/li&gt;
&lt;li&gt;负数：默认值&lt;/li&gt;
&lt;li&gt;零：删除 cookie 信息&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;cookie 能不能存中文？
&lt;ul&gt;
&lt;li&gt;在 tomcat 8 之前 cookie 中不能直接存储中文数据。
&lt;ul&gt;
&lt;li&gt;需要将中文数据转码 --- 一般采用 URL 编码 (% E3)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在 tomcat 8 之后，cookie 支持中文数据。特殊字符还是不支持，建议使用 URL 编码存储，URL 解码解析&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;cookie 共享问题？
&lt;ol&gt;
&lt;li&gt;假设在一个 tomcat 服务器中，部署了多个 web 项目，那么在这些 web 项目中 cookie 能不能共享？&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;默认情况下 cookie 不能共享&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;setPath (String path): 设置 cookie 的获取范围。默认情况下，设置当前的虚拟目录&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果要共享，则可以将 path 设置为 &amp;quot;/&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;不同的 tomcat 服务器间 cookie 共享问题？
&lt;ul&gt;
&lt;li&gt;setDomain (String path): 如果设置一级域名相同，那么多个服务器之间 cookie 可以共享&lt;/li&gt;
&lt;li&gt;setDomain (&amp;quot;.baidu.com&amp;quot;), 那么 tieba.baidu.com 和 news.baidu.com 中 cookie 可以共享&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​			&lt;br /&gt;
​&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;
&lt;p&gt;Cookie 的特点和作用&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;cookie 存储数据在客户端浏览器&lt;/li&gt;
&lt;li&gt;浏览器对于单个 cookie 的大小有限制 (4kb) 以及 对同一个域名下的总 cookie 数量也有限制 (20 个)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;作用：
&lt;ol&gt;
&lt;li&gt;cookie 一般用于存出少量的不太敏感的数据&lt;/li&gt;
&lt;li&gt;在不登录的情况下，完成服务器对客户端的身份识别&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;案例：记住上一次访问时间&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;需求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;访问一个 Servlet，如果是第一次访问，则提示：您好，欢迎您首次访问。&lt;/li&gt;
&lt;li&gt;如果不是第一次访问，则提示：欢迎回来，您上次访问时间为：显示时间字符串&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以采用 Cookie 来完成&lt;/li&gt;
&lt;li&gt;在服务器中的 Servlet 判断是否有一个名为 lastTime 的 cookie
&lt;ol&gt;
&lt;li&gt;有：不是第一次访问
&lt;ol&gt;
&lt;li&gt;响应数据：欢迎回来，您上次访问时间为：2018 年 6 月 10 日 11:50:20&lt;/li&gt;
&lt;li&gt;写回 Cookie：lastTime=2018 年 6 月 10 日 11:50:01&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;没有：是第一次访问
&lt;ol&gt;
&lt;li&gt;响应数据：您好，欢迎您首次访问&lt;/li&gt;
&lt;li&gt;写回 Cookie：lastTime=2018 年 6 月 10 日 11:50:01&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代码实现：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;cn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;itcast&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;javax&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;servlet&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ServletException&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;javax&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;servlet&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;WebServlet&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;javax&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;servlet&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;http&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Cookie&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;javax&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;servlet&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;http&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;HttpServlet&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;javax&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;servlet&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;http&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;HttpServletRequest&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;javax&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;servlet&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;http&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;HttpServletResponse&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;io&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;IOException&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;URLDecoder&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;URLEncoder&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SimpleDateFormat&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;util&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token annotation punctuation&#34;&gt;@WebServlet&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/cookieTest&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CookieTest&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HttpServlet&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	    &lt;span class=&#34;token keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;doPost&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ServletException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;IOException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;// 设置响应的消息体的数据格式以及编码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setContentType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;text/html;charset=utf-8&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//1. 获取所有 Cookie&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;Cookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; cookies &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getCookies&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; flag &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 没有 cookie 为 lastTime&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//2. 遍历 cookie 数组&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cookies &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cookies&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Cookie&lt;/span&gt; cookie &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; cookies&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                &lt;span class=&#34;token comment&#34;&gt;//3. 获取 cookie 的名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; cookie&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                &lt;span class=&#34;token comment&#34;&gt;//4. 判断名称是否是：lastTime&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;lastTime&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token comment&#34;&gt;// 有该 Cookie，不是第一次访问&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    flag &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 有 lastTime 的 cookie&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token comment&#34;&gt;// 设置 Cookie 的 value&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token comment&#34;&gt;// 获取当前时间的字符串，重新设置 Cookie 的值，重新发送 cookie&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt; date  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token class-name&#34;&gt;SimpleDateFormat&lt;/span&gt; sdf &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;yyyy年MM月dd日 HH:mm:ss&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; str_date &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sdf&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;date&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;编码前：&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;str_date&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token comment&#34;&gt;//URL 编码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    str_date &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;URLEncoder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str_date&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;utf-8&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;编码后：&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;str_date&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    cookie&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str_date&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token comment&#34;&gt;// 设置 cookie 的存活时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    cookie&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setMaxAge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;24&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 一个月&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addCookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cookie&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                         &lt;span class=&#34;token comment&#34;&gt;// 响应数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		                &lt;span class=&#34;token comment&#34;&gt;// 获取 Cookie 的 value，时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		                 &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; cookie&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		                 &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;解码前：&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		                 &lt;span class=&#34;token comment&#34;&gt;//URL 解码：&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		                 value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;URLDecoder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;utf-8&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		                 &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;解码后：&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		                 response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getWriter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;h1&gt;欢迎回来，您上次访问时间为:&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;value&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;/h1&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                         &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	             &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;              &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cookies &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; cookies&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; flag &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		            &lt;span class=&#34;token comment&#34;&gt;// 没有，第一次访问&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// 设置 Cookie 的 value&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token comment&#34;&gt;// 获取当前时间的字符串，重新设置 Cookie 的值，重新发送 cookie&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt; date  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token class-name&#34;&gt;SimpleDateFormat&lt;/span&gt; sdf &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;yyyy年MM月dd日 HH:mm:ss&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; str_date &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sdf&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;date&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;编码前：&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;str_date&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token comment&#34;&gt;//URL 编码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            str_date &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;URLEncoder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str_date&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;utf-8&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;编码后：&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;str_date&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token class-name&#34;&gt;Cookie&lt;/span&gt; cookie &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Cookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;lastTime&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;str_date&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token comment&#34;&gt;// 设置 cookie 的存活时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            cookie&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setMaxAge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;24&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 一个月&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addCookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cookie&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getWriter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;h1&gt;您好，欢迎您首次访问&amp;lt;/h1&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	         &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;doGet&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ServletException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;IOException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;doPost&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	       &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;session主菜&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#session主菜&#34;&gt;#&lt;/a&gt; Session：主菜&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;概念：服务器端会话技术，在一次会话的多次请求间共享数据，将数据保存在服务器端的对象中。HttpSession&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;快速入门：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;获取 HttpSession 对象：&lt;br /&gt;
HttpSession session = request.getSession();&lt;/li&gt;
&lt;li&gt;使用 HttpSession 对象：&lt;br /&gt;
Object getAttribute(String name)&lt;br /&gt;
void setAttribute(String name, Object value)&lt;br /&gt;
void removeAttribute(String name)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;原理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Session 的实现是依赖于 Cookie 的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;细节&lt;/p&gt;
&lt;p&gt;1. 当客户端关闭后，服务器不关闭，两次获取 session 是否为同一个？&lt;/p&gt;
&lt;p&gt;默认情况下。不是。&lt;/p&gt;
&lt;p&gt;如果需要相同，则可以创建 Cookie, 键为 JSESSIONID，设置最大存活时间，让 cookie 持久化保存。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;Cookie&lt;/span&gt; c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Cookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;JSESSIONID&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;session&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  c&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setMaxAge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addCookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2. 客户端不关闭，服务器关闭后，两次获取的 session 是同一个吗？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不是同一个，但是要确保数据不丢失。tomcat 自动完成以下工作
&lt;ul&gt;
&lt;li&gt;session 的钝化：
&lt;ul&gt;
&lt;li&gt;在服务器正常关闭之前，将 session 对象系列化到硬盘上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;session 的活化：
&lt;ul&gt;
&lt;li&gt;在服务器启动后，将 session 文件转化为内存中的 session 对象即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3.session 什么时候被销毁？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;服务器关闭&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;session 对象调用 invalidate () 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;session 默认失效时间 30 分钟&lt;br /&gt;
选择性配置修改&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;session&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;config&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;session&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;timeout&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;session&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;timeout&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;session&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;config&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;session 的特点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;session 用于存储一次会话的多次请求的数据，存在服务器端&lt;/li&gt;
&lt;li&gt;session 可以存储任意类型，任意大小的数据&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;session 与 Cookie 的区别：
&lt;ol&gt;
&lt;li&gt;session 存储数据在服务器端，Cookie 在客户端&lt;/li&gt;
&lt;li&gt;session 没有数据大小限制，Cookie 有&lt;/li&gt;
&lt;li&gt;session 数据安全，Cookie 相对于不安全&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;案例验证码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例验证码&#34;&gt;#&lt;/a&gt; 案例：验证码&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;案例需求：
&lt;ol&gt;
&lt;li&gt;访问带有验证码的登录页面 login.jsp&lt;/li&gt;
&lt;li&gt;用户输入用户名，密码以及验证码。
&lt;ul&gt;
&lt;li&gt;如果用户名和密码输入有误，跳转登录页面，提示：用户名或密码错误&lt;/li&gt;
&lt;li&gt;如果验证码输入有误，跳转登录页面，提示：验证码错误&lt;/li&gt;
&lt;li&gt;如果全部输入正确，则跳转到主页 success.jsp，显示：用户名，欢迎您&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
