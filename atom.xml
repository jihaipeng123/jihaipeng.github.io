<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://jihaipeng123.github.io</id>
    <title>123</title>
    <subtitle>456</subtitle>
    <icon>https://jihaipeng123.github.io/images/favicon.ico</icon>
    <link href="https://jihaipeng123.github.io" />
    <author>
      <name>赖床鹏鹏</name>
    </author>
    <updated>2023-08-30T02:40:52.000Z</updated>
    <entry>
        <id>https://jihaipeng123.github.io/3-Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
        <title>3.Linux常用命令</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/3-Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
        <content type="html">&lt;h1 id=&#34;关机注销重启&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关机注销重启&#34;&gt;#&lt;/a&gt; 关机注销重启&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830104820906.png&#34; alt=&#34;image-20230830104820906&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;系统信息和性能查看&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#系统信息和性能查看&#34;&gt;#&lt;/a&gt; 系统信息和性能查看&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830104936576.png&#34; alt=&#34;image-20230830104936576&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830104953152.png&#34; alt=&#34;image-20230830104953152&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;磁盘和分区&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#磁盘和分区&#34;&gt;#&lt;/a&gt; 磁盘和分区&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105028686.png&#34; alt=&#34;image-20230830105028686&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;用户和用户组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#用户和用户组&#34;&gt;#&lt;/a&gt; 用户和用户组&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105108202.png&#34; alt=&#34;image-20230830105108202&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;网络和进程管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#网络和进程管理&#34;&gt;#&lt;/a&gt; 网络和进程管理&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105143706.png&#34; alt=&#34;image-20230830105143706&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105202375.png&#34; alt=&#34;image-20230830105202375&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;常见系统服务命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见系统服务命令&#34;&gt;#&lt;/a&gt; 常见系统服务命令&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105245852.png&#34; alt=&#34;image-20230830105245852&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;文件和目录操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件和目录操作&#34;&gt;#&lt;/a&gt; 文件和目录操作&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105317803.png&#34; alt=&#34;image-20230830105317803&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105400233.png&#34; alt=&#34;image-20230830105400233&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105414945.png&#34; alt=&#34;image-20230830105414945&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;文件查看和处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件查看和处理&#34;&gt;#&lt;/a&gt; 文件查看和处理&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105445618.png&#34; alt=&#34;image-20230830105445618&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105501127.png&#34; alt=&#34;image-20230830105501127&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;打包和解压&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#打包和解压&#34;&gt;#&lt;/a&gt; 打包和解压&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105539241.png&#34; alt=&#34;image-20230830105539241&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;rpm包管理命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rpm包管理命令&#34;&gt;#&lt;/a&gt; RPM 包管理命令&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105626043.png&#34; alt=&#34;image-20230830105626043&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;yum包管理命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#yum包管理命令&#34;&gt;#&lt;/a&gt; YUM 包管理命令&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105651606.png&#34; alt=&#34;image-20230830105651606&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;dpkg包管理命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dpkg包管理命令&#34;&gt;#&lt;/a&gt; DPKG 包管理命令&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105730627.png&#34; alt=&#34;image-20230830105730627&#34; /&gt;&lt;/p&gt;
&lt;p&gt;APT 软件工具&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/3-Linuxmingling/image-20230830105806146.png&#34; alt=&#34;image-20230830105806146&#34; /&gt;&lt;/p&gt;
</content>
        <category term="Linux" scheme="https://jihaipeng123.github.io/categories/Linux/" />
        <updated>2023-08-30T02:40:52.000Z</updated>
    </entry>
    <entry>
        <id>https://jihaipeng123.github.io/%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%84%8F%E4%B9%89/</id>
        <title>写博客的意义</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%84%8F%E4%B9%89/"/>
        <content type="html">&lt;p&gt;听完&lt;span class=&#34;red&#34;&gt;程序羊的 “为什么程序员必须写技术博客”&lt;/span&gt;，我好像懂了一点。&lt;/p&gt;
&lt;p&gt;如何培养自己的总结能力，知识学的不深，学了总忘。&lt;/p&gt;
&lt;p&gt;一定要让自己学的知识在某个地方留下一道刻痕，不容易流失。&lt;/p&gt;
&lt;p&gt;每学一个东西，试着输出点什么，笔记，心得，源码的小 demo。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;blue&#34;&gt;博客的意义所在：记录&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;作用：&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;坚持写博客百利无一害；&lt;/p&gt;
&lt;p&gt;技术博客绝对的面试加分项；&lt;/p&gt;
&lt;p&gt;写博客可以系统的整合自己某一阶段的学习成果；&lt;/p&gt;
&lt;p&gt;加深对技术点的理解（看的过程 == 认知，写的过程 == 复现）；&lt;/p&gt;
&lt;p&gt;让自己有一张 “自己的知识清单”；&lt;/p&gt;
&lt;p&gt;个人博客是自己很好的备忘录 + 踩坑记录；&lt;/p&gt;
&lt;p&gt;通过技术博客，结交志同道合的朋友；&lt;/p&gt;
&lt;p&gt;提高自己的写作水平，语言复述；&lt;/p&gt;
&lt;div class=&#34;note danger&#34;&gt;
&lt;p&gt;误区：&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;初学者博客没技术含量，不是牛人也可以写博客。你只要写就可以了。&lt;/p&gt;
&lt;p&gt;要有正确的态度，内容为王，内容沉淀为主，多坚持一会&lt;/p&gt;
&lt;p&gt;敬畏之心，尊重知识产权，引用别人代码，文字，片段表明出处，尽量自己写笔记&lt;/p&gt;
&lt;p&gt;一定要可复现的内容&lt;/p&gt;
&lt;p&gt;如何写：&lt;/p&gt;
&lt;p&gt;写作形式：markdown, 习惯了就好&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;内容：&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;写入门系列（备忘录，笔记，基础理解，踩坑记录）&lt;/p&gt;
&lt;p&gt;写实战类文章（安装过程，环境搭建，操作记录等）&lt;/p&gt;
&lt;p&gt;一年半载后可以写源码分析，模式提炼，做开源项目&lt;/p&gt;
&lt;p&gt;心态放正，敢于去写，敢于尝试，敢于展示，敢于分享&lt;/p&gt;
&lt;p&gt;从无到有，开头难，坚持下去，&lt;/p&gt;
</content>
        <category term="自能成羽翼，何必仰云梯" scheme="https://jihaipeng123.github.io/categories/%E8%87%AA%E8%83%BD%E6%88%90%E7%BE%BD%E7%BF%BC%EF%BC%8C%E4%BD%95%E5%BF%85%E4%BB%B0%E4%BA%91%E6%A2%AF/" />
        <updated>2023-08-29T05:57:08.000Z</updated>
    </entry>
    <entry>
        <id>https://jihaipeng123.github.io/%E5%9B%9E%E9%A1%BE%E6%80%BB%E7%BB%93%E5%A4%A7%E4%B8%80%E7%94%9F%E6%B4%BB%E5%90%8E%E7%BB%AD/</id>
        <title>回顾总结大一生活后续</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/%E5%9B%9E%E9%A1%BE%E6%80%BB%E7%BB%93%E5%A4%A7%E4%B8%80%E7%94%9F%E6%B4%BB%E5%90%8E%E7%BB%AD/"/>
        <content type="html">&lt;p&gt;做事情应该有始有终，基于昨晚草草的结束，我决定继续写一点东西来讲述讲述。上了大学，这是我第一次写这么长的作文了（真不容易，感动自我了。呜呜～）当你静下心来写的时候，时间真的走的很快，不要吝啬时间，虽然看似好几个小时只写了一篇好似没大用的仿佛狗啃的文章，那你的格局就小喽，这也算是自己对过去一年的时间的总结。总结反思很重要的，总该对过去记录一下。为曾经虚晃一年，碌碌无为的一年勉强的来写一篇总结。&lt;/p&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;昨天写过什么，别问问就是忘了，但是今天的我很清醒，大抵我知道自己要写什么吧。🤔&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span class=&#34;orange&#34;&gt;大雁说过：不懂得浪费时间的人绝对考不上研。&lt;/span&gt;（大雁讲的视频都好有道理，等我哪天好好刷一下）学习讲究效率，讲究方法，而不是耗时间，不是看你坐板凳是否做了一天。我自己好像就中招了，反对无效学习，学习是给自己学的，不是装给他他人看的。感觉自己学了一天，回过头来，好好想一下自己真的到底学过多少东西，收获了多少。学 3 分钟看 5 分钟抖音，结果这仅学的 3 分钟内心里还在等着接受别人的消息。好像说的妥妥的就是我。反思一下：学习的时候就是学习，全神贯注的学。手机真的 “红颜祸水”。说到手机，给自己一个警告吧：手机真的没啥用，玩手机无非是刷抖音，玩游戏，聊天，好好想想这些能让你成长吗？？？跑远了，回来... 学习的时候就要学习，玩耍的时候就放开玩。哎，俺从小就是这样，学的时候想玩，玩的时候想学，大家呢？自己总是可以多多培养一下兴趣，“雨露均沾”🙂也不是不可以的，劳逸结合，才能更加高效的学习。&lt;/p&gt;
&lt;p&gt;突然想起这个话题，有必要认真的讲一下：&lt;span class=&#34;blue&#34;&gt;我就是我，我们只做最真实的自己。&lt;/span&gt;我们总是很在意别人的眼光，在意别人的看法。从小学一路走来，想想哪一位大佬不是都那么的有个性。上课瞧着二郎腿，叼着牙签睡觉，考试永远第一的；一直戴着搞笑帽子，走路唱着难歌走进清华的；永远光头情商为 0 的大佬，总而言之，哪一位大佬都是那样的不一样。我是妥妥的菜狗，我也没有人家那样的实实力（好像说错了，我还没努力呢）&lt;span class=&#34;blue&#34;&gt;狭路相逢勇者胜。&lt;/span&gt;😠所以说：永远不要在意别人对你的看法，大家可能会吐槽，（我也会吐槽的哈哈）但是事实就是无非你吐槽俩句，有影响自己的生活吗？不影响。做好最真实的自己，我的生活我的行为我自己主宰。虽然这样显得自己好像很不合群，去所谓，适合你的圈子总会有的。容我吐槽一下：大学里真的替社会给我给我上了一节课呐，打好全班关系真的很重要。记得有次优秀团员评选，虽然没啥用吧，（但是人总是有欲望的，有总比没有好)，是学生大家评选，哎，我的那票数惨不忍睹，单纯的我认为只要学习好啥都可以。无所谓，我认为：没必要的去迎合所有人，陪他们打游戏？闲的瞎聊？无聊愚蠢的行为。可能在别人眼里我是很 “独” 的一个人吧。做好自己就可以了。反对无效社交，嗯，我真聪明・・・😝&lt;/p&gt;
&lt;p&gt;还有就是，进入大学的一年时间，我认识了好多优秀的学长们，朋友们。每一个人都在努力，可能好多人认为大学里就是玩耍的地方。正如我之前提过的，每个人都要为自己错误的行为买单，熬夜打游戏，上课睡觉的都是，但是你为什么不去和那些日日夜夜学习的那些人学习呢？优秀的人总是优秀的，图书馆里那每天背着书包，等着开门，为自己奋斗的・，回宿舍路上耳机里放的是英语听力的，刷视频刷着宋浩的课程，想来自己原来就是小丑，居然还在为着自己今天背了 1 个单词沾沾自喜。大一结束了，在学长们的答疑下，渐渐的我对自己的未来有了些许的规划。😉&lt;/p&gt;
&lt;p&gt;大二要多学一些技术，技多不压身嘛，有精力的话我会自学大学所有的课程。多参加一些比赛，真的很羡慕拿奖的感觉，虽然不知道拿奖能干什么，但是总是有好处的。大三应该要全力备考考研了吧。我不相信那些什么说什么备考时间长了坚持不下去，只要付出一定会有收获。前提你得真的学习，而不是那些所谓的形式主义。大四俺一定会成功上岸的！！！考研无非就是公共平平得答试卷，靠得都是大家的实力，我喜欢。还有一个长期的计划，每天都必须抽出时间学英语。&lt;/p&gt;
&lt;p&gt;自己有个算是喜好吧，&lt;span class=&#34;yellow&#34;&gt;总是喜欢优秀的人。&lt;/span&gt;“男女老少通吃哇”，这可怎么整呐，遇到大佬，总是很自卑胆小，偷偷的努力去超越。遇到那些不学习的甚至影响自己的，尽量远离，这就是为什么我不回宿舍的原因，回宿舍就只有打游戏了（我和舍友关系还是非常好的），我暗恋过每一个学习好的女生哈哈・・・・（当然开玩笑），妙不可言。好讨厌别人说我卷，我是真的菜，虽然说每天学习了，但是回过头来真的不知道自己学了什么。反思一下：学习过程有点快，没有做到深入理解，只是单纯的听一遍课是不够的・。单纯的听课没有实践。以后每天听完课，要复盘一下，学完课程一定要尝试去代码实现操作一下。永远不要惧怕困难。第一次整这个博客别提有多头大了🤡，什么也不懂，都是靠着别人搭建起来的。后来让自己玩坏了，全部都删从心安装，虽然花费了很多时间但是很成功的完成了，现在回过头来去看过程代码，so easy。😁原来你对自己的潜力一无所知，没有什么东西解决不了，你都没有尝试就已经害怕了，这是永远都不能有的。哪怕尝试了还没有解决，我们可以找学长朋友帮忙，那不雷军说过 “&lt;span class=&#34;green&#34;&gt;实际上，无论你遇到什么问题，别人可能都遇到过，都解决了，甚至都有标准答案，你只要找别人问问就可以了&lt;/span&gt;”。&lt;span class=&#34;green&#34;&gt;你所经历的所有挫折，失败，甚至那些看似毫无意义消磨时间的事情，都将成为你最宝贵的财富。&lt;/span&gt;哈哈，我还年轻&lt;span&gt;我若成佛，天下无魔；我若成魔，佛奈我何&lt;/span&gt;～，要不多做一些看似毫无意义消磨时间的事情？？？随便大胆的去做一些自己想要做的事情，不要害怕，不要去想后果，你只管过程，我不相信命运，我只相信人定胜天，逆天改命。我最喜欢的一句话 “&lt;span class=&#34;blue&#34;&gt;我若成佛，天下无魔；我若成魔，佛奈我何&lt;/span&gt;”😆&lt;/p&gt;
&lt;p&gt;好像想说的也就差不多就这些了吧，不对还有还有。哎，想说什么却又无从开口。可能妈妈又因为我的 4 级日夜无眠吧，现在连打电话的勇气都没有了。一年了，不仅我长了一岁，更多的是妈妈又老了一岁。爸爸也接着日复一日的苦活，哎... 不提了，接着努力学习吧，不要辜负父母们对自己的期望，希望每次聊天的时候都能给他们带去好消息。&lt;/p&gt;
&lt;p&gt;读书不是为了某一刻的熠熠生辉，而是为了人生的每一个时刻，都能够拥有自己的，不管结果怎样，全力以赴去努力过的青春。&lt;span class=&#34;purple&#34;&gt;少年拉满弓，不惧岁月不惧风。我将带着过去的未完成，在未来奔跑起来，即使道路泥泞，也会收获遍野的灿漫。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;note warning&#34;&gt;
&lt;p&gt;整整一年的时间也就由这短短的一篇文章就给结束啦&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;总结是写完了，不知道自己是否真的会像写的这样做，不晓得之后自己再看这篇文章有何感想。（我不会在抽风吧哈哈）写这篇文章就当对自己勉励一下吧，原来自己还是清醒的，至于是否在清醒中堕落就不知道了！！&lt;span class=&#34;aqua&#34;&gt;人就该有所追求，星光不问赶路人，时光不负有心人，愿未来的我们不为虚度年华而悔恨，所愿皆所得，让我们各自努力，顶峰相见。&lt;/span&gt;💝&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;（最后修修改改，整点特效吧。--- 主打摆烂）&lt;/p&gt;
&lt;/div&gt;
</content>
        <category term="自能成羽翼，何必仰云梯" scheme="https://jihaipeng123.github.io/categories/%E8%87%AA%E8%83%BD%E6%88%90%E7%BE%BD%E7%BF%BC%EF%BC%8C%E4%BD%95%E5%BF%85%E4%BB%B0%E4%BA%91%E6%A2%AF/" />
        <updated>2023-08-28T23:51:32.000Z</updated>
    </entry>
    <entry>
        <id>https://jihaipeng123.github.io/%E5%9B%9E%E9%A1%BE%E6%80%BB%E7%BB%93%E5%A4%A7%E4%B8%80%E7%94%9F%E6%B4%BB/</id>
        <title>回顾总结大一生活</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/%E5%9B%9E%E9%A1%BE%E6%80%BB%E7%BB%93%E5%A4%A7%E4%B8%80%E7%94%9F%E6%B4%BB/"/>
        <content type="html">&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;从何说起呢？好问题😃&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;看着反复删除的开头，和我这缓慢的打字速度，我猜这篇总结可能会在黑暗中终结吧。&lt;/p&gt;
&lt;p&gt;想说什么却又不敢说，无所谓啦，想起什么就写什么了，反正能没人看到我写的，某些人看到的话 --- 就当分享给朋友也是可以的。我还是有朋友的，有朋友的感觉真的不错；&lt;/p&gt;
&lt;p&gt;今天晚上不学了，收拾一下心情，反省自己，换副姿态，重新开始。&lt;/p&gt;
&lt;p&gt;回归正题：&lt;/p&gt;
&lt;p&gt;今天是 2023 年 8 月 28 日，我开始做我对过去的总结，人生的第一次，哈哈。曾经无数次的想要养成做日常笔记的习惯，感觉很帅。高中的时候，舍友每天都会拿起自己的小本本总结一下我就傻傻的看着。想来，别提了，我太懒；以后我会经常的更新我的日常生活，分享心情。说出来就是痛快，放个小歌 ，喝个小酒，随意的敲击键盘...（原谅我，我在做梦😂）&lt;/p&gt;
&lt;p&gt;不知不觉大一转眼就过去了，时间真的不等人啊！从曾经刚来学校的不停吐槽的我到如今只能自我安慰随遇而安的摆烂的我，早已没有了当年的那股傲气，想想曾经高中奋斗的 3 年，真的满是不甘，想想高一的第一，高二的前几，高三的几十，想想智学网上那一次次的考试，想想那 3 次模拟 5 百六七的感觉，再想想高考的 506，哎，过去的都过去了，想想网上那些安慰高考失利的孩子的话，高考只是通向成功的一条道路，想想有道理。于是我奔向未知的前方，来到了石家庄学院。&lt;/p&gt;
&lt;p&gt;这算我人生的起点了吧，以后出去找工作别人会说自己是哪哪 981，211，自己这算在起跑线都输了吧，哎，无所谓，走一步看一步啦，今天路途的风景都没有看够呢，为什么要想以后呢？今天的我只需要保质保量做好我今天的事，相信未来的路途一定不会差；说到以后，我一定要考研，不知道自己到备考的时候是否还会有现在的决心。当你走出校门的那一刻，意味着你真正的长大了，你的青春就结束了，你永远都不会在踏进学校的大门，你的目标就成为了工作。我希望我可以一直学下去，一直享受学生的那种无忧。考研目标现在还没有呢，容我下去认真的研究研究。&lt;/p&gt;
&lt;p&gt;面对着已经过去的大一，问自己一个问题 “&lt;span class=&#34;red&#34;&gt;这一年你干了什么，有什么收获？&lt;/span&gt;” 又是一个好问题，让我好好的回味一下这个问题。🤔&lt;/p&gt;
&lt;div class=&#34;note danger&#34;&gt;
&lt;p&gt;干了什么？？？干了一堆荒唐事，容我慢慢道来。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;先说选班委的事情吧，真得很想当学习委员，真的很想，为啥吧，我个人单纯认为：首先可以先在老师面前刷个脸缘，有助于更好的和老师打好关系，多多请教些问题，真的是再好不过了，不会的问题我都敢问三遍，哎，后来吧自己也社恐，看着班级群里天天聊天早已和学长学，同学们打好关系的抢着当学委的那些..... 我放弃了，如果再给我一次机会，我一定会有信心的去争。做什么都不要轻言放弃，你都未曾开始，哪里来的” 我就一定会失败 “。我就是我，我就是那个桀骜不驯的我，你们都是大白菜，我都瞧不起，不要迷恋哥，哥只是个传说，哥略微出手，就已是这个分段的极限。来玩笑的，我就是妥妥的菜狗😿。&lt;/p&gt;
&lt;p&gt;还有就是，这个哎，浅提一下吧，暗恋过一个小姑娘吧，也不算吧单纯好感，至于结果吧，我是沙雕，阳光开朗大男孩，女生都是神秘物种，都是开渔塘的，有对象还到处瞎聊，也对，大学生这年龄也就是瞎玩的年龄，哦不对，还是有真爱的，比如特例：王某某同学呀，由衷的祝福他们（真心的，骗人是小狗）。搞对象无非是牵着别人牵过的手，亲这别人亲过的嘴，搂着别人摸过的腿，没意思。&lt;span class=&#34;red&#34;&gt;（在我的律师到来之前，我拒绝发言，有对象的人别动手，实在不行轻点打。）&lt;/span&gt;所以我觉得：在我有绝对的实力和金钱之前，我愿意做一条单生狗。听说搞对象老花钱哩，对于我这种月花 600 块钱的刚刚解决温饱的人来说，俩个字：要命；😷况且 lihuibear 大师说过一句名言：&lt;span class=&#34;green&#34;&gt;没前途，女生有那俩行代码好看吗，有那时间不如多敲一敲代码。&lt;/span&gt;说这话是那鄙夷的目光现在还记忆犹新；因此一句话总结：&lt;span class=&#34;pink&#34;&gt;智者不如爱河，冥王一路硕博💯&lt;/span&gt;；&lt;/p&gt;
&lt;p&gt;还有一件事吧，哎，更丢人，还想当学习委员的我做梦也想不到我挂科了，离谱，离了个大谱。大一下学期我的网修课程挂了😿，就是人们口中所说的水课，挂个脚本自己就可以刷的课，而且还挂了 2 门，我觉得：这将可能是我大学生活里永远不能忘记的事了。有句话说到没挂过科的大学不算上过大学，哈哈我已经把大学读完了，从此什么评优可能都与我擦肩而过了吧！！！我曾还埋怨过那些班团怎么不提醒，别的班都提醒了，哎，就只是为我的无知为我的愚蠢找个借口吧，多大的人了，做错事情总事要为自己的错误买单。人家有什么义务替你操心，自己的事情一定要自己放到心上。&lt;/p&gt;
&lt;p&gt;应该是我最后一件事吧，我的第一次 4 级考试 401，距离 425 差的好远，哎，接着学吧。从我参加报名到考试中间也有小一段时间，想想这段时间我干了什么，干了什么我忘了，但是我清楚的记得我没有学英语。考试那天早晨，我在网上查着要靠什么题型，你们可能会很震惊😢？不骗你们，事实真的就是这样，虽然脑中真的记着这件事情，嘴上也说着要学英语，但是成绩不会骗人，没学就是没学，你要过了就是对那些学习的人的不公平，我认。有时候，学习不是你咋呼咋呼就来的，是那种脚踏实地，一步一步的积累起来的。我英语一直都差，英语差的无非都是懒，但勤快点也不至于如此。。。话说到这里，突然想起自己一直说着要好好学算法，惭愧惭愧😭，又过嘴瘾了，想抽自己大嘴巴子。哎，从明天开始，我得详细得做个计划了。总结一下：学习不是你说说就能学会的，不能懒，要扎扎实实地去做，行动起来。&lt;/p&gt;
&lt;p&gt;有些事情要说做就做，一定不能拖拉。一直想参加一些能够学习的社团，比赛。结果大一下学期才进入算法社团，有点小晚。但是只要学多会都不晚，加油，太空慢步的皮卡丘，不就是迟进了社团嘛，晓得后来者居上嘛！！！看着别人在老师的带领下拿奖，纯纯羡慕。当班团确实是真的有好处啊，俺想参加还没机会哩～～～妙不可言。。。所以有些事情要自己决定，机会总会留给有准备的人，一定要有勇气，多请教学长老师，再次提 pink 一下王铭颢学长，真的给我解了很多疑惑。感谢学长（不要问为什么是再次提一下）哈哈～&lt;/p&gt;
&lt;p&gt;至于大一学到了什么，我做过的每一件事都让我学到了很多很多。浅浅的提一下具体学习历程吧：先是在图书馆度过了无数的啃书时间（傻笑😃，没有无数，也就是除了上课时间，晚上回宿舍睡觉，其余时间差不多都在吧)，后来就来到项目组蹭空调，抛弃了我的 “同伙”。等大二开学，一定叫他来陪我。一年内学过没用的物理，学完高数，线代，英语，C 语言，数据结构。。。学啥忘啥，主打经典白学，哎，别提了。。&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;时间不早了，22 点 43 了，要回宿舍了，今天的总结草草的就收尾了。。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;😴&lt;span class=&#34;blue&#34;&gt;汝欲醉眠吾且去，明朝有意抱琴来....&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="自能成羽翼，何必仰云梯" scheme="https://jihaipeng123.github.io/categories/%E8%87%AA%E8%83%BD%E6%88%90%E7%BE%BD%E7%BF%BC%EF%BC%8C%E4%BD%95%E5%BF%85%E4%BB%B0%E4%BA%91%E6%A2%AF/" />
        <updated>2023-08-28T12:13:18.000Z</updated>
    </entry>
    <entry>
        <id>https://jihaipeng123.github.io/2-Linux%E5%AE%9E%E6%93%8D/</id>
        <title>2.Linux实操</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/2-Linux%E5%AE%9E%E6%93%8D/"/>
        <content type="html">&lt;h1 id=&#34;关机重启&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关机重启&#34;&gt;#&lt;/a&gt; 关机 &amp;amp; 重启&lt;/h1&gt;
&lt;h2 id=&#34;基本介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本介绍&#34;&gt;#&lt;/a&gt; 基本介绍&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;shutdown  –h  now&lt;/p&gt;
&lt;p&gt;立该进行关机&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;shudown  -h  1&lt;/p&gt;
&lt;p&gt;&amp;quot;hello,1 分钟后会关机了&amp;quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;shutdown  –r  now&lt;/p&gt;
&lt;p&gt;现在重新启动计算机&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;halt&lt;/p&gt;
&lt;p&gt;关机，作用和上面一样.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;reboot&lt;/p&gt;
&lt;p&gt;现在重新启动计算机&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sync&lt;/p&gt;
&lt;p&gt;把内存的数据同步到磁盘&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;不管是重启系统还是关闭系统，首先要运行&lt;span class=&#34;orange&#34;&gt; sync 命令&lt;/span&gt;，把内存中的数据写到磁盘中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目前的 shutdown/reboot/halt 等命令均已经在关机前进行了 sync&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;用户登录和注销&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#用户登录和注销&#34;&gt;#&lt;/a&gt; 用户登录和注销&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;登录时尽量少用 root 帐号登录，因为它是系统管理员，最大的权限，避免操作失误。&lt;/li&gt;
&lt;li&gt;可以利用普通用户登录，登录后再用”su - 用户名 &amp;quot; 命令来切换成系统管理员身份.&lt;/li&gt;
&lt;li&gt;在提示符下输入 logout 即可注销用户&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;logout -- 注销指令在图形运行级别无效，在运行级别 3 下有效&lt;/p&gt;
&lt;h1 id=&#34;用户管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#用户管理&#34;&gt;#&lt;/a&gt; 用户管理&lt;/h1&gt;
&lt;p&gt;Linux 系统是一个多用户多任务的操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/2-Linux%E5%AE%9E%E6%93%8D/image-20230828172007329.png&#34; alt=&#34;image-20230828172007329&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;添加用户&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#添加用户&#34;&gt;#&lt;/a&gt; 添加用户&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;useradd   用户名&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;添加一个用户 milan, 默认该用户的家目录在 /home/milan&lt;/p&gt;
&lt;p&gt;当创建用户成功后，会自动的创建和用户同名的家目录&lt;/p&gt;
&lt;p&gt;也可以通过    useradd   -d    指定目录   新的用户名，给新创建的用户指定家目录&lt;/p&gt;
&lt;h2 id=&#34;指定修改密码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指定修改密码&#34;&gt;#&lt;/a&gt; 指定 / 修改密码&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;passwd   用户名&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;显示当前用户所在的目录&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#显示当前用户所在的目录&#34;&gt;#&lt;/a&gt; 显示当前用户所在的目录&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;pwd&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;删除用户&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#删除用户&#34;&gt;#&lt;/a&gt; 删除用户&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;userdel   用户名&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;删除用户 milan，但是要保留家目录，userdel   milan&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除用户以及用户主目录，userdel   -r    tom&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;查询用户信息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查询用户信息&#34;&gt;#&lt;/a&gt; 查询用户信息&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;id  用户名&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;切换用户&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#切换用户&#34;&gt;#&lt;/a&gt; 切换用户&lt;/h2&gt;
&lt;p&gt;在操作 Linux 中，如果当前用户的权限不够，可以通过 su - 指令，切换到高权限用户，比如 root&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;su  - 切换用户名&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;从权限高的用户切换到权限低的用户，不需要输入密码，反之需要。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当需要返回到原来用户时，使用 exit/logout 指令&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;查看当前用户登录用户&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查看当前用户登录用户&#34;&gt;#&lt;/a&gt; 查看当前用户 / 登录用户&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;whoami 或 who  am  I&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;用户组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#用户组&#34;&gt;#&lt;/a&gt; 用户组&lt;/h1&gt;
&lt;p&gt;类似于角色，系统可以对有共性 / 权限的多个用户进行统一的管理&lt;/p&gt;
&lt;h2 id=&#34;新增组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#新增组&#34;&gt;#&lt;/a&gt; 新增组&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;groupadd   组名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;增加用户时直接加上组&lt;/p&gt;
&lt;p&gt;指令 (基本语法):useradd   –g   用户组   用户名&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增加一个用户 zwj, 直接将他指定到 wudang&lt;/li&gt;
&lt;li&gt;groupadd  wudang&lt;/li&gt;
&lt;li&gt;useradd  -g   wudang  zwj&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;删除组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#删除组&#34;&gt;#&lt;/a&gt; 删除组&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;groupdel   组名&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;修改用户的组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#修改用户的组&#34;&gt;#&lt;/a&gt; 修改用户的组&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;usermod   –g   用户组   用户名
&lt;ul&gt;
&lt;li&gt;创建一个组 mojiao，把 zwj 放入到 mojiao&lt;/li&gt;
&lt;li&gt;指令:usermod   -g   mojiao   zwj&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;指定运行级别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指定运行级别&#34;&gt;#&lt;/a&gt; 指定运行级别&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;0：关机
1：单用户【找回丢失密码】
2：多用户状态没有网络服务
3：多用户状态有网络服务
4：系统未使用保留给用户
5：图形界面
6：系统重启
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;init[0123456]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过 init 来切换不同的运行级别，常用运行级别是 3 和 5&lt;/p&gt;
&lt;h1 id=&#34;指令大全&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指令大全&#34;&gt;#&lt;/a&gt; 指令大全&lt;/h1&gt;
&lt;p&gt;man&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法：man  [命令或配置文件]&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;查看 ls 命令的帮助信息  man  ls&lt;/p&gt;
&lt;p&gt;在隐藏文件是以。开头，选项可以组合使用比如 ls   -al, 比如 man ls  -al/root&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;help&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;基本语法：help  命令（功能描述：获得 shell 内置命令的帮助信息）&lt;/p&gt;
&lt;p&gt;百度&lt;/p&gt;
&lt;p&gt;帮助更直接如果英语不太好的，也可以直接百度靠谱。(以上俩种没毛用)&lt;/p&gt;
&lt;h1 id=&#34;文件目录类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件目录类&#34;&gt;#&lt;/a&gt; 文件目录类&lt;/h1&gt;
&lt;h2 id=&#34;pwd指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pwd指令&#34;&gt;#&lt;/a&gt; pwd 指令&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;基本语法：pwd    (功能描述：显示当前工作目录的绝对路径)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;应用实例：显示当前工作目录的绝对路径&lt;/p&gt;
&lt;h2 id=&#34;ls指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ls指令&#34;&gt;#&lt;/a&gt; ls 指令&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;基本语法：ls   [选项]   [目录或文件]&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;[选项]：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-a：显示当前目录所有的文件和目录，包括隐藏的。&lt;/li&gt;
&lt;li&gt;-l：以列表的方式显示信息  简写 ll&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;案例：查看当前目录的所有内容信息  ll&lt;/p&gt;
&lt;h2 id=&#34;cd指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cd指令&#34;&gt;#&lt;/a&gt; cd 指令&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;基本语法：cd  [参数]&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(功能描述：切换到指定目录)&lt;/p&gt;
&lt;p&gt;理解：绝对路径和相对路径&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cd ~  回到自己的家目录，比如你是 root，cd  ~  到 /root&lt;/li&gt;
&lt;li&gt;cd ..  回到当前目录的上一级目录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;案例 1：使用绝对路径切换到 root 目录，cd  /root&lt;/p&gt;
&lt;p&gt;案例 2: 使用相对路径到 /root 目录，比如在 /home/tom,cd  ../../root&lt;/p&gt;
&lt;p&gt;案例 3：表示回到当前目录的上一级目录，cd ..&lt;/p&gt;
&lt;p&gt;案例 4：回到家目录，cd  ~&lt;/p&gt;
&lt;h2 id=&#34;mkdir指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mkdir指令&#34;&gt;#&lt;/a&gt; mkdir 指令&lt;/h2&gt;
&lt;p&gt;mkdir 创建目录&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法：mkdir   [选项]   要创建的目录&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;常用 [选项]  -p：创建多级目录&lt;/p&gt;
&lt;p&gt;案例 1: 创建一个目录 mkdir   /home/dog&lt;/p&gt;
&lt;p&gt;案例 2: 创建多级目录 mkdir   -p   /home/animal/tiger&lt;/p&gt;
&lt;h2 id=&#34;rmdir指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rmdir指令&#34;&gt;#&lt;/a&gt; rmdir 指令&lt;/h2&gt;
&lt;p&gt;rmdir 删除空目录&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法   rmdir   [选项]   要删除的空目录&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例：删除一个目录   rmdir/home/dog&lt;/p&gt;
&lt;p&gt;使用细节:   rmdir 删除的是空目录，如果目录下有内容时无法删除的。&lt;/p&gt;
&lt;p&gt;提示：如果需要删除非空目录，需要使用  rm  -  rf 要删除的目录比如：rm  -rf  /home/animal&lt;/p&gt;
&lt;h2 id=&#34;touch指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#touch指令&#34;&gt;#&lt;/a&gt; touch 指令&lt;/h2&gt;
&lt;p&gt;touch 指令创建空文件&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法   touch   文件名称&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例：在 /home 目录下，创建一个空文件 hello.txt&lt;/p&gt;
&lt;h2 id=&#34;cp指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cp指令&#34;&gt;#&lt;/a&gt; cp 指令&lt;/h2&gt;
&lt;p&gt;cp 指令拷贝文件到指定目录&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法  cp   [选项]   source dest&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;常用 [选项]  -r  ：递归复制整个文件夹&lt;/p&gt;
&lt;p&gt;案例 1: 将 /home/hello.txt 拷贝到 /home/bbb 目录下  cp  hello.txt    /home/bbb&lt;/p&gt;
&lt;p&gt;案例 2: 递归复制整个文件夹，比如将 /home/bbb 整个目录，拷贝到 /opt cp-r/home/bbb   /opt&lt;/p&gt;
&lt;p&gt;强制覆盖不提示的方法：\cp,  \cp  -r  /home/bbb   /opt&lt;/p&gt;
&lt;h2 id=&#34;rm指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rm指令&#34;&gt;#&lt;/a&gt; rm 指令&lt;/h2&gt;
&lt;p&gt;rm 指令移除文件或目录&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法  rm   [选项]   要删除的文件或目录&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;常用 [选项]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-r：递归删除整个文件夹&lt;/li&gt;
&lt;li&gt;-f ：强制删除不提示&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;案例 1: 将 /home/hello.txt 删除，rm  /home/hello.txt&lt;/p&gt;
&lt;p&gt;案例 2: 递归删除整个文件夹 /home/bbb,   rm -rf  /home/bbb   [删除整个文件夹，不提示]&lt;/p&gt;
&lt;p&gt;使用细节强制删除不提示的方法：带上 - f 参数即可&lt;/p&gt;
&lt;h2 id=&#34;mv指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mv指令&#34;&gt;#&lt;/a&gt; mv 指令&lt;/h2&gt;
&lt;p&gt;mv 移动文件与目录或重命名&lt;/p&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;mv   oldNameFile   newNameFile (功能描述：重命名)&lt;/li&gt;
&lt;li&gt;mv   /temp/movefile   /targetFolder (功能描述：移动文件)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例 1: 将 /home/cat.txt 文件重新命名为 pig.txt&lt;/p&gt;
&lt;p&gt;案例 2: 将 /home/pig.txt 文件移动到 /root 目录下&lt;/p&gt;
&lt;p&gt;案例 3: 移动整个目录，比如将 /opt/bbb 移动到 /home 下 mv   /opt/bbb   /home/&lt;/p&gt;
&lt;h2 id=&#34;cat指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cat指令&#34;&gt;#&lt;/a&gt; cat 指令&lt;/h2&gt;
&lt;p&gt;cat 查看文件内容&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法  cat  [选项] 要查看的文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;常用 [选项]  -n ：显示行号&lt;/p&gt;
&lt;p&gt;使用细节  cat 只能浏览文件，而不能修改文件，为了浏览方便，一般会带上管道命令 | more&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cat   -n   /etc/profile  |  more [进行交互]&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;more指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#more指令&#34;&gt;#&lt;/a&gt; more 指令&lt;/h2&gt;
&lt;p&gt;more 指令是一个基于 VI 编辑器的文本过滤器，它以全屏幕的方式按页显示文本文件的内容。more 指令中内置了若干快捷键 (交互的指令)，详见操作说明&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法  more   要查看的文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/2-Linux%E5%AE%9E%E6%93%8D/image-20230828191014263.png&#34; alt=&#34;image-20230828191014263&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;less指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#less指令&#34;&gt;#&lt;/a&gt; less 指令&lt;/h2&gt;
&lt;p&gt;less 指令用来分屏查看文件内容，它的功能与 more 指令类似，但是比 more 指令更加强大，支持各种显示终端。less 指令在显示文件内容时，并不是一次将整个文件加载之后才显示，而是根据显示需要加载内容，对于显示大型文件具有较高的效率。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法  less  要查看的文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/2-Linux%E5%AE%9E%E6%93%8D/image-20230828191125138.png&#34; alt=&#34;image-20230828191125138&#34; /&gt;&lt;/p&gt;
&lt;p&gt;案例：采用 less 查看一个大文件文件 /opt/ 杂文.txt     less   /opt/ 杂文.txt&lt;/p&gt;
&lt;h2 id=&#34;echo指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#echo指令&#34;&gt;#&lt;/a&gt; echo 指令&lt;/h2&gt;
&lt;p&gt;echo 输出内容到控制台&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法  echo   [选项]  [输出内容]&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例：使用 echo 指令输出环境变量，比如输出 $PATH  ,  $HOSTNAME,&lt;/p&gt;
&lt;p&gt;echo   $HOSTNAME&lt;/p&gt;
&lt;p&gt;案例：使用 echo 指令输出 hello,world!&lt;/p&gt;
&lt;h2 id=&#34;head指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#head指令&#34;&gt;#&lt;/a&gt; head 指令&lt;/h2&gt;
&lt;p&gt;head 用于显示文件的开头部分内容，默认情况下 head 指令显示文件的前 10 行内容&lt;/p&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;head   文件 (功能描述：查看文件头 10 行内容)&lt;/li&gt;
&lt;li&gt;head   -n  5  文件  (功能描述：查看文件头 5 行内容，5 可以是任意行数)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例：查看 /etc/profile 的前面 5 行代码  head   -n   5   /etc/profile&lt;/p&gt;
&lt;h2 id=&#34;tail指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tail指令&#34;&gt;#&lt;/a&gt; tail 指令&lt;/h2&gt;
&lt;p&gt;tail 用于输出文件中尾部的内容，默认情况下 tail 指令显示文件的前 10 行内容。&lt;/p&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;tail   文件（功能描述：查看文件尾 10 行内容）&lt;/li&gt;
&lt;li&gt;tail   -n  5  文件（功能描述：查看文件尾 5 行内容，5 可以是任意行数）&lt;/li&gt;
&lt;li&gt;tail  -f  文件（功能描述：实时追踪该文档的所有更新）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例 1: 查看 /etc/profile 最后 5 行的代码  tail  -n  5  /etc/profile&lt;/p&gt;
&lt;p&gt;案例 2: 实时监控 mydate.txt, 看看到文件有变化时，是否看到，实时的追加 hello,world&lt;/p&gt;
&lt;p&gt;tail  -f  /home/mydate.txt&lt;/p&gt;
&lt;h2 id=&#34;指令和指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指令和指令&#34;&gt;#&lt;/a&gt; &amp;gt; 指令和 &amp;gt;&amp;gt; 指令&lt;/h2&gt;
&lt;p&gt;&amp;gt; 输出重定向和 &amp;gt;&amp;gt; 追加&lt;/p&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ls  -l  &amp;gt;  文件（功能描述：列表的内容写入文件 a.txt 中（覆盖写））&lt;/li&gt;
&lt;li&gt;ls  -al  &amp;gt;&amp;gt; 文件（功能描述：列表的内容追加到文件 aa.txt 的末尾）&lt;/li&gt;
&lt;li&gt;cat  文件 1  &amp;gt; 文件 2（功能描述：将文件 1 的内容覆盖到文件 2）&lt;/li&gt;
&lt;li&gt;echo  &amp;quot;内容&amp;quot;  &amp;gt;&amp;gt; 文件 (追加)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例 1: 将 /home 目录下的文件列表写入到 /home/info.txt 中，覆盖写入 ls  -l  /home  &amp;gt;  /home/info.txt [如果 info.txt 没有，则会创建]&lt;/p&gt;
&lt;p&gt;案例 2: 将当前日历信息追加到 /home/mycal 文件中指令为：cal  &amp;gt;&amp;gt;  /home/mycal&lt;/p&gt;
&lt;h2 id=&#34;history指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#history指令&#34;&gt;#&lt;/a&gt; history 指令&lt;/h2&gt;
&lt;p&gt;查看已经执行过历史命令，也可以执行历史指令&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法 history（功能描述：查看已经执行过历史命令）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例 1: 显示所有的历史命令  history&lt;/p&gt;
&lt;p&gt;案例 2: 显示最近使用过的 10 个指令。history  10&lt;/p&gt;
&lt;p&gt;案例 3：执行历史编号为 5 的指令！5&lt;/p&gt;
&lt;h1 id=&#34;时间日期类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#时间日期类&#34;&gt;#&lt;/a&gt; 时间日期类&lt;/h1&gt;
&lt;h2 id=&#34;date指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#date指令&#34;&gt;#&lt;/a&gt; date 指令&lt;/h2&gt;
&lt;h3 id=&#34;显示当前日期&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#显示当前日期&#34;&gt;#&lt;/a&gt; 显示当前日期&lt;/h3&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;date（功能描述：显示当前时间）&lt;/li&gt;
&lt;li&gt;date+% Y（功能描述：显示当前年份）&lt;/li&gt;
&lt;li&gt;date+% m（功能描述：显示当前月份）&lt;/li&gt;
&lt;li&gt;date+% d（功能描述：显示当前是哪一天）&lt;/li&gt;
&lt;li&gt;date&amp;quot;+% Y-% m-% d% H:% M:% S&amp;quot;（功能描述：显示年月日时分秒）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;指令-设置日期&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指令-设置日期&#34;&gt;#&lt;/a&gt; 指令 - 设置日期&lt;/h3&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;date  -s  字符串时间&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例 1: 设置系统当前时间，比如设置成 2020-11-0320:02:10   date  -s  “2020-11-0320:02:10&lt;/p&gt;
&lt;h2 id=&#34;cal指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cal指令&#34;&gt;#&lt;/a&gt; cal 指令&lt;/h2&gt;
&lt;p&gt;查看日历指令&lt;/p&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;cal  [选项]（功能描述：不加选项，显示本月日历）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例：显示 2020 年日历:cal  2020&lt;/p&gt;
&lt;h1 id=&#34;搜索查找类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#搜索查找类&#34;&gt;#&lt;/a&gt; 搜索查找类&lt;/h1&gt;
&lt;h2 id=&#34;find指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#find指令&#34;&gt;#&lt;/a&gt; find 指令&lt;/h2&gt;
&lt;p&gt;find 指令将从指定目录向下递归地遍历其各个子目录，将满足条件的文件或者目录显示在终端。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法  find   [搜索范围]   [选项]&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/2-Linux%E5%AE%9E%E6%93%8D/image-20230828193151543.png&#34; alt=&#34;image-20230828193151543&#34; /&gt;&lt;/p&gt;
&lt;p&gt;案例 1: 按文件名：根据名称查找 /home 目录下的 hello.txt 文件   find   /home   -name   hello.txt&lt;/p&gt;
&lt;p&gt;案例 2：按拥有者：查找 /opt 目录下，用户名称为 nobody 的文件   find   /opt   -user   nobody&lt;/p&gt;
&lt;p&gt;案例 3：查找整个系统下大于 200M 的文件（+n 大于 - n 小于 n 等于，单位有 k,M,G）find /  -size +200M&lt;/p&gt;
&lt;h2 id=&#34;grep指令和管道符号&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#grep指令和管道符号&#34;&gt;#&lt;/a&gt; grep 指令和管道符号 |&lt;/h2&gt;
&lt;p&gt;grep 过滤查找，管道符，“|”，表示将前一个命令的处理结果输出传递给后面的命令处理。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;grep  [选项]  查找内容源文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/2-Linux%E5%AE%9E%E6%93%8D/image-20230828193511230.png&#34; alt=&#34;image-20230828193511230&#34; /&gt;&lt;/p&gt;
&lt;p&gt;案例 1: 请在 hello.txt 文件中，查找 &amp;quot;yes&amp;quot; 所在行，并且显示行号&lt;/p&gt;
&lt;p&gt;写法 1:cat  /home/hello.txt   |   grep &amp;quot;yes&amp;quot;&lt;/p&gt;
&lt;p&gt;写法 2: grep  -n &amp;quot;yes&amp;quot;  /home/hello.txt&lt;/p&gt;
&lt;h1 id=&#34;压缩和解压类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#压缩和解压类&#34;&gt;#&lt;/a&gt; 压缩和解压类&lt;/h1&gt;
&lt;h2 id=&#34;gzipgunzip指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gzipgunzip指令&#34;&gt;#&lt;/a&gt; gzip/gunzip 指令&lt;/h2&gt;
&lt;p&gt;gzip 用于压缩文件，gunzip 用于解压的&lt;/p&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;gzip   文件（功能描述：压缩文件，只能将文件压缩为 *.gz 文件）&lt;/li&gt;
&lt;li&gt;gunzip   文件.gz（功能描述：解压缩文件命令）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例 1:gzip 压缩，将 /home 下的 hello.txt 文件进行压缩   gzip   /home/hello.txt&lt;/p&gt;
&lt;p&gt;案例 2:gunzip 压缩，将 /home 下的 hello.txt.gz 文件进行解压缩  gunzip  /home/hello.txt.gz&lt;/p&gt;
&lt;h2 id=&#34;zipunzip指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#zipunzip指令&#34;&gt;#&lt;/a&gt; zip/unzip 指令&lt;/h2&gt;
&lt;p&gt;zip 用于压缩文件，unzip 用于解压的，这个在项目打包发布中很有用的&lt;/p&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;zip  [选项]   XXX.zip  将要压缩的内容（功能描述：压缩文件和目录的命令）&lt;/li&gt;
&lt;li&gt;unzip  [选项]  XXX.zip（功能描述：解压缩文件）&lt;/li&gt;
&lt;li&gt;zip 常用选项  -r  ：递归压缩，即压缩目录&lt;/li&gt;
&lt;li&gt;unzip 的常用选项 -d &amp;lt;目录&amp;gt; ：指定解压后文件的存放目录&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例 1: 将 /home 下的所有文件 / 文件夹进行压缩成 myhome.zip ；  zip  -r  myhome.zip  /home/ [将 home 目录及其包含的文件和子文件夹都压缩]&lt;/p&gt;
&lt;p&gt;案例 2: 将 myhome.zip 解压到 /opt/tmp 目录下； unzip  -d   /opt/tmp   /home/myhome.zip&lt;/p&gt;
&lt;h2 id=&#34;tar指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tar指令&#34;&gt;#&lt;/a&gt; tar 指令&lt;/h2&gt;
&lt;p&gt;tar 指令是打包指令，最后打包后的文件是.tar.gz 的文件。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法  tar  [选项]  XXX.tar.gz   打包的内容  (功能描述：打包目录，压缩后的文件格式.tar.gz)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例 1: 压缩多个文件，将 /home/pig.txt 和 /home/cat.txt 压缩成 pc.tar.gz&lt;/p&gt;
&lt;p&gt;tar    -zcvf  pc.tar.gz   /home/pig.txt  /home/cat.txt&lt;/p&gt;
&lt;p&gt;案例 2: 将 /home 的文件夹压缩成 myhome.tar.gz&lt;/p&gt;
&lt;p&gt;tar   -zcvf   myhome.tar.gz   /home/&lt;/p&gt;
&lt;p&gt;案例 3: 将 pc.tar.gz 解压到当前目录&lt;/p&gt;
&lt;p&gt;tar  -zxvf   pc.tar.gz&lt;/p&gt;
&lt;p&gt;案例 4: 将 myhome.tar.gz 解压到 /opt/tmp2 目录下&lt;/p&gt;
&lt;p&gt;tar  -zxvf   /home/myhome.tar.gz  -C  /opt/tmp2&lt;/p&gt;
</content>
        <category term="Linux" scheme="https://jihaipeng123.github.io/categories/Linux/" />
        <updated>2023-08-28T09:02:21.000Z</updated>
    </entry>
    <entry>
        <id>https://jihaipeng123.github.io/1-Linux%E5%85%A5%E9%97%A8/</id>
        <title>1.Linux入门</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/1-Linux%E5%85%A5%E9%97%A8/"/>
        <content type="html">&lt;h1 id=&#34;应用领域&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#应用领域&#34;&gt;#&lt;/a&gt; 应用领域&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828151126324.png&#34; alt=&#34;image-20230828151126324&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828154542640.png&#34; alt=&#34;image-20230828154542640&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;服务器领域&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#服务器领域&#34;&gt;#&lt;/a&gt; 服务器领域&lt;/h2&gt;
&lt;p&gt;​	服务器领域 linux 在服务器领域的应用是最强的。linux 免费、稳定、高效等特点在这里得到了很好的体现，尤其在一些高端领域尤为广泛（c/c++/php/java/python/go）。&lt;/p&gt;
&lt;h2 id=&#34;嵌入式领域&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#嵌入式领域&#34;&gt;#&lt;/a&gt; 嵌入式领域&lt;/h2&gt;
&lt;p&gt;​	嵌入式领域 linux 运行稳定、对网络的良好支持性、低成本，且可以根据需要进行软件裁剪，内核最小可以达到几百 KB 等特点，使其近些年来在嵌入式领域的应用得到非常大的提高主要应用：机顶盒、数字电视、网络电话、程控交换机、手机、PDA、智能家居、智能硬件等都是其应用领域。以后在物联网中应用会更加广泛。&lt;/p&gt;
&lt;h1 id=&#34;介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#介绍&#34;&gt;#&lt;/a&gt; 介绍&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;linux 是一个开源、免费的操作系统，其稳定性、安全性、处理多并发已经得到业界的认可，目前很多企业级的项目 (c/c++/php/python/java/go) 都会部署到 Linux/unix 系统上。&lt;/li&gt;
&lt;li&gt;常见的操作系统 (windows、IOS、Android、MacOS,Linux,Unix)&lt;/li&gt;
&lt;li&gt;xLinux 之父 -----LinusTorvalds-----Git 创作者 ----- 世界著名黑客&lt;/li&gt;
&lt;li&gt;Linux 主要的发行版：Ubuntu (乌班图)、RedHat (红帽)、CentOS、Debain [蝶变]、Fedora、SuSE、OpenSUS&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Linux 和 Unix 的关系&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828155310706.png&#34; alt=&#34;image-20230828155310706&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;vm和linux的安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vm和linux的安装&#34;&gt;#&lt;/a&gt; VM 和 Linux 的安装&lt;/h2&gt;
&lt;p&gt;先安装 virtualmachine15.52.  ---- 官方地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudm13YXJlLmNvbS9jbi5odG1s&#34;&gt;https://www.vmware.com/cn.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;再安装 Linux (CentOS7.6/centOS8.1)&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828162218104.png&#34; alt=&#34;image-20230828162218104&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;centos安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#centos安装&#34;&gt;#&lt;/a&gt; CentOS 安装&lt;/h2&gt;
&lt;p&gt;1. 创建虚拟机&lt;/p&gt;
&lt;p&gt;2. 开始安装系统 (CentOS7.6) 的步骤 https://mirrors.aliyun.com/centos/8.1.1911/isos/x86_64/CentOS-8.1.1911-x86_64-dvd1.iso&lt;/p&gt;
&lt;p&gt;3. 提示生成复杂密码:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zdWlqaW1pbWFzaGVuZ2NoZW5nLjUxMjQwLmNvbS8zLkNlbnRPUw==&#34;&gt;https://suijimimashengcheng.51240.com/3.CentOS&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;安装难点 - 网络连接方式理解&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828162428999.png&#34; alt=&#34;image-20230828162428999&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;虚拟机快照&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#虚拟机快照&#34;&gt;#&lt;/a&gt; 虚拟机快照&lt;/h2&gt;
&lt;p&gt;如果你在使用虚拟机系统的时候 (比如 linux)，你想回到原先的某一个状态，也就是说你担心可能有些误操作造成系统异常，需要回到原先某个正常运行的状态，vmware 也提供了这样的功能，就叫快照管理。&lt;/p&gt;
&lt;h2 id=&#34;虚拟机迁移和删除&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#虚拟机迁移和删除&#34;&gt;#&lt;/a&gt; 虚拟机迁移和删除&lt;/h2&gt;
&lt;p&gt;​    虚拟系统安装好了，它的本质就是文件 (放在文件夹的)。因此虚拟系统的迁移很方便，你可以把安装好的虚拟系统这个文件夹整体拷贝或者剪切到另外位置使用。删除也很简单，用 vmware 进行移除，再点击菜单 -&amp;gt; 从磁盘删除即可，或者直接手动删除虚拟系统对应的文件夹即可&lt;/p&gt;
&lt;h2 id=&#34;安装vmtools&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装vmtools&#34;&gt;#&lt;/a&gt; 安装 vmtools&lt;/h2&gt;
&lt;p&gt;1) 进入 centos&lt;/p&gt;
&lt;p&gt;2) 点击 vm 菜单的 -&amp;gt;installvmwaretools&lt;/p&gt;
&lt;p&gt;3) centos 会出现一个 vm 的安装包，xx.tar.gz&lt;/p&gt;
&lt;p&gt;4) 拷贝到 /opt&lt;/p&gt;
&lt;p&gt;5) 使用解压命令 tar, 得到一个安装文件 cd/opt [进入到 opt 目录] tar-zxvfxx.tar.gz&lt;/p&gt;
&lt;p&gt;6) 进入该 vm 解压的目录，/opt 目录下 cdvmware...&lt;/p&gt;
&lt;p&gt;7) 安装./vmware-install.pl&lt;/p&gt;
&lt;p&gt;8) 全部使用默认设置即可，就可以安装成功&lt;/p&gt;
&lt;p&gt;9) 注意：安装 vmtools 需要有 gcc.gcc-v&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828162921575.png&#34; alt=&#34;image-20230828162921575&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;目录详解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目录详解&#34;&gt;#&lt;/a&gt; 目录详解&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;linux 的文件系统是采用级层式的树状目录结构，在此结构中的最上层是根目录 “/”，然后在此目录下再创建其他的目录。&lt;/li&gt;
&lt;li&gt;深刻理解 linux 树状文件目录是非常重要的记住一句经典的话：在 Linux 世界里，一切皆文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828163147597.png&#34; alt=&#34;image-20230828163147597&#34; /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;/bin  常用（/usr/bin、/usr/local/bin）是 Binary 的缩写，这个目录存放着最经常使用的命令&lt;/li&gt;
&lt;li&gt;/sbin  (/usr/sbin、/usr/local/sbin) SuperUser，这里存放的是系统管理员使用的系统管理程序。&lt;/li&gt;
&lt;li&gt;/home 常用 存放普通用户的主目录，在 Linux 中每个用户都有一个自己的目录，一般该目录名是以用户的账号命名&lt;/li&gt;
&lt;li&gt;/root  常用  该目录为系统管理员，也称作超级权限者的用户主目录&lt;/li&gt;
&lt;li&gt;/lib 系统开机所需要最基本的动态连接共享库，其作用类似于 Windows 里的 DLL 文件。几乎所有的应用程序都需要用到这些共享库&lt;/li&gt;
&lt;li&gt;/lost+found 这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件&lt;/li&gt;
&lt;li&gt;/etc  常用  所有的系统管理所需要的配置文件和子目录，比如安装 mysql 数据库 my.conf&lt;/li&gt;
&lt;li&gt;/usr   常用   这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似与 windows 下的 programfiles 目录。&lt;/li&gt;
&lt;li&gt;/boot   常用   存放的是启动 Linux 时使用的一些核心文件，包括一些连接文件以及镜像文件&lt;/li&gt;
&lt;li&gt;/proc    不能动    这个目录是一个虚拟的目录，它是系统内存的映射，访问这个目录来获取系统信息&lt;/li&gt;
&lt;li&gt;/srv   不能动   service 缩写，该目录存放一些服务启动之后需要提取的数据&lt;/li&gt;
&lt;li&gt;/sys  不能动   这是 linux2.6 内核的一个很大的变化。该目录下安装了 2.6 内核中新出现的一个文件系统 sysfs=》【别动】&lt;/li&gt;
&lt;li&gt;/tmp  这个目录是用来存放一些临时文件的&lt;/li&gt;
&lt;li&gt;/dev   类似于 windows 的设备管理器，把所有的硬件用文件的形式存储&lt;/li&gt;
&lt;li&gt;/media   常用   linux 系统会自动识别一些设备，例如 U 盘、光驱等等，当识别后，linux 会把识别的设备挂载到这个目录下&lt;/li&gt;
&lt;li&gt;/mnt    常用   系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将外部的存储挂载在 /mnt/ 上，然后进入该目录就可以查看里的内容了。d:/myshare&lt;/li&gt;
&lt;li&gt;/opt   这是给主机额外安装软件所存放的目录。如安装 ORACLE 数据库就可放到该目录下。默认为空&lt;/li&gt;
&lt;li&gt;/usr/local   常用   这是另一个给主机额外安装软件所安装的目录。一般是通过编译源码方式安装的程序&lt;/li&gt;
&lt;li&gt;/var    常用    这个目录中存放着在不断扩充着的东西，习惯将经常被修改的目录放在这个目录下。包括各种日志文件&lt;/li&gt;
&lt;li&gt;/selinux     [security-enhancedlinux] SELinux 是一种安全子系统，它能控制程序只能访问特定文件，有三种工作模式，可以自行设置.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;linux-xshell7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#linux-xshell7&#34;&gt;#&lt;/a&gt; Linux-Xshell7&lt;/h1&gt;
&lt;h2 id=&#34;远程登录&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#远程登录&#34;&gt;#&lt;/a&gt; 远程登录&lt;/h2&gt;
&lt;p&gt;1) linux 服务器是开发小组共享&lt;/p&gt;
&lt;p&gt;2) 正式上线的项目是运行在公网&lt;/p&gt;
&lt;p&gt;3) 因此程序员需要远程登录到 Linux 进行项目管理或者开发&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828164146308.png&#34; alt=&#34;image-20230828164146308&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt; &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Xshell 是目前最好的远程登录到 Linux 操作的软件，流畅的速度并且完美解决了中文乱码的问题，是目前程序员首选的软件。&lt;/li&gt;
&lt;li&gt;Xshell 是一个强大的安全终端模拟软件，它支持 SSH1,SSH2, 以及 MicrosoftWindows 平台的 TELNET 协议。&lt;/li&gt;
&lt;li&gt;Xshell 可以在 Windows 界面下用来访问远端不同系统下的服务器，从而比较好的达到远程控制终端的目的&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安装配置和使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装配置和使用&#34;&gt;#&lt;/a&gt; 安装配置和使用&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828164529802.png&#34; alt=&#34;image-20230828164529802&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解决中文乱码&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828164543283.png&#34; alt=&#34;image-20230828164543283&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;vi和vim编辑器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vi和vim编辑器&#34;&gt;#&lt;/a&gt; Vi 和 Vim 编辑器&lt;/h2&gt;
&lt;p&gt;Linux 系统会内置 vi 文本编辑器 Vim 具有程序编辑的能力，可以看做是 Vi 的增强版本，可以主动的以字体颜色辨别语法的正确性，方便程序设计。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。vi 和 vim 常用的三种模式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;正常模式以 vim 打开一个档案就直接进入一般模式了 (这是默认的模式)。在这个模式中，你可以使用『上下左右』按键来移动光标，你可以使用『删除字符』或『删除整行』来处理档案内容，也可以使用『复制、粘贴』来处理你的文件数据。&lt;/li&gt;
&lt;li&gt;插入模式按下 i,I,o,O,a,A,r,R 等任何一个字母之后才会进入编辑模式，一般来说按 i 即可.&lt;/li&gt;
&lt;li&gt;命令行模式输入 esc 再输入：在这个模式当中，可以提供你相关指令，完成读取、存盘、替换、离开 vim、显示行号等的动作则是在此模式中达成的！&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;拷贝当前行yy&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;拷贝当前行向下的&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;行&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;yy，并粘贴（输入p）。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;删除当前行dd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;删除当前行向下的&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;行&lt;span class=&#34;token number&#34;&gt;5d&lt;/span&gt;d&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;在文件中查找某个单词&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;命令行下&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;关键字，回车查找&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;输入n就是查找下一个&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;设置文件的行号，取消文件的行号&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;命令行下&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;setnu和&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;setnonu&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;编辑&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;etc&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;profile文件，在一般模式下&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;使用快捷键到该文档的最末行&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;G&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;和最首行&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;gg&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;在一个文件中输入&lt;span class=&#34;token string&#34;&gt;&#34;hello&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;在一般模式下&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;然后又撤销这个动作u&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;编辑&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;etc&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;profile文件，在一般模式下&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;并将光标移动到&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;输入&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;再输入shift&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;g&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;../pictures/1-Linux%E5%85%A5%E9%97%A8/image-20230828165435437.png&#34; alt=&#34;image-20230828165435437&#34; /&gt;&lt;/p&gt;
</content>
        <category term="Linux" scheme="https://jihaipeng123.github.io/categories/Linux/" />
        <updated>2023-08-28T07:07:37.000Z</updated>
    </entry>
    <entry>
        <id>https://jihaipeng123.github.io/11-redis/</id>
        <title>11.redis</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/11-redis/"/>
        <content type="html">&lt;p&gt;&lt;img data-src=&#34;../pictures/11-redis/image-20230824171703738.png&#34; alt=&#34;image-20230824171703738&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;redis&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis&#34;&gt;#&lt;/a&gt; Redis&lt;/h1&gt;
&lt;h2 id=&#34;概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;p&gt;redis 是一款高性能的 NOSQL 系列的非关系型数据库&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.什么是NOSQL
	NoSQL(NoSQL = Not Only SQL)，意即“不仅仅是SQL”，是一项全新的数据库理念，泛指非关系型的数据库。
	随着互联网web2.0网站的兴起，传统的关系数据库在应付web2.0网站，特别是超大规模和高并发的SNS类型的web2.0纯动态网站已经显得力不从心，暴露了很多难以克服的问题，而非关系型的数据库则由于其本身的特点得到了非常迅速的发展。NoSQL数据库的产生就是为了解决大规模数据集合多重数据种类带来的挑战，尤其是大数据应用难题。
	1.1. NOSQL和关系型数据库比较
		优点：
		1）成本：nosql数据库简单易部署，基本都是开源软件，不需要像使用oracle那样花费大量成本购买使用，相比关系型数据库价格便宜。
		2）查询速度：nosql数据库将数据存储于缓存之中，关系型数据库将数据存储在硬盘中，自然查询速度远不及nosql数据库。
		3）存储数据的格式：nosql的存储格式是key,value形式、文档形式、图片形式等等，所以可以存储基础类型以及对象或者是集合等各种格式，而数据库则只支持基础类型。
		4）扩展性：关系型数据库有类似join这样的多表查询机制的限制导致扩展很艰难。
		缺点：
		1）维护的工具和资料有限，因为nosql是属于新的技术，不能和关系型数据库10几年的技术同日而语。
		2）不提供对sql的支持，如果不支持sql这样的工业标准，将产生一定用户的学习和使用成本。
		3）不提供关系型数据库对事务的处理。

		1.2. 非关系型数据库的优势：
		1）性能NOSQL是基于键值对的，可以想象成表中的主键和值的对应关系，而且不需要经过SQL层的解析，所以性能非常高。
		2）可扩展性同样也是因为基于键值对，数据之间没有耦合性，所以非常容易水平扩展。

		1.3. 关系型数据库的优势：
		1）复杂查询可以用SQL语句方便的在一个表以及多个表之间做非常复杂的数据查询。
		2）事务支持使得对于安全性能很高的数据访问要求得以实现。对于这两类数据库，对方的优势就是自己的弱势，反之亦然。
		
		1.4. 总结
		关系型数据库与NoSQL数据库并非对立而是互补的关系，即通常情况下使用关系型数据库，在适合使用NoSQL的时候使用NoSQL数据库，
		让NoSQL数据库对关系型数据库的不足进行弥补。
		一般会将数据存储在关系型数据库中，在nosql数据库中备份存储关系型数据库的数据

2.主流的NOSQL产品
	•	键值(Key-Value)存储数据库
		相关产品： Tokyo Cabinet/Tyrant、Redis、Voldemort、Berkeley DB
		典型应用： 内容缓存，主要用于处理大量数据的高访问负载。 
		数据模型： 一系列键值对
		优势： 快速查询
		劣势： 存储的数据缺少结构化
	•	列存储数据库
		相关产品：Cassandra, HBase, Riak
		典型应用：分布式的文件系统
		数据模型：以列簇式存储，将同一列数据存在一起
		优势：查找速度快，可扩展性强，更容易进行分布式扩展
		劣势：功能相对局限
	•	文档型数据库
		相关产品：CouchDB、MongoDB
		典型应用：Web应用（与Key-Value类似，Value是结构化的）
		数据模型： 一系列键值对
		优势：数据结构要求不严格
		劣势： 查询性能不高，而且缺乏统一的查询语法
	•	图形(Graph)数据库
		相关数据库：Neo4J、InfoGrid、Infinite Graph
		典型应用：社交网络
		数据模型：图结构
		优势：利用图结构相关算法。
		劣势：需要对整个图做计算才能得出结果，不容易做分布式的集群方案。
3 什么是Redis
	Redis是用C语言开发的一个开源的高性能键值对（key-value）数据库，官方提供测试数据，50个并发执行100000个请求,读的速度是110000次/s,写的速度是81000次/s ，且Redis通过提供多种键值数据类型来适应不同场景下的存储需求，目前为止Redis支持的键值数据类型如下：
		1) 字符串类型 string
		2) 哈希类型 hash
		3) 列表类型 list
		4) 集合类型 set
		5) 有序集合类型 sortedset
	3.1 redis的应用场景
		•	缓存（数据查询、短连接、新闻内容、商品内容等等）
		•	聊天室的在线好友列表
		•	任务队列。（秒杀、抢购、12306等等）
		•	应用排行榜
		•	网站访问统计
		•	数据过期处理（可以精确到毫秒
		•	分布式集群架构中的session分离
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;下载安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#下载安装&#34;&gt;#&lt;/a&gt; 下载安装&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;	1. 官网：https://redis.io
	2. 中文网：http://www.redis.net.cn/
	3. 解压直接可以使用：
		* redis.windows.conf：配置文件
		* redis-cli.exe：redis的客户端
		* redis-server.exe：redis服务器端
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;命令操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#命令操作&#34;&gt;#&lt;/a&gt; 命令操作&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;1. redis的数据结构：
	* redis存储的是：key,value格式的数据，其中key都是字符串，value有5种不同的数据结构
	* value的数据结构：
			1 字符串类型 string
			2 哈希类型 hash ： map格式  
			3 列表类型 list ： linkedlist格式。支持重复元素
			4 集合类型 set  ： 不允许重复元素
			5 有序集合类型 sortedset：不允许重复元素，且元素有顺序
		
2. 字符串类型 string
	1. 存储： set key value
		127.0.0.1:6379&amp;gt; set username zhangsan
		OK
	2. 获取： get key
		127.0.0.1:6379&amp;gt; get username
		&amp;quot;zhangsan&amp;quot;
	3. 删除： del key
		127.0.0.1:6379&amp;gt; del age
		(integer) 1
3. 哈希类型 hash
	1. 存储： hset key field value
		127.0.0.1:6379&amp;gt; hset myhash username lisi
		(integer) 1
		127.0.0.1:6379&amp;gt; hset myhash password 123
		(integer) 1
	2. 获取： 
		* hget key field: 获取指定的field对应的值
			127.0.0.1:6379&amp;gt; hget myhash username
			&amp;quot;lisi&amp;quot;
		* hgetall key：获取所有的field和value
			127.0.0.1:6379&amp;gt; hgetall myhash
			1) &amp;quot;username&amp;quot;
			2) &amp;quot;lisi&amp;quot;
			3) &amp;quot;password&amp;quot;
			4) &amp;quot;123&amp;quot;		
	3. 删除： hdel key field
			127.0.0.1:6379&amp;gt; hdel myhash username
			(integer) 1
	
4. 列表类型 list:可以添加一个元素到列表的头部（左边）或者尾部（右边）
	1. 添加：
		1. lpush key value: 将元素加入列表左表
		2. rpush key value：将元素加入列表右边	
			127.0.0.1:6379&amp;gt; lpush myList a
			(integer) 1
			127.0.0.1:6379&amp;gt; lpush myList b
			(integer) 2
			127.0.0.1:6379&amp;gt; rpush myList c
			(integer) 3
	2. 获取：
		* lrange key start end ：范围获取
			127.0.0.1:6379&amp;gt; lrange myList 0 -1
			1) &amp;quot;b&amp;quot;
			2) &amp;quot;a&amp;quot;
			3) &amp;quot;c&amp;quot;
	3. 删除：
		* lpop key： 删除列表最左边的元素，并将元素返回
		* rpop key： 删除列表最右边的元素，并将元素返回
5. 集合类型 set ： 不允许重复元素
	1. 存储：sadd key value
		127.0.0.1:6379&amp;gt; sadd myset a
		(integer) 1
		127.0.0.1:6379&amp;gt; sadd myset a
		(integer) 0
	2. 获取：smembers key:获取set集合中所有元素
		127.0.0.1:6379&amp;gt; smembers myset
		1) &amp;quot;a&amp;quot;
	3. 删除：srem key value:删除set集合中的某个元素	
		127.0.0.1:6379&amp;gt; srem myset a
		(integer) 1
6. 有序集合类型 sortedset
	不允许重复元素，且元素有顺序.每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。
	1. 存储：zadd key score value
		127.0.0.1:6379&amp;gt; zadd mysort 60 zhangsan
		(integer) 1
		127.0.0.1:6379&amp;gt; zadd mysort 50 lisi
		(integer) 1
		127.0.0.1:6379&amp;gt; zadd mysort 80 wangwu
		(integer) 1
	2. 获取：zrange key start end [withscores]
		127.0.0.1:6379&amp;gt; zrange mysort 0 -1
		1) &amp;quot;lisi&amp;quot;
		2) &amp;quot;zhangsan&amp;quot;
		3) &amp;quot;wangwu&amp;quot;
		127.0.0.1:6379&amp;gt; zrange mysort 0 -1 withscores
		1) &amp;quot;zhangsan&amp;quot;
		2) &amp;quot;60&amp;quot;
		3) &amp;quot;wangwu&amp;quot;
		4) &amp;quot;80&amp;quot;
		5) &amp;quot;lisi&amp;quot;
		6) &amp;quot;500&amp;quot;
	3. 删除：zrem key value
		127.0.0.1:6379&amp;gt; zrem mysort lisi
		(integer) 1
7. 通用命令
	1. keys * : 查询所有的键
	2. type key ： 获取键对应的value的类型
	3. del key：删除指定的key value
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;持久化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#持久化&#34;&gt;#&lt;/a&gt; 持久化&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;   1. redis是一个内存数据库，当redis服务器重启，获取电脑重启，数据会丢失，我们可以将redis内存中的数据持久化保存到硬盘的文件中。
   2. redis持久化机制：
		1. RDB：默认方式，不需要进行配置，默认就使用这种机制
			* 在一定的间隔时间中，检测key的变化情况，然后持久化数据
			1. 编辑redis.windwos.conf文件
				#   after 900 sec (15 min) if at least 1 key changed
				save 900 1
				#   after 300 sec (5 min) if at least 10 keys changed
				save 300 10
				#   after 60 sec if at least 10000 keys changed
				save 60 10000
				
			2. 重新启动redis服务器，并指定配置文件名称
				D:\JavaWeb2018\day23_redis\资料\redis\windows-64\redis-2.8.9&amp;gt;redis-server.exe redis.windows.conf	
			
		2. AOF：日志记录的方式，可以记录每一条命令的操作。可以每一次命令操作后，持久化数据
			1. 编辑redis.windwos.conf文件
				appendonly no（关闭aof） --&amp;gt; appendonly yes （开启aof）
				
				# appendfsync always ： 每一次操作都进行持久化
				appendfsync everysec ： 每隔一秒进行一次持久化
				# appendfsync no	 ： 不进行持久化
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;h1 id=&#34;java客户端-jedis&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#java客户端-jedis&#34;&gt;#&lt;/a&gt; Java 客户端 Jedis&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Jedis: 一款 java 操作 redis 数据库的工具.&lt;/li&gt;
&lt;li&gt;使用步骤：
&lt;ol&gt;
&lt;li&gt;下载 jedis 的 jar 包&lt;/li&gt;
&lt;li&gt;使用&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//1. 获取连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt; jedis &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;localhost&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6379&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//2. 操作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;username&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//3. 关闭连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;jedis操作各种redis中的数据结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jedis操作各种redis中的数据结构&#34;&gt;#&lt;/a&gt; Jedis 操作各种 redis 中的数据结构&lt;/h1&gt;
&lt;h2 id=&#34;字符串类型-string&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字符串类型-string&#34;&gt;#&lt;/a&gt; 字符串类型 string&lt;/h2&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;set&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;get&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//1. 获取连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt; jedis &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 如果使用空参构造，默认值 &#34;localhost&#34;,6379 端口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//2. 操作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token comment&#34;&gt;// 存储&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;username&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;username&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token comment&#34;&gt;// 可以使用 setex () 方法存储可以指定过期时间的 key value		        jedis.setex (&#34;activecode&#34;,20,&#34;hehe&#34;);// 将 activecode：hehe 键值对存入 redis，并且 20 秒后自动删除该键值对&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//3. 关闭连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;哈希类型-hash&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#哈希类型-hash&#34;&gt;#&lt;/a&gt; 哈希类型 hash :&lt;/h2&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;map格式&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hset&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hget&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hgetAll&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//1. 获取连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt; jedis &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 如果使用空参构造，默认值 &#34;localhost&#34;,6379 端口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;//2. 操作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 存储 hash&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;hset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;lisi&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;hset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;23&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;hset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;gender&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;female&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 获取 hash&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;hget&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;		        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 获取 hash 的所有 map 中的数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	 &lt;span class=&#34;token class-name&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; user &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;hgetAll&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// keyset&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token class-name&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; keySet &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; user&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;keySet&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; key &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; keySet&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		            &lt;span class=&#34;token comment&#34;&gt;// 获取 value&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		            &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; user&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		            &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;//3. 关闭连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;列表类型-list&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#列表类型-list&#34;&gt;#&lt;/a&gt; 列表类型 list&lt;/h2&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;linkedlist格式。支持重复元素&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			lpush &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; rpush&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			lpop &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; rpop&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			lrange start end &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; 范围获取&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			 &lt;span class=&#34;token comment&#34;&gt;//1. 获取连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt; jedis &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 如果使用空参构造，默认值 &#34;localhost&#34;,6379 端口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//2. 操作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//list 存储&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;lpush&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mylist&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 从左边存&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;rpush&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mylist&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 从右边存&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//list 范围获取&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; mylist &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;lrange&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mylist&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mylist&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//list 弹出&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; element1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;lpop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mylist&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//c&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;element1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; element2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;rpop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mylist&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//c&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;element2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//list 范围获取&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; mylist2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;lrange&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mylist&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mylist2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//3. 关闭连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;集合类型-set&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#集合类型-set&#34;&gt;#&lt;/a&gt; 集合类型 set&lt;/h2&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;不允许重复元素&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			sadd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			smembers&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;获取所有元素&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;//1. 获取连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt; jedis &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 如果使用空参构造，默认值 &#34;localhost&#34;,6379 端口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//2. 操作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//set 存储&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sadd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;myset&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;java&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;php&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c++&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		     &lt;span class=&#34;token comment&#34;&gt;//set 获取&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token class-name&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; myset &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;smembers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;myset&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;myset&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;//3. 关闭连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;有序集合类型-sortedset&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#有序集合类型-sortedset&#34;&gt;#&lt;/a&gt; 有序集合类型 sortedset&lt;/h2&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;不允许重复元素，且元素有顺序&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			zadd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			zrange&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;//1. 获取连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt; jedis &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 如果使用空参构造，默认值 &#34;localhost&#34;,6379 端口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//2. 操作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//sortedset 存储&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;zadd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mysortedset&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;亚瑟&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;zadd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mysortedset&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;后裔&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;zadd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mysortedset&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;55&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;孙悟空&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//sortedset 获取&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; mysortedset &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;zrange&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mysortedset&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mysortedset&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//3. 关闭连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		      jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;h1 id=&#34;jedis连接池-jedispool&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jedis连接池-jedispool&#34;&gt;#&lt;/a&gt; jedis 连接池： JedisPool&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用：&lt;br /&gt;
​				1. 创建 JedisPool 连接池对象&lt;br /&gt;
​				2. 调用方法 getResource () 方法获取 Jedis 连接&lt;br /&gt;
​&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;​	&lt;span class=&#34;token comment&#34;&gt;//0. 创建一个配置对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			        &lt;span class=&#34;token class-name&#34;&gt;JedisPoolConfig&lt;/span&gt; config &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JedisPoolConfig&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			        config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setMaxTotal&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			        config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setMaxIdle&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			        &lt;span class=&#34;token comment&#34;&gt;//1. 创建 Jedis 连接池对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			        &lt;span class=&#34;token class-name&#34;&gt;JedisPool&lt;/span&gt; jedisPool &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JedisPool&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;localhost&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6379&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			        &lt;span class=&#34;token comment&#34;&gt;//2. 获取连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			        &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt; jedis &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; jedisPool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getResource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			        &lt;span class=&#34;token comment&#34;&gt;//3. 使用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     ​			        jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hehe&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;heihei&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;​			            &lt;span class=&#34;token comment&#34;&gt;//4. 关闭 归还到连接池中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;​			           jedis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;​&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;连接池工具类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#连接池工具类&#34;&gt;#&lt;/a&gt; 连接池工具类&lt;/h1&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JedisPoolUtils&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	 &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JedisPool&lt;/span&gt; jedisPool&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		    &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token comment&#34;&gt;// 读取配置文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token class-name&#34;&gt;InputStream&lt;/span&gt; is &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JedisPoolUtils&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getClassLoader&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getResourceAsStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;jedis.properties&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token comment&#34;&gt;// 创建 Properties 对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token class-name&#34;&gt;Properties&lt;/span&gt; pro &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Properties&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token comment&#34;&gt;// 关联文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		            pro&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;load&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;is&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;IOException&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		            e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;printStackTrace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token comment&#34;&gt;// 获取数据，设置到 JedisPoolConfig 中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token class-name&#34;&gt;JedisPoolConfig&lt;/span&gt; config &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JedisPoolConfig&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setMaxTotal&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;parseInt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pro&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getProperty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;maxTotal&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setMaxIdle&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;parseInt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pro&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getProperty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;maxIdle&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token comment&#34;&gt;// 初始化 JedisPool&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        jedisPool &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JedisPool&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;pro&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getProperty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;host&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;parseInt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pro&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getProperty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;port&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		     * 获取连接方法&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Jedis&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getJedis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; jedisPool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getResource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​				&lt;br /&gt;
​&lt;/p&gt;
&lt;h1 id=&#34;案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例&#34;&gt;#&lt;/a&gt; 案例&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/11-redis/image-20230825100655015.png&#34; alt=&#34;image-20230825100655015&#34; /&gt;&lt;/p&gt;
&lt;p&gt;案例需求：&lt;br /&gt;
1. 提供 index.html 页面，页面中有一个省份 下拉列表&lt;br /&gt;
 2. 当 页面加载完成后 发送 ajax 请求，加载所有省份&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意：使用 redis 缓存一些不经常发生变化的数据。
&lt;ul&gt;
&lt;li&gt;数据库的数据一旦发生改变，则需要更新缓存。
&lt;ul&gt;
&lt;li&gt;数据库的表执行 增删改的相关操作，需要将 redis 缓存数据情况，再次存入&lt;/li&gt;
&lt;li&gt;在 service 对应的增删改方法中，将 redis 数据删除。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​&lt;/p&gt;
</content>
        <category term="JavaWeb" scheme="https://jihaipeng123.github.io/categories/JavaWeb/" />
        <updated>2023-08-28T04:38:04.000Z</updated>
    </entry>
    <entry>
        <id>https://jihaipeng123.github.io/10-Ajax-Json/</id>
        <title>10.Ajax&amp;Json</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/10-Ajax-Json/"/>
        <content type="html">&lt;h1 id=&#34;ajax&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ajax&#34;&gt;#&lt;/a&gt; AJAX&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;1. 概念： ASynchronous JavaScript And XML	异步的JavaScript 和 XML
	1. 异步和同步：客户端和服务器端相互通信的基础上
		* 客户端必须等待服务器端的响应。在等待的期间客户端不能做其他操作。
		* 客户端不需要等待服务器端的响应。在服务器处理请求的过程中，客户端可以进行其他的操作。
		Ajax 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。 [1] 
		通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。
		传统的网页（不使用 Ajax）如果需要更新内容，必须重载整个网页页面。
		提升用户的体验

2. 实现方式：
	1. 原生的JS实现方式（了解）
		//1.创建核心对象
	            var xmlhttp;
	            if (window.XMLHttpRequest)
	            &amp;#123;// code for IE7+, Firefox, Chrome, Opera, Safari
	                xmlhttp=new XMLHttpRequest();
	            &amp;#125;
	            else
	            &amp;#123;// code for IE6, IE5
	                xmlhttp=new ActiveXObject(&amp;quot;Microsoft.XMLHTTP&amp;quot;);
	            &amp;#125;
	
	    //2. 建立连接
	            /* 参数：
	                    1. 请求方式：GET、POST
	                        * get方式，请求参数在URL后边拼接。send方法为空参
	                        * post方式，请求参数在send方法中定义
	                    2. 请求的URL：
	                    3. 同步或异步请求：true（异步）或 false（同步）*/
	            xmlhttp.open(&amp;quot;GET&amp;quot;,&amp;quot;ajaxServlet?username=tom&amp;quot;,true);
	
	    //3.发送请求
	            xmlhttp.send();
	
	    //4.接受并处理来自服务器的响应结果
	    //获取方式 ：xmlhttp.responseText
	    //什么时候获取？当服务器响应成功后再获取
	
	    //当xmlhttp对象的就绪状态改变时，触发事件onreadystatechange。
	            xmlhttp.onreadystatechange=function()
	            &amp;#123;
	                //判断readyState就绪状态是否为4，判断status响应状态码是否为200
	                if (xmlhttp.readyState==4 &amp;amp;&amp;amp; xmlhttp.status==200)
	                &amp;#123;
	                   //获取服务器的响应结果
	                    var responseText = xmlhttp.responseText;
	                    alert(responseText);
	                &amp;#125;
	            &amp;#125;
	2. JQeury实现方式
		1. $.ajax()
			* 语法：$.ajax(&amp;#123;键值对&amp;#125;);
			 //使用$.ajax()发送异步请求
	            $.ajax(&amp;#123;
	                url:&amp;quot;ajaxServlet1111&amp;quot; , // 请求路径
	                type:&amp;quot;POST&amp;quot; , //请求方式,默认get
	                //data: &amp;quot;username=jack&amp;amp;age=23&amp;quot;,//请求参数
	                data:&amp;#123;&amp;quot;username&amp;quot;:&amp;quot;jack&amp;quot;,&amp;quot;age&amp;quot;:23&amp;#125;,
	                success:function (data) &amp;#123;
	                    alert(data);
	                &amp;#125;,//响应成功后的回调函数
	                error:function () &amp;#123;
	                    alert(&amp;quot;出错啦...&amp;quot;)
	                &amp;#125;,//表示如果请求响应出现错误，会执行的回调函数
	                dataType:&amp;quot;text&amp;quot;//设置接受到的响应数据的格式
	            &amp;#125;);
		2. $.get()：发送get请求
			* 语法：$.get(url, [data], [callback], [type])
				* 参数：
					* url：请求路径
					* data：请求参数
					* callback：回调函数
					* type：响应结果的类型

		3. $.post()：发送post请求
			* 语法：$.post(url, [data], [callback], [type])
				* 参数：
					* url：请求路径
					* data：请求参数
					* callback：回调函数
					* type：响应结果的类型
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/10-Ajax-Json/image-20230824091008576.png&#34; alt=&#34;image-20230824091008576&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;json&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#json&#34;&gt;#&lt;/a&gt; JSON&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;1. 概念： JavaScript Object Notation		JavaScript对象表示法
	Person p = new Person();
	p.setName(&amp;quot;张三&amp;quot;);
	p.setAge(23);
	p.setGender(&amp;quot;男&amp;quot;);

	var p = &amp;#123;&amp;quot;name&amp;quot;:&amp;quot;张三&amp;quot;,&amp;quot;age&amp;quot;:23,&amp;quot;gender&amp;quot;:&amp;quot;男&amp;quot;&amp;#125;;

	* json现在多用于存储和交换文本信息的语法
	* 进行数据的传输
	* JSON 比 XML 更小、更快，更易解析。

2. 语法：
	1. 基本规则
		* 数据在名称/值对中：json数据是由键值对构成的
			* 键用引号(单双都行)引起来，也可以不使用引号
			* 值得取值类型：
				1. 数字（整数或浮点数）
				2. 字符串（在双引号中）
				3. 逻辑值（true 或 false）
				4. 数组（在方括号中）	&amp;#123;&amp;quot;persons&amp;quot;:[&amp;#123;&amp;#125;,&amp;#123;&amp;#125;]&amp;#125;
				5. 对象（在花括号中） &amp;#123;&amp;quot;address&amp;quot;:&amp;#123;&amp;quot;province&amp;quot;：&amp;quot;陕西&amp;quot;....&amp;#125;&amp;#125;
				6. null
		* 数据由逗号分隔：多个键值对由逗号分隔
		* 花括号保存对象：使用&amp;#123;&amp;#125;定义json 格式
		* 方括号保存数组：[]
	2. 获取数据:
		1. json对象.键名
		2. json对象[&amp;quot;键名&amp;quot;]
		3. 数组对象[索引]
		4. 遍历
			//1.定义基本格式
		        var person = &amp;#123;&amp;quot;name&amp;quot;: &amp;quot;张三&amp;quot;, age: 23, &#39;gender&#39;: true&amp;#125;;
		
		        var ps = [&amp;#123;&amp;quot;name&amp;quot;: &amp;quot;张三&amp;quot;, &amp;quot;age&amp;quot;: 23, &amp;quot;gender&amp;quot;: true&amp;#125;,
		            &amp;#123;&amp;quot;name&amp;quot;: &amp;quot;李四&amp;quot;, &amp;quot;age&amp;quot;: 24, &amp;quot;gender&amp;quot;: true&amp;#125;,
		            &amp;#123;&amp;quot;name&amp;quot;: &amp;quot;王五&amp;quot;, &amp;quot;age&amp;quot;: 25, &amp;quot;gender&amp;quot;: false&amp;#125;];
		          //获取person对象中所有的键和值
			  //for in 循环
			       /* for(var key in person)&amp;#123;
			            //这样的方式获取不行。因为相当于  person.&amp;quot;name&amp;quot;
			            //alert(key + &amp;quot;:&amp;quot; + person.key);
			            alert(key+&amp;quot;:&amp;quot;+person[key]);
			        &amp;#125;*/
			//获取ps中的所有值
		        for (var i = 0; i &amp;lt; ps.length; i++) &amp;#123;
		            var p = ps[i];
		            for(var key in p)&amp;#123;
		                alert(key+&amp;quot;:&amp;quot;+p[key]);
		            &amp;#125;
		        &amp;#125;


3. JSON数据和Java对象的相互转换

	* JSON解析器：
		* 常见的解析器：Jsonlib，Gson，fastjson，jackson
	
	1. JSON转为Java对象
		1. 导入jackson的相关jar包
		2. 创建Jackson核心对象 ObjectMapper
		3. 调用ObjectMapper的相关方法进行转换
			1. readValue(json字符串数据,Class)
	2. Java对象转换JSON
		1. 使用步骤：
			1. 导入jackson的相关jar包
			2. 创建Jackson核心对象 ObjectMapper
			3. 调用ObjectMapper的相关方法进行转换
				1. 转换方法：
					* writeValue(参数1，obj):
	                    参数1：
	              File：将obj对象转换为JSON字符串，并保存到指定的文件中
	              Writer：将obj对象转换为JSON字符串，并将json数据填充到字符输出流中
	              OutputStream：将obj对象转换为JSON字符串，并将json数据填充到字节输出流中
	                * writeValueAsString(obj):将对象转为json字符串
				2. 注解：
					1. @JsonIgnore：排除属性。
					2. @JsonFormat：属性值得格式化
						* @JsonFormat(pattern = &amp;quot;yyyy-MM-dd&amp;quot;)
				3. 复杂java对象转换
					1. List：数组
					2. Map：对象格式一致
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例&#34;&gt;#&lt;/a&gt; 案例：&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;* 校验用户名是否存在
	1. 服务器响应的数据，在客户端使用时，要想当做json数据格式使用。有两种解决方案：
		1. $.get(type):将最后一个参数type指定为&amp;quot;json&amp;quot;
		2. 在服务器端设置MIME类型
			response.setContentType(&amp;quot;application/json;charset=utf-8&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;
</content>
        <category term="JavaWeb" scheme="https://jihaipeng123.github.io/categories/JavaWeb/" />
        <updated>2023-08-28T04:25:53.000Z</updated>
    </entry>
    <entry>
        <id>https://jihaipeng123.github.io/9-JQuery/</id>
        <title>9.JQuery</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/9-JQuery/"/>
        <content type="html">&lt;h1 id=&#34;jquery-基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jquery-基础&#34;&gt;#&lt;/a&gt; JQuery 基础&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;概念： 一个 JavaScript 框架。简化 JS 开发&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;jQuery 是一个快速、简洁的 JavaScript 框架，是继 Prototype 之后又一个优秀的 JavaScript 代码库（或 JavaScript 框架）。jQuery 设计的宗旨	是 “write Less，Do More”，即倡导写更少的代码，做更多的事情。它封装 JavaScript 常用的功能代码，提供一种简便的 JavaScript 设计模式，优	化 HTML 文档操作、事件处理、动画设计和 Ajax 交互。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JavaScript 框架：本质上就是一些 js 文件，封装了 js 的原生代码而已&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;快速入门&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;步骤：&lt;br /&gt;
1. 下载 JQuery&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;目前 jQuery 有三个大版本：&lt;br /&gt;
1.x：兼容 ie678, 使用最为广泛的，官方只做 BUG 维护，&lt;br /&gt;
功能不再新增。因此一般项目来说，使用 1.x 版本就可以了，&lt;br /&gt;
最终版本：1.12.4 (2016 年 5 月 20 日)&lt;br /&gt;
 2.x：不兼容 ie678，很少有人使用，官方只做 BUG 维护，&lt;br /&gt;
功能不再新增。如果不考虑兼容低版本的浏览器可以使用 2.x，&lt;br /&gt;
最终版本：2.2.4 (2016 年 5 月 20 日)&lt;br /&gt;
 3.x：不兼容 ie678，只支持最新的浏览器。除非特殊要求，&lt;br /&gt;
一般不会使用 3.x 版本的，很多老的 jQuery 插件不支持这个版本。&lt;br /&gt;
目前该版本是官方主要更新维护的版本。最新版本：3.2.1（2017 年 3 月 20 日）&lt;/li&gt;
&lt;li&gt;jquery-xxx.js 与 jquery-xxx.min.js 区别：
&lt;ol&gt;
&lt;li&gt;jquery-xxx.js：开发版本。给程序员看的，有良好的缩进和注释。体积大一些&lt;/li&gt;
&lt;li&gt;jquery-xxx.min.js：生产版本。程序中使用，没有缩进。体积小一些。程序加载更快&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;导入 JQuery 的 js 文件：导入 min.js 文件&lt;/p&gt;
&lt;p&gt;使用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  var div1 = $(&amp;quot;#div1&amp;quot;);
  alert(div1.html());
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;JQuery 对象和 JS 对象区别与转换&lt;/p&gt;
&lt;p&gt;JQuery 对象在操作时，更加方便。&lt;/p&gt;
&lt;p&gt;JQuery 对象和 js 对象方法不通用的.&lt;/p&gt;
&lt;p&gt;两者相互转换&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;jq -- &amp;gt; js : jq 对象 [索引] 或者 jq 对象.get (索引)&lt;/li&gt;
&lt;li&gt;js -- &amp;gt; jq : $(js 对象)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;选择器：筛选具有相似特征的元素 (标签)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;事件绑定&lt;br /&gt;
&lt;a href=&#34;//1.xn--b1-wi6co09cbr2bwjv&#34;&gt; //1. 获取 b1 按钮&lt;/a&gt;&lt;br /&gt;
 $(&amp;quot;#b1&amp;quot;).click (function (){&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;alert(&amp;quot;abc&amp;quot;);
 &amp;#125;);
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;入口函数&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;function &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;window.onload  和 $(function) 区别&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; * window.onload 只能定义一次,如果定义多次，后边的会将前边的覆盖掉
    $(function)可以定义多次的。
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;样式控制：css 方法&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// $(&#34;#div1&#34;).css(&#34;background-color&#34;,&#34;red&#34;);&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  	$&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;#div1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;css&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;backgroundColor&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;pink&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​&lt;/p&gt;
&lt;h1 id=&#34;选择器分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#选择器分类&#34;&gt;#&lt;/a&gt; 选择器分类&lt;/h1&gt;
&lt;h2 id=&#34;基本选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本选择器&#34;&gt;#&lt;/a&gt; 基本选择器&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;标签选择器（元素选择器）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： $(&amp;quot;html 标签名&amp;quot;) 获得所有匹配标签名称的元素语法： $(&amp;quot;html 标签名&amp;quot;) 获得所有匹配标签名称的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;id 选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： $(&amp;quot;#id 的属性值&amp;quot;) 获得与指定 id 属性值匹配的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;类选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： $(&amp;quot;.class 的属性值&amp;quot;) 获得与指定的 class 属性值匹配的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;并集选择器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： $(&amp;quot;选择器 1, 选择器 2....&amp;quot;) 获取多个选择器选中的所有元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;层级选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#层级选择器&#34;&gt;#&lt;/a&gt; 层级选择器&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;后代选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： $(&amp;quot;A B&amp;quot;) 选择 A 元素内部的所有 B 元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;子选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： $(&amp;quot;A&amp;gt; B&amp;quot;) 选择 A 元素内部的所有 B 子元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;属性选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#属性选择器&#34;&gt;#&lt;/a&gt; 属性选择器&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;属性名称选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： $(&amp;quot;A [属性名]&amp;quot;) 包含指定属性的选择器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;属性选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： $(&amp;quot;A [属性名 =&#39; 值 &#39;]&amp;quot;) 包含指定属性等于指定值的选择器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;复合属性选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： $(&amp;quot;A [属性名 =&#39; 值 &#39;][]...&amp;quot;) 包含多个属性条件的选择器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;过滤选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#过滤选择器&#34;&gt;#&lt;/a&gt; 过滤选择器&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;首元素选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :first 获得选择的元素中的第一个元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;尾元素选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :last 获得选择的元素中的最后一个元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;非元素选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :not (selector) 不包括指定内容的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;偶数选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :even 偶数，从 0 开始计数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;奇数选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :odd 奇数，从 0 开始计数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;等于索引选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :eq (index) 指定索引元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;大于索引选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :gt (index) 大于指定索引元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;小于索引选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :lt (index) 小于指定索引元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;标题选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :header 获得标题（h1~h6）元素，固定写法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;表单过滤选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表单过滤选择器&#34;&gt;#&lt;/a&gt; 表单过滤选择器&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;可用元素选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :enabled 获得可用元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不可用元素选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :disabled 获得不可用元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选中选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :checked 获得单选 / 复选框选中的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选中选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： :selected 获得下拉框选中的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;dom操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dom操作&#34;&gt;#&lt;/a&gt; DOM 操作&lt;/h1&gt;
&lt;h2 id=&#34;内容操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内容操作&#34;&gt;#&lt;/a&gt; 内容操作&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;html (): 获取 / 设置元素的标签体内容   &amp;lt;a&amp;gt;&amp;lt;font &amp;gt; 内容 &amp;lt;/font&amp;gt;&amp;lt;/a&amp;gt;  --&amp;gt; &amp;lt;font &amp;gt; 内容 &amp;lt;/font&amp;gt;&lt;/li&gt;
&lt;li&gt;text (): 获取 / 设置元素的标签体纯文本内容   &amp;lt;a&amp;gt;&amp;lt;font &amp;gt; 内容 &amp;lt;/font&amp;gt;&amp;lt;/a&amp;gt; --&amp;gt; 内容&lt;/li&gt;
&lt;li&gt;val ()： 获取 / 设置元素的 value 属性值&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;属性操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#属性操作&#34;&gt;#&lt;/a&gt; 属性操作&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;通用属性操作
&lt;ol&gt;
&lt;li&gt;attr (): 获取 / 设置元素的属性&lt;/li&gt;
&lt;li&gt;removeAttr (): 删除属性&lt;/li&gt;
&lt;li&gt;prop (): 获取 / 设置元素的属性&lt;/li&gt;
&lt;li&gt;removeProp (): 删除属性&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;attr 和 prop 区别？&lt;br /&gt;
1. 如果操作的是元素的固有属性，则建议使用 prop&lt;br /&gt;
2. 如果操作的是元素自定义的属性，则建议使用 attr&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;对 class 属性操作
&lt;ol&gt;
&lt;li&gt;addClass (): 添加 class 属性值&lt;/li&gt;
&lt;li&gt;removeClass (): 删除 class 属性值&lt;/li&gt;
&lt;li&gt;toggleClass (): 切换 class 属性&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;toggleClass(&amp;quot;one&amp;quot;):
&lt;ul&gt;
&lt;li&gt;判断如果元素对象上存在 class=&amp;quot;one&amp;quot;，则将属性值 one 删除掉。  如果元素对象上不存在 class=&amp;quot;one&amp;quot;，则添加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;crud操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#crud操作&#34;&gt;#&lt;/a&gt; CRUD 操作&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;append (): 父元素将子元素追加到末尾&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象 1.append (对象 2): 将对象 2 添加到对象 1 元素内部，并且在末尾&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;prepend (): 父元素将子元素追加到开头&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象 1.prepend (对象 2): 将对象 2 添加到对象 1 元素内部，并且在开头&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;appendTo():&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象 1.appendTo (对象 2): 将对象 1 添加到对象 2 内部，并且在末尾&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;prependTo()：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象 1.prependTo (对象 2): 将对象 1 添加到对象 2 内部，并且在开头&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;after (): 添加元素到元素后边&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象 1.after (对象 2)： 将对象 2 添加到对象 1 后边。对象 1 和对象 2 是兄弟关系&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;before (): 添加元素到元素前边&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象 1.before (对象 2)： 将对象 2 添加到对象 1 前边。对象 1 和对象 2 是兄弟关系&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;insertAfter()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象 1.insertAfter (对象 2)：将对象 2 添加到对象 1 后边。对象 1 和对象 2 是兄弟关系&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;insertBefore()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象 1.insertBefore (对象 2)： 将对象 2 添加到对象 1 前边。对象 1 和对象 2 是兄弟关系&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;remove (): 移除元素&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象.remove (): 将对象删除掉&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;empty (): 清空元素的所有后代元素。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象.empty (): 将对象的后代元素全部清空，但是保留当前对象以及其属性节点&lt;br /&gt;
注意： $(&amp;quot;#b&amp;quot;).clone (); 克隆所有 b 元素；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;jquery-高级&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jquery-高级&#34;&gt;#&lt;/a&gt; JQuery 高级&lt;/h1&gt;
&lt;h1 id=&#34;动画&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动画&#34;&gt;#&lt;/a&gt; 动画&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;三种方式显示和隐藏元素
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;默认显示和隐藏方式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;show([speed,[easing],[fn]])&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;speed：动画的速度。三个预定义的值 (&amp;quot;slow&amp;quot;,&amp;quot;normal&amp;quot;, &amp;quot;fast&amp;quot;) 或表示动画时长的毫秒数值 (如：1000)&lt;/li&gt;
&lt;li&gt;easing：用来指定切换效果，默认是 &amp;quot;swing&amp;quot;，可用参数 &amp;quot;linear&amp;quot;
&lt;ul&gt;
&lt;li&gt;swing：动画执行时效果是 先慢，中间快，最后又慢&lt;/li&gt;
&lt;li&gt;linear：动画执行时速度是匀速的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;fn：在动画完成时执行的函数，每个元素执行一次。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hide([speed,[easing],[fn]])&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;toggle([speed],[easing],[fn])&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;滑动显示和隐藏方式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;slideDown([speed],[easing],[fn])&lt;/li&gt;
&lt;li&gt;slideUp([speed,[easing],[fn]])&lt;/li&gt;
&lt;li&gt;slideToggle([speed],[easing],[fn])&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;淡入淡出显示和隐藏方式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;fadeIn([speed],[easing],[fn])&lt;/li&gt;
&lt;li&gt;fadeOut([speed],[easing],[fn])&lt;/li&gt;
&lt;li&gt;fadeToggle([speed,[easing],[fn]])&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;遍历&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#遍历&#34;&gt;#&lt;/a&gt; 遍历&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;js 的遍历方式
&lt;ul&gt;
&lt;li&gt;for (初始化值；循环结束条件；步长)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;jq 的遍历方式
&lt;ol&gt;
&lt;li&gt;jq 对象.each (callback)
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;语法：&lt;br /&gt;
jquery 对象.each (function (index,element){});&lt;br /&gt;
* index: 就是元素在集合中的索引&lt;br /&gt;
 * element：就是集合中的每一个元素对象&lt;/p&gt;
&lt;p&gt;​    * this：集合中的每一个元素对象&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;回调函数返回值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;true: 如果当前 function 返回为 false，则结束循环 (break)。&lt;/li&gt;
&lt;li&gt;false: 如果当前 function 返回为 true，则结束本次循环，继续下次循环 (continue)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;$.each(object, [callback])&lt;/li&gt;
&lt;li&gt;for..of: jquery 3.0 版本之后提供的方式&lt;br /&gt;
 for (元素对象 of 容器对象)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;事件绑定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事件绑定&#34;&gt;#&lt;/a&gt; 事件绑定&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;jquery 标准的绑定方式
&lt;ul&gt;
&lt;li&gt;jq 对象。事件方法 (回调函数)；&lt;/li&gt;
&lt;li&gt;注：如果调用事件方法，不传递回调函数，则会触发浏览器默认行为。&lt;/li&gt;
&lt;li&gt;表单对象.submit ();// 让表单提交&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;on 绑定事件 /off 解除绑定
&lt;ul&gt;
&lt;li&gt;jq 对象.on (&amp;quot;事件名称&amp;quot;, 回调函数)&lt;/li&gt;
&lt;li&gt;jq 对象.off (&amp;quot;事件名称&amp;quot;)&lt;/li&gt;
&lt;li&gt;如果 off 方法不传递任何参数，则将组件上的所有事件全部解绑&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;事件切换：toggle
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;jq 对象.toggle (fn1,fn2...)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当单击 jq 对象对应的组件后，会执行 fn1. 第二次点击会执行 fn2.....&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意：1.9 版本 .toggle () 方法删除，jQuery Migrate（迁移）插件可以恢复此功能。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;../js/jquery-migrate-1.0.0.js&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;text/javascript&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;utf-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例&#34;&gt;#&lt;/a&gt; 案例&lt;/h1&gt;
&lt;p&gt;见代码&lt;/p&gt;
</content>
        <category term="JavaWeb" scheme="https://jihaipeng123.github.io/categories/JavaWeb/" />
        <updated>2023-08-28T03:31:17.000Z</updated>
    </entry>
    <entry>
        <id>https://jihaipeng123.github.io/8JSP-EL-JSTL/</id>
        <title>8.JSP&amp;EL&amp;JSTL</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/8JSP-EL-JSTL/"/>
        <content type="html">&lt;h1 id=&#34;jsp入门学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jsp入门学习&#34;&gt;#&lt;/a&gt; JSP：入门学习&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java Server Pages： java 服务器端页面
&lt;ul&gt;
&lt;li&gt;可以理解为：一个特殊的页面，其中既可以指定定义 html 标签，又可以定义 java 代码&lt;/li&gt;
&lt;li&gt;用于简化书写！！！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;原理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JSP 本质上就是一个 Servlet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JSP 的脚本：JSP 定义 Java 代码的方式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;lt;%  代码 %&amp;gt;：定义的 java 代码，在 service 方法中。service 方法中可以定义什么，该脚本中就可以定义什么。&lt;/li&gt;
&lt;li&gt;&amp;lt;%! 代码 %&amp;gt;：定义的 java 代码，在 jsp 转换后的 java 类的成员位置。&lt;/li&gt;
&lt;li&gt;&amp;lt;%= 代码 %&amp;gt;：定义的 java 代码，会输出到页面上。输出语句中可以定义什么，该脚本中就可以定义什么。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JSP 的内置对象：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 jsp 页面中不需要获取和创建，可以直接使用的对象&lt;/li&gt;
&lt;li&gt;jsp 一共有 9 个内置对象。&lt;/li&gt;
&lt;li&gt;今天学习 3 个：
&lt;ul&gt;
&lt;li&gt;request&lt;/li&gt;
&lt;li&gt;response&lt;/li&gt;
&lt;li&gt;out：字符输出流对象。可以将数据输出到页面上。和 response.getWriter () 类似
&lt;ul&gt;
&lt;li&gt;response.getWriter () 和 out.write () 的区别：
&lt;ul&gt;
&lt;li&gt;在 tomcat 服务器真正给客户端做出响应之前，会先找 response 缓冲区数据，再找 out 缓冲区数据。&lt;/li&gt;
&lt;li&gt;response.getWriter () 数据输出永远在 out.write () 之前&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指令&#34;&gt;#&lt;/a&gt; 指令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;作用：用于配置 JSP 页面，导入资源文件&lt;/li&gt;
&lt;li&gt;格式：&lt;br /&gt;
&amp;lt;%@ 指令名称 属性名 1 = 属性值 1 属性名 2 = 属性值 2 ... %&amp;gt;&lt;/li&gt;
&lt;li&gt;分类：
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;page		： 配置 JSP 页面的&lt;br /&gt;
 * contentType：等同于 response.setContentType ()&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设置响应体的 mime 类型以及字符集&lt;/li&gt;
&lt;li&gt;设置当前 jsp 页面的编码（只能是高级的 IDE 才能生效，如果使用低级工具，则需要设置 pageEncoding 属性设置当前页面的字符集）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;* import：导包
* errorPage：当前页面发生异常后，会自动跳转到指定的错误页面
* isErrorPage：标识当前也是是否是错误页面。
	* true：是，可以使用内置对象exception
	* false：否。默认值。不可以使用内置对象exception
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;include	： 页面包含的。导入页面的资源文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;%@include file=&amp;quot;top.jsp&amp;quot;%&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;taglib	： 导入资源&lt;br /&gt;
 * &amp;lt;%@ taglib prefix=&amp;quot;c&amp;quot; uri=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2phdmEuc3VuLmNvbS9qc3AvanN0bC9jb3Jl&#34;&gt;http://java.sun.com/jsp/jstl/core&lt;/span&gt;&amp;quot; %&amp;gt;&lt;br /&gt;
* prefix：前缀，自定义的&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;注释&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注释&#34;&gt;#&lt;/a&gt; 注释&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;html 注释：&lt;br /&gt;
&amp;lt;!-- --&amp;gt;: 只能注释 html 代码片段&lt;/li&gt;
&lt;li&gt;jsp 注释：推荐使用&lt;br /&gt;
 &amp;lt;%-- --%&amp;gt;：可以注释所有&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;内置对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内置对象&#34;&gt;#&lt;/a&gt; 内置对象&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;在 jsp 页面中不需要创建，直接使用的对象&lt;/li&gt;
&lt;li&gt;一共有 9 个：&lt;br /&gt;
变量名					真实类型						作用
&lt;ul&gt;
&lt;li&gt;pageContext				PageContext					当前页面共享数据，还可以获取其他八个内置对象&lt;/li&gt;
&lt;li&gt;request					HttpServletRequest			一次请求访问的多个资源 (转发)&lt;/li&gt;
&lt;li&gt;session					HttpSession					一次会话的多个请求间&lt;/li&gt;
&lt;li&gt;application				ServletContext				所有用户间共享数据&lt;/li&gt;
&lt;li&gt;response					HttpServletResponse			响应对象&lt;/li&gt;
&lt;li&gt;page						Object						当前页面 (Servlet) 的对象  this&lt;/li&gt;
&lt;li&gt;out						JspWriter					输出对象，数据输出到页面上&lt;/li&gt;
&lt;li&gt;config					ServletConfig				Servlet 的配置对象&lt;/li&gt;
&lt;li&gt;exception					Throwable					异常对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;mvc开发模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mvc开发模式&#34;&gt;#&lt;/a&gt; MVC：开发模式&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;jsp 演变历史&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;早期只有 servlet，只能使用 response 输出标签数据，非常麻烦&lt;/li&gt;
&lt;li&gt;后来又 jsp，简化了 Servlet 的开发，如果过度使用 jsp，在 jsp 中即写大量的 java 代码，有写 html 表，造成难于维护，难于分工协作&lt;/li&gt;
&lt;li&gt;再后来，java 的 web 开发，借鉴 mvc 开发模式，使得程序的设计更加合理性&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MVC：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;M：Model，模型。JavaBean
&lt;ul&gt;
&lt;li&gt;完成具体的业务操作，如：查询数据库，封装对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;V：View，视图。JSP
&lt;ul&gt;
&lt;li&gt;展示数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C：Controller，控制器。Servlet
&lt;ul&gt;
&lt;li&gt;获取用户的输入&lt;/li&gt;
&lt;li&gt;调用模型&lt;/li&gt;
&lt;li&gt;将数据交给视图进行展示&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;优缺点：
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;耦合性低，方便维护，可以利于分工协作&lt;/li&gt;
&lt;li&gt;重用性高&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使得项目架构变得复杂，对开发人员要求高&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/8JSP-EL-JSTL/image-20230828102729900.png&#34; alt=&#34;image-20230828102729900&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;el表达式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#el表达式&#34;&gt;#&lt;/a&gt; EL 表达式&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;概念：Expression Language 表达式语言&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;作用：替换和简化 jsp 页面中 java 代码的编写&lt;/p&gt;
&lt;/li&gt;
&lt;li 表达式=&#34;&#34;&gt;
&lt;p&gt;语法：$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;jsp 默认支持 el 表达式的。如果要忽略 el 表达式
&lt;ol&gt;
&lt;li&gt;设置 jsp 中 page 指令中：isELIgnored=&amp;quot;true&amp;quot; 忽略当前 jsp 页面中所有的 el 表达式&lt;/li&gt;
&lt;li&gt;${表达式} ：忽略当前这个 el 表达式&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;运算：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运算符：
&lt;ol&gt;
&lt;li&gt;算数运算符： + - * /(div) %(mod)&lt;/li&gt;
&lt;li&gt;比较运算符： &amp;gt; &amp;lt; &amp;gt;= &amp;lt;= == !=&lt;/li&gt;
&lt;li&gt;逻辑运算符： &amp;amp;&amp;amp;(and) ||(or) !(not)&lt;/li&gt;
&lt;li&gt;空运算符： empty
&lt;ul&gt;
&lt;li&gt;功能：用于判断字符串、集合、数组对象是否为 null 或者长度是否为 0&lt;/li&gt;
&lt;li&gt;${empty list}: 判断字符串、集合、数组对象是否为 null 或者长度为 0&lt;/li&gt;
&lt;li&gt;${not empty str}: 表示判断字符串、集合、数组对象是否不为 null 并且 长度 &amp;gt; 0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取值&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;el 表达式只能从域对象中获取值&lt;/li&gt;
&lt;li&gt;语法：&lt;/li&gt;
&lt;li&gt;${域名称。键名}：从指定域中获取指定键的值&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt; * 域名称：
 	1. pageScope		--&amp;gt; pageContext
 	2. requestScope 	--&amp;gt; request
 	3. sessionScope 	--&amp;gt; session
 	4. applicationScope --&amp;gt; application（ServletContext）
 * 举例：在request域中存储了name=张三
 * 获取：$&amp;#123;requestScope.name&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;${键名}：表示依次从最小的域中查找是否有该键对应的值，直到找到为止。&lt;/p&gt;
&lt;/li&gt;
&lt;li 域名称.键名.属性名=&#34;&#34;&gt;
&lt;p&gt;获取对象、List 集合、Map 集合的值&lt;br /&gt;
 1. 对象：$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本质上会去调用对象的 getter 方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt; 2. List集合：$&amp;#123;域名称.键名[索引]&amp;#125;
 3. Map集合：
 	* $&amp;#123;域名称.键名.key名称&amp;#125;
 	* $&amp;#123;域名称.键名[&amp;quot;key名称&amp;quot;]&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;隐式对象：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;el 表达式中有 11 个隐式对象&lt;/li&gt;
&lt;li&gt;pageContext：
&lt;ul&gt;
&lt;li&gt;获取 jsp 其他八个内置对象
&lt;ul&gt;
&lt;li&gt;${pageContext.request.contextPath}：动态获取虚拟目录.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;jstl&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jstl&#34;&gt;#&lt;/a&gt; JSTL&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;概念：JavaServer Pages Tag Library  JSP 标准标签库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是由 Apache 组织提供的开源的免费的 jsp 标签		&amp;lt;标签&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;作用：用于简化和替换 jsp 页面上的 java 代码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;导入 jstl 相关 jar 包&lt;/li&gt;
&lt;li&gt;引入标签库：taglib 指令：  &amp;lt;%@ taglib %&amp;gt;&lt;/li&gt;
&lt;li&gt;使用标签&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常用的 JSTL 标签&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;if: 相当于 java 代码的 if 语句&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;属性：
&lt;ul&gt;
&lt;li&gt;test 必须属性，接受 boolean 表达式
&lt;ul&gt;
&lt;li&gt;如果表达式为 true，则显示 if 标签体内容，如果为 false，则不显示标签体内容&lt;/li&gt;
&lt;li&gt;一般情况下，test 属性值会结合 el 表达式一起使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;注意：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; c&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;标签没有&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;情况，想要&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;情况，则可以在定义一个c&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;标签&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;2. choose:相当于java代码的switch语句
1. 使用choose标签声明         			相当于switch声明
   2. 使用when标签做判断         			相当于case
  3. 使用otherwise标签做其他情况的声明    	相当于default

3. foreach:相当于java代码的for语句
  1. 完成重复的操作
      for(int i = 0; i &amp;lt; 10; i ++)&amp;#123;

      &amp;#125;
      * 属性：
          begin：开始值（包含）
          end：结束值（包含）
          var：临时变量
          step：步长
          varStatus:循环状态对象
              index:容器中元素的索引，从0开始
              count:循环次数，从1开始
  2. 遍历容器
      List&amp;lt;User&amp;gt; list;
      for(User user : list)&amp;#123;

      &amp;#125;

      * 属性：
          items:容器对象
          var:容器中元素的临时变量
          varStatus:循环状态对象
              index:容器中元素的索引，从0开始
              count:循环次数，从1开始
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;练习：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需求：在 request 域中有一个存有 User 对象的 List 集合。需要使用 jstl+el 将 list 集合数据展示到 jsp 页面的表格 table 中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;三层架构软件设计架构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三层架构软件设计架构&#34;&gt;#&lt;/a&gt; 三层架构：软件设计架构&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;界面层 (表示层)：用户看的得界面。用户可以通过界面上的组件和服务器进行交互&lt;/li&gt;
&lt;li&gt;业务逻辑层：处理业务逻辑的。&lt;/li&gt;
&lt;li&gt;数据访问层：操作数据存储文件。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/8JSP-EL-JSTL/image-20230828103017151.png&#34; alt=&#34;image-20230828103017151&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;案例用户信息列表展示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例用户信息列表展示&#34;&gt;#&lt;/a&gt; 案例：用户信息列表展示&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;需求：用户信息的增删改查操作&lt;/li&gt;
&lt;li&gt;设计：&lt;/li&gt;
&lt;li&gt;技术选型：Servlet+JSP+MySQL+JDBCTempleat+Duird+BeanUtilS+tomcat&lt;/li&gt;
&lt;li&gt;数据库设计：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;create database day17; -- 创建数据库
use day17; 			   -- 使用数据库
create table user(   -- 创建表
	id int primary key auto_increment,
	name varchar(20) not null,
	gender varchar(5),
	age int,
	address varchar(32),
	qq	varchar(20),
	email varchar(50)
);
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;开发：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;环境搭建&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建数据库环境&lt;br /&gt;
 2. 创建项目，导入需要的 jar 包&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测试&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;部署运维&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="JavaWeb" scheme="https://jihaipeng123.github.io/categories/JavaWeb/" />
        <updated>2023-08-28T02:08:20.000Z</updated>
    </entry>
    <entry>
        <id>https://jihaipeng123.github.io/7Cookie&amp;Session/</id>
        <title>7.Cookie&amp;Session</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/7Cookie&amp;Session/"/>
        <content type="html">&lt;p&gt;会话技术&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Cookie&lt;/li&gt;
&lt;li&gt;Session&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;会话技术&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#会话技术&#34;&gt;#&lt;/a&gt; 会话技术&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;会话：一次会话中包含多次请求和响应。
&lt;ul&gt;
&lt;li&gt;一次会话：浏览器第一次给服务器资源发送请求，会话建立，直到有一方断开为止&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;功能：在一次会话的范围内的多次请求间，共享数据&lt;/li&gt;
&lt;li&gt;方式：
&lt;ol&gt;
&lt;li&gt;客户端会话技术：Cookie&lt;/li&gt;
&lt;li&gt;服务器端会话技术：Session&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;cookie&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cookie&#34;&gt;#&lt;/a&gt; Cookie：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;概念：客户端会话技术，将数据保存到客户端&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;快速入门：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用步骤：
&lt;ol&gt;
&lt;li&gt;创建 Cookie 对象，绑定数据
&lt;ul&gt;
&lt;li&gt;new Cookie(String name, String value)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;发送 Cookie 对象
&lt;ul&gt;
&lt;li&gt;response.addCookie(Cookie cookie)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;获取 Cookie，拿到数据
&lt;ul&gt;
&lt;li&gt;Cookie[]  request.getCookies()&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实现原理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于响应头 set-cookie 和请求头 cookie 实现&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cookie 的细节&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一次可不可以发送多个 cookie?
&lt;ul&gt;
&lt;li&gt;可以&lt;/li&gt;
&lt;li&gt;可以创建多个 Cookie 对象，使用 response 调用多次 addCookie 方法发送 cookie 即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;cookie 在浏览器中保存多长时间？
&lt;ol&gt;
&lt;li&gt;默认情况下，当浏览器关闭后，Cookie 数据被销毁&lt;/li&gt;
&lt;li&gt;持久化存储：
&lt;ul&gt;
&lt;li&gt;setMaxAge(int seconds)
&lt;ol&gt;
&lt;li&gt;正数：将 Cookie 数据写到硬盘的文件中。持久化存储。并指定 cookie 存活时间，时间到后，cookie 文件自动失效&lt;/li&gt;
&lt;li&gt;负数：默认值&lt;/li&gt;
&lt;li&gt;零：删除 cookie 信息&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;cookie 能不能存中文？
&lt;ul&gt;
&lt;li&gt;在 tomcat 8 之前 cookie 中不能直接存储中文数据。
&lt;ul&gt;
&lt;li&gt;需要将中文数据转码 --- 一般采用 URL 编码 (% E3)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在 tomcat 8 之后，cookie 支持中文数据。特殊字符还是不支持，建议使用 URL 编码存储，URL 解码解析&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;cookie 共享问题？
&lt;ol&gt;
&lt;li&gt;假设在一个 tomcat 服务器中，部署了多个 web 项目，那么在这些 web 项目中 cookie 能不能共享？&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;默认情况下 cookie 不能共享&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;setPath (String path): 设置 cookie 的获取范围。默认情况下，设置当前的虚拟目录&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果要共享，则可以将 path 设置为 &amp;quot;/&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;不同的 tomcat 服务器间 cookie 共享问题？
&lt;ul&gt;
&lt;li&gt;setDomain (String path): 如果设置一级域名相同，那么多个服务器之间 cookie 可以共享&lt;/li&gt;
&lt;li&gt;setDomain (&amp;quot;.baidu.com&amp;quot;), 那么 tieba.baidu.com 和 news.baidu.com 中 cookie 可以共享&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​			&lt;br /&gt;
​&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;
&lt;p&gt;Cookie 的特点和作用&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;cookie 存储数据在客户端浏览器&lt;/li&gt;
&lt;li&gt;浏览器对于单个 cookie 的大小有限制 (4kb) 以及 对同一个域名下的总 cookie 数量也有限制 (20 个)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;作用：
&lt;ol&gt;
&lt;li&gt;cookie 一般用于存出少量的不太敏感的数据&lt;/li&gt;
&lt;li&gt;在不登录的情况下，完成服务器对客户端的身份识别&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;案例：记住上一次访问时间&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;需求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;访问一个 Servlet，如果是第一次访问，则提示：您好，欢迎您首次访问。&lt;/li&gt;
&lt;li&gt;如果不是第一次访问，则提示：欢迎回来，您上次访问时间为：显示时间字符串&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以采用 Cookie 来完成&lt;/li&gt;
&lt;li&gt;在服务器中的 Servlet 判断是否有一个名为 lastTime 的 cookie
&lt;ol&gt;
&lt;li&gt;有：不是第一次访问
&lt;ol&gt;
&lt;li&gt;响应数据：欢迎回来，您上次访问时间为：2018 年 6 月 10 日 11:50:20&lt;/li&gt;
&lt;li&gt;写回 Cookie：lastTime=2018 年 6 月 10 日 11:50:01&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;没有：是第一次访问
&lt;ol&gt;
&lt;li&gt;响应数据：您好，欢迎您首次访问&lt;/li&gt;
&lt;li&gt;写回 Cookie：lastTime=2018 年 6 月 10 日 11:50:01&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代码实现：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;cn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;itcast&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;javax&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;servlet&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ServletException&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;javax&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;servlet&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;WebServlet&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;javax&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;servlet&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;http&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Cookie&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;javax&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;servlet&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;http&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;HttpServlet&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;javax&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;servlet&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;http&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;HttpServletRequest&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;javax&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;servlet&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;http&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;HttpServletResponse&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;io&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;IOException&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;URLDecoder&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;URLEncoder&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SimpleDateFormat&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;util&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token annotation punctuation&#34;&gt;@WebServlet&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/cookieTest&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CookieTest&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HttpServlet&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	    &lt;span class=&#34;token keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;doPost&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ServletException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;IOException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;// 设置响应的消息体的数据格式以及编码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setContentType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;text/html;charset=utf-8&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//1. 获取所有 Cookie&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token class-name&#34;&gt;Cookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; cookies &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getCookies&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; flag &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 没有 cookie 为 lastTime&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token comment&#34;&gt;//2. 遍历 cookie 数组&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cookies &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cookies&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Cookie&lt;/span&gt; cookie &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; cookies&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                &lt;span class=&#34;token comment&#34;&gt;//3. 获取 cookie 的名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; cookie&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                &lt;span class=&#34;token comment&#34;&gt;//4. 判断名称是否是：lastTime&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;lastTime&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token comment&#34;&gt;// 有该 Cookie，不是第一次访问&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    flag &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 有 lastTime 的 cookie&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token comment&#34;&gt;// 设置 Cookie 的 value&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token comment&#34;&gt;// 获取当前时间的字符串，重新设置 Cookie 的值，重新发送 cookie&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt; date  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token class-name&#34;&gt;SimpleDateFormat&lt;/span&gt; sdf &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;yyyy年MM月dd日 HH:mm:ss&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; str_date &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sdf&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;date&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;编码前：&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;str_date&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token comment&#34;&gt;//URL 编码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    str_date &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;URLEncoder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str_date&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;utf-8&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;编码后：&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;str_date&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    cookie&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str_date&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token comment&#34;&gt;// 设置 cookie 的存活时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    cookie&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setMaxAge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;24&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 一个月&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addCookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cookie&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                         &lt;span class=&#34;token comment&#34;&gt;// 响应数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		                &lt;span class=&#34;token comment&#34;&gt;// 获取 Cookie 的 value，时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		                 &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; cookie&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		                 &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;解码前：&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		                 &lt;span class=&#34;token comment&#34;&gt;//URL 解码：&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		                 value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;URLDecoder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;utf-8&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		                 &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;解码后：&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		                 response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getWriter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;h1&gt;欢迎回来，您上次访问时间为:&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;value&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;/h1&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                         &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	             &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;              &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cookies &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; cookies&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; flag &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		            &lt;span class=&#34;token comment&#34;&gt;// 没有，第一次访问&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// 设置 Cookie 的 value&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token comment&#34;&gt;// 获取当前时间的字符串，重新设置 Cookie 的值，重新发送 cookie&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt; date  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token class-name&#34;&gt;SimpleDateFormat&lt;/span&gt; sdf &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;yyyy年MM月dd日 HH:mm:ss&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; str_date &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sdf&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;date&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;编码前：&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;str_date&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token comment&#34;&gt;//URL 编码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            str_date &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;URLEncoder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str_date&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;utf-8&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;编码后：&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;str_date&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token class-name&#34;&gt;Cookie&lt;/span&gt; cookie &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Cookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;lastTime&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;str_date&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token comment&#34;&gt;// 设置 cookie 的存活时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            cookie&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setMaxAge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;24&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 一个月&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addCookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cookie&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getWriter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;h1&gt;您好，欢迎您首次访问&amp;lt;/h1&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	         &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;doGet&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ServletException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;IOException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;doPost&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	       &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;session主菜&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#session主菜&#34;&gt;#&lt;/a&gt; Session：主菜&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;概念：服务器端会话技术，在一次会话的多次请求间共享数据，将数据保存在服务器端的对象中。HttpSession&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;快速入门：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;获取 HttpSession 对象：&lt;br /&gt;
HttpSession session = request.getSession();&lt;/li&gt;
&lt;li&gt;使用 HttpSession 对象：&lt;br /&gt;
Object getAttribute(String name)&lt;br /&gt;
void setAttribute(String name, Object value)&lt;br /&gt;
void removeAttribute(String name)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;原理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Session 的实现是依赖于 Cookie 的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;细节&lt;/p&gt;
&lt;p&gt;1. 当客户端关闭后，服务器不关闭，两次获取 session 是否为同一个？&lt;/p&gt;
&lt;p&gt;默认情况下。不是。&lt;/p&gt;
&lt;p&gt;如果需要相同，则可以创建 Cookie, 键为 JSESSIONID，设置最大存活时间，让 cookie 持久化保存。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;Cookie&lt;/span&gt; c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Cookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;JSESSIONID&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;session&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  c&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setMaxAge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addCookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2. 客户端不关闭，服务器关闭后，两次获取的 session 是同一个吗？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不是同一个，但是要确保数据不丢失。tomcat 自动完成以下工作
&lt;ul&gt;
&lt;li&gt;session 的钝化：
&lt;ul&gt;
&lt;li&gt;在服务器正常关闭之前，将 session 对象系列化到硬盘上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;session 的活化：
&lt;ul&gt;
&lt;li&gt;在服务器启动后，将 session 文件转化为内存中的 session 对象即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3.session 什么时候被销毁？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;服务器关闭&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;session 对象调用 invalidate () 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;session 默认失效时间 30 分钟&lt;br /&gt;
选择性配置修改&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;session&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;config&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;session&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;timeout&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;session&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;timeout&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;session&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;config&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;session 的特点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;session 用于存储一次会话的多次请求的数据，存在服务器端&lt;/li&gt;
&lt;li&gt;session 可以存储任意类型，任意大小的数据&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;session 与 Cookie 的区别：
&lt;ol&gt;
&lt;li&gt;session 存储数据在服务器端，Cookie 在客户端&lt;/li&gt;
&lt;li&gt;session 没有数据大小限制，Cookie 有&lt;/li&gt;
&lt;li&gt;session 数据安全，Cookie 相对于不安全&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;案例验证码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例验证码&#34;&gt;#&lt;/a&gt; 案例：验证码&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;案例需求：
&lt;ol&gt;
&lt;li&gt;访问带有验证码的登录页面 login.jsp&lt;/li&gt;
&lt;li&gt;用户输入用户名，密码以及验证码。
&lt;ul&gt;
&lt;li&gt;如果用户名和密码输入有误，跳转登录页面，提示：用户名或密码错误&lt;/li&gt;
&lt;li&gt;如果验证码输入有误，跳转登录页面，提示：验证码错误&lt;/li&gt;
&lt;li&gt;如果全部输入正确，则跳转到主页 success.jsp，显示：用户名，欢迎您&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​&lt;/p&gt;
</content>
        <category term="JavaWeb" scheme="https://jihaipeng123.github.io/categories/JavaWeb/" />
        <updated>2023-08-28T01:25:43.000Z</updated>
    </entry>
    <entry>
        <id>https://jihaipeng123.github.io/IDEA%E4%B8%AD%E9%9B%86%E6%88%90Git/</id>
        <title>IDEA中集成Git</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/IDEA%E4%B8%AD%E9%9B%86%E6%88%90Git/"/>
        <content type="html">&lt;p&gt;打开 gitee 并选择新建仓库&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/IDEA-Git/image-20230817163250198.png&#34; alt=&#34;image-20230817163250198&#34; /&gt;&lt;/p&gt;
&lt;p&gt;创建仓库，填入仓库名称&lt;/p&gt;
&lt;p&gt;将代码克隆到本地&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/IDEA-Git/image-20230817163056512.png&#34; alt=&#34;image-20230817163056512&#34; /&gt;&lt;/p&gt;
&lt;p&gt;打开 git-bash 来克隆&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/IDEA-Git/image-20230817163225902.png&#34; alt=&#34;image-20230817163225902&#34; /&gt;&lt;/p&gt;
&lt;p&gt;IDEA 识别 gitee&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/IDEA-Git/image-20230817163320460.png&#34; alt=&#34;image-20230817163320460&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/IDEA-Git/image-20230817163340889.png&#34; alt=&#34;image-20230817163340889&#34; /&gt;&lt;/p&gt;
&lt;p&gt;新建项目&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/IDEA-Git/image-20230817163556682.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/IDEA-Git/image-20230817163724830.png&#34; alt=&#34;image-20230817163724830&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/IDEA-Git/image-20230817163832097.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;建完项目后绑定 git&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/IDEA-Git/image-20230817180920519.png&#34; alt=&#34;image-20230817180920519&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将写好的代码上传至 gitee&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/IDEA-Git/image-20230817163905774.png&#34; alt=&#34;image-20230817163905774&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/IDEA-Git/image-20230817164059337.png&#34; alt=&#34;image-20230817164059337&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/IDEA-Git/image-20230817164218082.png&#34; alt=&#34;image-20230817164218082&#34; /&gt;&lt;/p&gt;
&lt;p&gt;打开 gitee 可以看到上传成功&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/IDEA-Git/image-20230817164249825.png&#34; alt=&#34;image-20230817164249825&#34; /&gt;&lt;/p&gt;
</content>
        <category term="Git" scheme="https://jihaipeng123.github.io/categories/Git/" />
        <updated>2023-08-17T08:22:14.000Z</updated>
    </entry>
    <entry>
        <id>https://jihaipeng123.github.io/git%E8%AF%A6%E8%A7%A3/</id>
        <title>git详解</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/git%E8%AF%A6%E8%A7%A3/"/>
        <content type="html">&lt;h1 id=&#34;版本控制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#版本控制&#34;&gt;#&lt;/a&gt; 版本控制&lt;/h1&gt;
&lt;h2 id=&#34;什么是版本控制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是版本控制&#34;&gt;#&lt;/a&gt; 什么是版本控制&lt;/h2&gt;
&lt;p&gt;版本控制（Revision control）是一种在开发的过程中用于管理我们对文件、目录或工程等内容的修改历史，方便查看更改历史记录，备份以便恢复以前的版本的软件工程技术。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实现跨区域多人协同开发&lt;/li&gt;
&lt;li&gt;追踪和记载一个或者多个文件的历史记录&lt;/li&gt;
&lt;li&gt;组织和保护你的源代码和文档&lt;/li&gt;
&lt;li&gt;统计工作量&lt;/li&gt;
&lt;li&gt;并行开发、提高开发效率&lt;/li&gt;
&lt;li&gt;跟踪记录整个软件的开发过程&lt;/li&gt;
&lt;li&gt;减轻开发人员的负担，节省时间，同时降低人为错误&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单说就是用于管理多人协同开发项目的技术。&lt;/p&gt;
&lt;p&gt;没有进行版本控制或者版本控制本身缺乏正确的流程管理，在软件开发过程中将会引入很多问题，如软件代码的一致性、软件内容的冗余、软件过程的事物性、软件开发过程中的并发性、软件源代码的安全性，以及软件的整合等问题。&lt;/p&gt;
&lt;h2 id=&#34;常见的版本控制工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见的版本控制工具&#34;&gt;#&lt;/a&gt; 常见的版本控制工具&lt;/h2&gt;
&lt;p&gt;主流的版本控制器有如下这些：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Git&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SVN&lt;/strong&gt;（Subversion）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CVS&lt;/strong&gt;（Concurrent Versions System）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VSS&lt;/strong&gt;（Micorosoft Visual SourceSafe）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TFS&lt;/strong&gt;（Team Foundation Server）&lt;/li&gt;
&lt;li&gt;Visual Studio Online&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在影响力最大且使用最广泛的是 Git 与 SVN&lt;/p&gt;
&lt;h2 id=&#34;版本控制分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#版本控制分类&#34;&gt;#&lt;/a&gt; 版本控制分类&lt;/h2&gt;
&lt;h3 id=&#34;本地版本控制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#本地版本控制&#34;&gt;#&lt;/a&gt; 本地版本控制&lt;/h3&gt;
&lt;p&gt;记录文件每次的更新，可以对每个版本做一个快照，或是记录补丁文件，适合个人用，如 RCS。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/git/image-20230817154844686.png&#34; alt=&#34;image-20230817154844686&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;集中版本控制-svn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#集中版本控制-svn&#34;&gt;#&lt;/a&gt; 集中版本控制 SVN&lt;/h3&gt;
&lt;p&gt;所有的版本数据都保存在服务器上，协同开发者从服务器上同步更新或上传自己的修改&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/git/image-20230817154918368.png&#34; alt=&#34;image-20230817154918368&#34; /&gt;&lt;/p&gt;
&lt;p&gt;所有的版本数据都存在服务器上，用户的本地只有自己以前所同步的版本，如果不连网的话，用户就看不到历史版本，也无法切换版本验证问题，或在不同分支工作。而且，所有数据都保存在单一的服务器上，有很大的风险这个服务器会损坏，这样就会丢失所有的数据，当然可以定期备份。&lt;/p&gt;
&lt;h3 id=&#34;分布式版本控制-git&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分布式版本控制-git&#34;&gt;#&lt;/a&gt; 分布式版本控制 Git&lt;/h3&gt;
&lt;p&gt;所有版本信息仓库全部同步到本地的每个用户，这样就可以在本地查看所有版本历史，可以离线在本地提交，只需在连网时 push 到相应的服务器或其他用户那里。由于每个用户那里保存的都是所有的版本数据，只要有一个用户的设备没有问题就可以恢复所有的数据，但这增加了本地存储空间的占用。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/git/image-20230817155031419.png&#34; alt=&#34;image-20230817155031419&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;git与svn的主要区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git与svn的主要区别&#34;&gt;#&lt;/a&gt; Git 与 SVN 的主要区别&lt;/h3&gt;
&lt;p&gt;SVN 是集中式版本控制系统，版本库是集中放在中央服务器的，而工作的时候，用的都是自己的电脑，所以首先要从中央服务器得到最新的版本，然后工作，完成工作后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，对网络带宽要求较高。&lt;/p&gt;
&lt;h1 id=&#34;git的历史&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git的历史&#34;&gt;#&lt;/a&gt; Git 的历史&lt;/h1&gt;
&lt;p&gt;Git 是目前世界上最先进的分布式版本控制系统。&lt;/p&gt;
&lt;p&gt;Git 是免费、开源的，最初 Git 是为辅助 Linux 内核开发的，来替代 BitKeeper！&lt;/p&gt;
&lt;h1 id=&#34;git环境配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git环境配置&#34;&gt;#&lt;/a&gt; Git 环境配置&lt;/h1&gt;
&lt;h2 id=&#34;软件下载&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#软件下载&#34;&gt;#&lt;/a&gt; 软件下载&lt;/h2&gt;
&lt;p&gt;打开 [git 官网] &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXQtc2NtLmNvbS8lRUYlQkMlOEMlRTQlQjglOEIlRTglQkQlQkRnaXQlRTUlQUYlQjklRTUlQkElOTQlRTYlOTMlOEQlRTQlQkQlOUMlRTclQjMlQkIlRTclQkIlOUYlRTclOUElODQlRTclODklODglRTYlOUMlQUMlRTMlODAlODI=&#34;&gt;https://git-scm.com/，下载 git 对应操作系统的版本。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所有东西下载慢的话就可以去找镜像！&lt;/p&gt;
&lt;p&gt;官网下载太慢，我们可以使用淘宝镜像下载：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL25wbS50YW9iYW8ub3JnL21pcnJvcnMvZ2l0LWZvci13aW5kb3dzLw==&#34;&gt;http://npm.taobao.org/mirrors/git-for-windows/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;安装：无脑下一步即可！安装完毕就可以使用了！&lt;/p&gt;
&lt;h2 id=&#34;启动git&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#启动git&#34;&gt;#&lt;/a&gt; 启动 Git&lt;/h2&gt;
&lt;p&gt;安装成功后在开始菜单中会有 Git 项，菜单下有 3 个程序：任意文件夹下右键也可以看到对应的程序！&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/git/image-20230817155437522.png&#34; alt=&#34;image-20230817155437522&#34; /&gt;&lt;/p&gt;
&lt;p&gt;**Git Bash：**Unix 与 Linux 风格的命令行，使用最多，推荐最多&lt;/p&gt;
&lt;p&gt;**Git CMD：**Windows 风格的命令行&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Git GUI&lt;/strong&gt;：图形界面的 Git，不建议初学者使用，尽量先熟悉常用命令&lt;/p&gt;
&lt;h2 id=&#34;常用的linux命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用的linux命令&#34;&gt;#&lt;/a&gt; 常用的 Linux 命令&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-Java&#34;&gt;平时一定要多使用这些基础的命令！
1）cd : 改变目录。
2）cd . . 回退到上一个目录，直接cd进入默认目录
3）pwd : 显示当前所在的目录路径。
4）ls(ll):  都是列出当前目录中的所有文件，只不过ll(两个ll)列出的内容更为详细。
5）touch : 新建一个文件 如 touch index.js 就会在当前目录下新建一个index.js文件。
6）m:  删除一个文件, rm index.js 就会把index.js文件删除。
7）mkdir:  新建一个目录,就是新建一个文件夹。
8）rm -r :  删除一个文件夹, rm -r src 删除src目录
	rm -rf / 切勿在Linux中尝试！删除电脑中全部文件！
9）mv 移动文件, mv index.html src index.html 是我们要移动的文件, src 是目标文件	夹,当然, 这样写,必须保证文件和目标文件夹在同一目录下。
10）reset 重新初始化终端/清屏。
11）clear 清屏。
12）history 查看命令历史。
13）help 帮助。
14）exit 退出。
15）#表示注释
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;git配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git配置&#34;&gt;#&lt;/a&gt; Git 配置&lt;/h2&gt;
&lt;p&gt;所有的配置文件，其实都保存在本地！&lt;/p&gt;
&lt;p&gt;查看配置 git config -l&lt;/p&gt;
&lt;p&gt;查看不同级别的配置文件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#查看系统configgit config --system --list　　
#查看当前用户（global）配置git config --global  --list
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Git 相关的配置文件：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1）、Git\etc\gitconfig  ：Git 安装目录下的 gitconfig   --system 系统级&lt;/p&gt;
&lt;p&gt;2）、C:\Users\ji\ .gitconfig   只适用于当前登录用户的配置  --global 全局&lt;/p&gt;
&lt;h2 id=&#34;设置用户名与邮箱用户标识必要&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设置用户名与邮箱用户标识必要&#34;&gt;#&lt;/a&gt; 设置用户名与邮箱（用户标识，必要）&lt;/h2&gt;
&lt;p&gt;当你安装 Git 后首先要做的事情是设置你的用户名称和 e-mail 地址。这是非常重要的，因为每次 Git 提交都会使用该信息。它被永远的嵌入到了你的提交中：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git config --global user.name &amp;quot;jihaipeng666&amp;quot; #名称
git config --global user.email 3204568531@qq.com   #邮箱
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;git基本理论重要&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git基本理论重要&#34;&gt;#&lt;/a&gt; Git 基本理论（重要）&lt;/h1&gt;
&lt;h2 id=&#34;三个区域&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三个区域&#34;&gt;#&lt;/a&gt; 三个区域&lt;/h2&gt;
&lt;p&gt;Git 本地有三个工作区域：工作目录（Working Directory）、暂存区 (Stage/Index)、资源库 (Repository 或 Git Directory)。如果在加上远程的 git 仓库 (Remote Directory) 就可以分为四个工作区域。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/git/image-20230817160508461.png&#34; alt=&#34;image-20230817160508461&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Workspace：工作区，就是你平时存放项目代码的地方&lt;/li&gt;
&lt;li&gt;Index / Stage：暂存区，用于临时存放你的改动，事实上它只是一个文件，保存即将提交到文件列表信息&lt;/li&gt;
&lt;li&gt;Repository：仓库区（或本地仓库），就是安全存放数据的位置，这里面有你提交到所有版本的数据。其中 HEAD 指向最新放入仓库的版本&lt;/li&gt;
&lt;li&gt;Remote：远程仓库，托管代码的服务器，可以简单的认为是你项目组中的一台电脑用于远程数据交换&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本地的三个区域确切的说应该是 git 仓库中 HEAD 指向的版本：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/git/image-20230817160656063.png&#34; alt=&#34;image-20230817160656063&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Directory：使用 Git 管理的一个目录，也就是一个仓库，包含我们的工作空间和 Git 的管理空间。&lt;/li&gt;
&lt;li&gt;WorkSpace：需要通过 Git 进行版本控制的目录和文件，这些目录和文件组成了工作空间。&lt;/li&gt;
&lt;li&gt;.git：存放 Git 管理信息的目录，初始化仓库的时候自动创建。&lt;/li&gt;
&lt;li&gt;Index/Stage：暂存区，或者叫待提交更新区，在提交进入 repo 之前，我们可以把所有的更新放在暂存区。&lt;/li&gt;
&lt;li&gt;Local Repo：本地仓库，一个存放在本地的版本库；HEAD 会只是当前的开发分支（branch）。&lt;/li&gt;
&lt;li&gt;Stash：隐藏，是一个工作状态保存栈，用于保存 / 恢复 WorkSpace 中的临时状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;工作流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#工作流程&#34;&gt;#&lt;/a&gt; 工作流程&lt;/h2&gt;
&lt;p&gt;git 的工作流程一般是这样的：&lt;/p&gt;
&lt;p&gt;１、在工作目录中添加、修改文件；&lt;/p&gt;
&lt;p&gt;２、将需要进行版本管理的文件放入暂存区域；&lt;/p&gt;
&lt;p&gt;３、将暂存区域的文件提交到 git 仓库。&lt;/p&gt;
&lt;p&gt;因此，git 管理的文件有三种状态：已修改（modified）, 已暂存（staged）, 已提交 (committed)&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/git/image-20230817160751097.png&#34; alt=&#34;image-20230817160751097&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;git项目搭建&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git项目搭建&#34;&gt;#&lt;/a&gt; Git 项目搭建&lt;/h1&gt;
&lt;h2 id=&#34;创建工作目录与常用指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建工作目录与常用指令&#34;&gt;#&lt;/a&gt; 创建工作目录与常用指令&lt;/h2&gt;
&lt;p&gt;工作目录（WorkSpace) 一般就是你希望 Git 帮助你管理的文件夹，可以是你项目的目录，也可以是一个空目录，建议不要有中文。&lt;/p&gt;
&lt;p&gt;日常使用只要记住下图 6 个命令：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/git/image-20230817160843108.png&#34; alt=&#34;image-20230817160843108&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;本地仓库搭建&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#本地仓库搭建&#34;&gt;#&lt;/a&gt; 本地仓库搭建&lt;/h2&gt;
&lt;p&gt;创建本地仓库的方法有两种：一种是创建全新的仓库，另一种是克隆远程仓库。&lt;/p&gt;
&lt;p&gt;1、创建全新的仓库，需要用 GIT 管理的项目的根目录执行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 在当前目录新建一个Git代码库$ git init
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2、执行后可以看到，仅仅在项目目录多出了一个.git 目录，关于版本等的所有信息都在这个目录里面。&lt;/p&gt;
&lt;h2 id=&#34;克隆远程仓库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#克隆远程仓库&#34;&gt;#&lt;/a&gt; 克隆远程仓库&lt;/h2&gt;
&lt;p&gt;另一种方式是克隆远程目录，由于是将远程服务器上的仓库完全镜像一份至本地！&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 克隆一个项目和它的整个代码历史(版本信息)$ git clone [url]  # https://gitee.com/kuangstudy/openclass.git
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;git文件操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git文件操作&#34;&gt;#&lt;/a&gt; Git 文件操作&lt;/h1&gt;
&lt;h2 id=&#34;文件的四种状态&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件的四种状态&#34;&gt;#&lt;/a&gt; 文件的四种状态&lt;/h2&gt;
&lt;p&gt;版本控制就是对文件的版本控制，要对文件进行修改、提交等操作，首先要知道文件当前在什么状态，不然可能会提交了现在还不想提交的文件，或者要提交的文件没提交上。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Untracked: 未跟踪，此文件在文件夹中，但并没有加入到 git 库，不参与版本控制。通过 git add 状态变为 Staged.&lt;/li&gt;
&lt;li&gt;Unmodify: 文件已经入库，未修改，即版本库中的文件快照内容与文件夹中完全一致。这种类型的文件有两种去处，如果它被修改，而变为 Modified. 如果使用 git rm 移出版本库，则成为 Untracked 文件&lt;/li&gt;
&lt;li&gt;Modified: 文件已修改，仅仅是修改，并没有进行其他的操作。这个文件也有两个去处，通过 git add 可进入暂存 staged 状态，使用 git checkout 则丢弃修改过，返回到 unmodify 状态，这个 git checkout 即从库中取出文件，覆盖当前修改！&lt;/li&gt;
&lt;li&gt;Staged: 暂存状态。执行 git commit 则将修改同步到库中，这时库中的文件和本地文件又变为一致，文件为 Unmodify 状态。执行 git reset HEAD filename 取消暂存，文件状态为 Modified&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;查看文件状态&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查看文件状态&#34;&gt;#&lt;/a&gt; 查看文件状态&lt;/h2&gt;
&lt;p&gt;上面说文件有 4 种状态，通过如下命令可以查看到文件的状态：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#查看指定文件状态git status [filename]
#查看所有文件状态git status
# git add .                  添加所有文件到暂存区
# git commit -m &amp;quot;消息内容&amp;quot;    提交暂存区中的内容到本地仓库 -m 提交信息
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;忽略文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#忽略文件&#34;&gt;#&lt;/a&gt; 忽略文件&lt;/h2&gt;
&lt;p&gt;有些时候我们不想把某些文件纳入版本控制中，比如数据库文件，临时文件，设计文件等&lt;/p&gt;
&lt;p&gt;在主目录下建立 &amp;quot;.gitignore&amp;quot; 文件，此文件有如下规则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;忽略文件中的空行或以井号（#）开始的行将会被忽略。&lt;/li&gt;
&lt;li&gt;可以使用 Linux 通配符。例如：星号（*）代表任意多个字符，问号（？）代表一个字符，方括号（[abc]）代表可选字符范围，大括号（{string1,string2,...}）代表可选的字符串等。&lt;/li&gt;
&lt;li&gt;如果名称的最前面有一个感叹号（!），表示例外规则，将不被忽略。&lt;/li&gt;
&lt;li&gt;如果名称的最前面是一个路径分隔符（/），表示要忽略的文件在此目录下，而子目录中的文件不忽略。&lt;/li&gt;
&lt;li&gt;如果名称的最后面是一个路径分隔符（/），表示要忽略的是此目录下该名称的子目录，而非文件（默认文件或目录都忽略）。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;#为注释
*.txt        #忽略所有 .txt结尾的文件,这样的话上传就不会被选中！
!lib.txt     #但lib.txt除外
/temp        #仅忽略项目根目录下的TODO文件,不包括其它目录
tempbuild/   #忽略build/目录下的所有文件
doc/*.txt    #会忽略 doc/notes.txt 但不包括 doc/server/arch.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;使用码云&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用码云&#34;&gt;#&lt;/a&gt; 使用码云&lt;/h1&gt;
&lt;p&gt;github 是有墙的，比较慢，在国内的话，我们一般使用 gitee ，公司中有时候会搭建自己的 gitlab 服务器&lt;/p&gt;
&lt;p&gt;1、注册登录码云，完善个人信息&lt;/p&gt;
&lt;p&gt;2、设置本机绑定 SSH 公钥，实现免密码登录！（免密码登录，这一步挺重要的，码云是远程仓库，我们是平时工作在本地仓库！)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 进入 C:\Users\Administrator\.ssh 目录
# 生成公钥
ssh-keygen
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/git/image-20230817161442805.png&#34; alt=&#34;image-20230817161442805&#34; /&gt;&lt;/p&gt;
&lt;p&gt;3、将公钥信息 public key 添加到码云账户中即可！&lt;/p&gt;
&lt;p&gt;4、使用码云创建一个自己的仓库！&lt;/p&gt;
&lt;h1 id=&#34;idea中集成git&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#idea中集成git&#34;&gt;#&lt;/a&gt; IDEA 中集成 Git&lt;/h1&gt;
&lt;h1 id=&#34;git分支&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git分支&#34;&gt;#&lt;/a&gt; GIT 分支&lt;/h1&gt;
&lt;h2 id=&#34;git分支中常用指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git分支中常用指令&#34;&gt;#&lt;/a&gt; git 分支中常用指令&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;# 列出所有本地分支
git branch

# 列出所有远程分支
git branch -r

# 新建一个分支，但依然停留在当前分支
git branch [branch-name]

# 新建一个分支，并切换到该分支
git checkout -b [branch]

# 合并指定分支到当前分支
$ git merge [branch]

# 删除分支
$ git branch -d [branch-name]

# 删除远程分支
$ git push origin --delete [branch-name]
$ git branch -dr [remote/branch]
&lt;/code&gt;&lt;/pre&gt;
</content>
        <category term="Git" scheme="https://jihaipeng123.github.io/categories/Git/" />
        <updated>2023-08-17T07:42:30.000Z</updated>
    </entry>
    <entry>
        <id>https://jihaipeng123.github.io/6Servlet-HTTP/</id>
        <title>6.Servlet&amp;HTTP</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/6Servlet-HTTP/"/>
        <content type="html">&lt;h1 id=&#34;servlet&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#servlet&#34;&gt;#&lt;/a&gt; Servlet&lt;/h1&gt;
&lt;h2 id=&#34;概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;概念：运行在服务器端的小程序
&lt;ul&gt;
&lt;li&gt;Servlet 就是一个接口，定义了 Java 类被浏览器访问到 (tomcat 识别) 的规则。&lt;/li&gt;
&lt;li&gt;将来我们自定义一个类，实现 Servlet 接口，复写方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;快速入门&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#快速入门&#34;&gt;#&lt;/a&gt; 快速入门&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建 JavaEE 项目&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;定义一个类，实现 Servlet 接口&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;public class ServletDemo1 implements Servlet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实现接口中的抽象方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 Servlet&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;在web.xml中配置：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 配置 Servlet --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;servlet&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;servlet-name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;demo1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;servlet-name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;servlet-class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cn.itcast.web.servlet.ServletDemo1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;servlet-class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;servlet&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;servlet-mapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;servlet-name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;demo1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;servlet-name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;url-pattern&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;/demo1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;url-pattern&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;servlet-mapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;执行原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#执行原理&#34;&gt;#&lt;/a&gt; 执行原理&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;当服务器接受到客户端浏览器的请求后，会解析请求 URL 路径，获取访问的 Servlet 的资源路径&lt;/li&gt;
&lt;li&gt;查找 web.xml 文件，是否有对应的 &amp;lt;url-pattern&amp;gt; 标签体内容。&lt;/li&gt;
&lt;li&gt;如果有，则在找到对应的 &amp;lt;servlet-class&amp;gt; 全类名&lt;/li&gt;
&lt;li&gt;tomcat 会将字节码文件加载进内存，并且创建其对象&lt;/li&gt;
&lt;li&gt;调用其方法&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;生命周期&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生命周期&#34;&gt;#&lt;/a&gt; 生命周期&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;被创建：执行 init 方法，只执行一次&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Servlet 什么时候被创建？&lt;br /&gt;
默认情况下，第一次被访问时，Servlet 被创建&lt;br /&gt;
可以配置执行 Servlet 的创建时机。&lt;/p&gt;
&lt;p&gt;在 &amp;lt;servlet&amp;gt; 标签下配置&lt;/p&gt;
&lt;p&gt;第一次被访问时，创建&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;load-on-startup&amp;gt; 的值为负数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在服务器启动时，创建&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;load-on-startup&amp;gt; 的值为 0 或正整数&lt;/li&gt;
&lt;li&gt;Servlet 的 init 方法，只执行一次，说明一个 Servlet 在内存中只存在一个对象，Servlet 是单例的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;多个用户同时访问时，可能存在线程安全问题。&lt;/li&gt;
&lt;li&gt;解决：尽量不要在 Servlet 中定义成员变量。即使定义了成员变量，也不要对修改值&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;提供服务：执行 service 方法，执行多次&lt;/p&gt;
&lt;p&gt;每次访问 Servlet 时，Service 方法都会被调用一次。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;被销毁：执行 destroy 方法，只执行一次&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Servlet 被销毁时执行。服务器关闭时，Servlet 被销毁&lt;/li&gt;
&lt;li&gt;只有服务器正常关闭时，才会执行 destroy 方法。&lt;/li&gt;
&lt;li&gt;destroy 方法在 Servlet 被销毁之前执行，一般用于释放资源&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;servlet30&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#servlet30&#34;&gt;#&lt;/a&gt; Servlet3.0&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;好处：
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;支持注解配置。可以不需要 web.xml 了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建 JavaEE 项目，选择 Servlet 的版本 3.0 以上，可以不创建 web.xml&lt;/li&gt;
&lt;li&gt;定义一个类，实现 Servlet 接口&lt;/li&gt;
&lt;li&gt;复写方法&lt;/li&gt;
&lt;li&gt;在类上使用 @WebServlet 注解，进行配置&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;@WebServlet(&#34;资源路径&#34;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		@Target(&amp;#123;ElementType.TYPE&amp;#125;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		@Retention(RetentionPolicy.RUNTIME)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		@Documented&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		public @interface WebServlet &amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		    String name() default &#34;&#34;;//相当于&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;Servlet-name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		    String[] value() default &amp;#123;&amp;#125;;//代表urlPatterns()属性配置&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		    String[] urlPatterns() default &amp;#123;&amp;#125;;//相当于&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;url-pattern&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		    int loadOnStartup() default -1;//相当于&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;load-on-startup&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		    WebInitParam[] initParams() default &amp;#123;&amp;#125;;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		    boolean asyncSupported() default false;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		    String smallIcon() default &#34;&#34;;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		    String largeIcon() default &#34;&#34;;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		    String description() default &#34;&#34;;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		    String displayName() default &#34;&#34;;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;注意；form 标签中的 action 属性用于指定表单数据提交到哪个 URL 地址&lt;/p&gt;
&lt;h2 id=&#34;servlet的体系结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#servlet的体系结构&#34;&gt;#&lt;/a&gt; Servlet 的体系结构&lt;/h2&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;Servlet&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; 接口&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token class-name&#34;&gt;GenericServlet&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; 抽象类&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token class-name&#34;&gt;HttpServlet&lt;/span&gt;  &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; 抽象类&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;GenericServlet&lt;/span&gt;：将&lt;span class=&#34;token class-name&#34;&gt;Servlet&lt;/span&gt;接口中其他的方法做了默认空实现，只将&lt;span class=&#34;token function&#34;&gt;service&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;方法作为抽象&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; 将来定义&lt;span class=&#34;token class-name&#34;&gt;Servlet&lt;/span&gt;类时，可以继承&lt;span class=&#34;token class-name&#34;&gt;GenericServlet&lt;/span&gt;，实现&lt;span class=&#34;token function&#34;&gt;service&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;方法即可&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HttpServlet&lt;/span&gt;：对http协议的一种封装，简化操作&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token number&#34;&gt;1.&lt;/span&gt; 定义类继承&lt;span class=&#34;token class-name&#34;&gt;HttpServlet&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token number&#34;&gt;2.&lt;/span&gt; 复写doGet&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;doPost方法&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;servlet相关配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#servlet相关配置&#34;&gt;#&lt;/a&gt; Servlet 相关配置&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;urlpartten:Servlet 访问路径
&lt;ol&gt;
&lt;li&gt;一个 Servlet 可以定义多个访问路径 ： @WebServlet ({&amp;quot;/d4&amp;quot;,&amp;quot;/dd4&amp;quot;,&amp;quot;/ddd4&amp;quot;})&lt;/li&gt;
&lt;li&gt;路径定义规则：
&lt;ol&gt;
&lt;li&gt;/xxx：路径匹配&lt;/li&gt;
&lt;li&gt;/xxx/xxx: 多层路径，目录结构&lt;/li&gt;
&lt;li&gt;*.do：扩展名匹配.(不加 /)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;http&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#http&#34;&gt;#&lt;/a&gt; HTTP&lt;/h1&gt;
&lt;h2 id=&#34;概念-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念-2&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;p&gt;Hyper Text Transfer Protocol 超文本传输协议&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;传输协议：定义了，客户端和服务器端通信时，发送数据的格式&lt;/li&gt;
&lt;li&gt;特点：
&lt;ol&gt;
&lt;li&gt;基于 TCP/IP 的高级协议&lt;/li&gt;
&lt;li&gt;默认端口号：80&lt;/li&gt;
&lt;li&gt;基于请求 / 响应模型的：一次请求对应一次响应&lt;/li&gt;
&lt;li&gt;无状态的：每次请求之间相互独立，不能交互数据&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;历史版本：
&lt;ul&gt;
&lt;li&gt;1.0：每一次请求响应都会建立新的连接&lt;/li&gt;
&lt;li&gt;1.1：复用连接&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;请求消息数据格式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#请求消息数据格式&#34;&gt;#&lt;/a&gt; 请求消息数据格式&lt;/h2&gt;
&lt;h3 id=&#34;请求行&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#请求行&#34;&gt;#&lt;/a&gt; 请求行&lt;/h3&gt;
&lt;p&gt;请求方式 请求 url 请求协议 / 版本&lt;br /&gt;
 GET /login.html	HTTP/1.1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;请求方式：
&lt;ul&gt;
&lt;li&gt;HTTP 协议有 7 中请求方式，常用的有 2 种
&lt;ul&gt;
&lt;li&gt;GET：
&lt;ol&gt;
&lt;li&gt;请求参数在请求行中，在 url 后。&lt;/li&gt;
&lt;li&gt;请求的 url 长度有限制的&lt;/li&gt;
&lt;li&gt;不太安全&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;POST：
&lt;ol&gt;
&lt;li&gt;请求参数在请求体中&lt;/li&gt;
&lt;li&gt;请求的 url 长度没有限制的&lt;/li&gt;
&lt;li&gt;相对安全&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;请求头&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#请求头&#34;&gt;#&lt;/a&gt; 请求头&lt;/h3&gt;
&lt;p&gt;客户端浏览器告诉服务器一些信息&lt;br /&gt;
请求头名称：请求头值&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见的请求头：
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;User-Agent：浏览器告诉服务器，我访问你使用的浏览器版本信息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以在服务器端获取该头的信息，解决浏览器的兼容性问题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Referer：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdC9sb2dpbi5odG1s&#34;&gt;http://localhost/login.html&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;告诉服务器，我 (当前请求) 从哪里来？
&lt;ul&gt;
&lt;li&gt;作用：
&lt;ol&gt;
&lt;li&gt;防盗链：&lt;/li&gt;
&lt;li&gt;统计工作：&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;请求空行&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#请求空行&#34;&gt;#&lt;/a&gt; 请求空行&lt;/h3&gt;
&lt;p&gt;空行，就是用于分割 POST 请求的请求头，和请求体的。&lt;/p&gt;
&lt;h3 id=&#34;请求体正文&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#请求体正文&#34;&gt;#&lt;/a&gt; 请求体 (正文)&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;* 封装POST请求消息的请求参数的
* 响应消息数据格式
&lt;/code&gt;&lt;/pre&gt;
&lt;figure class=&#34;highlight http&#34;&gt;&lt;figcaption data-lang=&#34;HTTP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;字符串格式：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token request-line&#34;&gt;&lt;span class=&#34;token method property&#34;&gt;POST&lt;/span&gt; &lt;span class=&#34;token request-target url&#34;&gt;/login.html&lt;/span&gt;	&lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;localhost&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;User-Agent&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Accept&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Accept-Language&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Accept-Encoding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;gzip, deflate&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Referer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;http://localhost/login.html&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Connection&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;keep-alive&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Upgrade-Insecure-Requests&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;username=zhangsan&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;request&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#request&#34;&gt;#&lt;/a&gt; Request&lt;/h1&gt;
&lt;h2 id=&#34;request对象和response对象的原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#request对象和response对象的原理&#34;&gt;#&lt;/a&gt; request 对象和 response 对象的原理&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;request 和 response 对象是由服务器创建的。我们来使用它们&lt;/li&gt;
&lt;li&gt;request 对象是来获取请求消息，response 对象是来设置响应消息&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;request对象继承体系结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#request对象继承体系结构&#34;&gt;#&lt;/a&gt; request 对象继承体系结构&lt;/h2&gt;
&lt;p&gt;ServletRequest		--	接口&lt;br /&gt;
 |	继承&lt;br /&gt;
 HttpServletRequest	-- 接口&lt;br /&gt;
 |	实现&lt;br /&gt;
 org.apache.catalina.connector.RequestFacade 类 (tomcat)&lt;/p&gt;
&lt;h1 id=&#34;request功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#request功能&#34;&gt;#&lt;/a&gt; request 功能&lt;/h1&gt;
&lt;h2 id=&#34;获取请求消息数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#获取请求消息数据&#34;&gt;#&lt;/a&gt; 获取请求消息数据&lt;/h2&gt;
&lt;h3 id=&#34;获取请求行数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#获取请求行数据&#34;&gt;#&lt;/a&gt; 获取请求行数据&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GET /day14/demo1?name=zhangsan HTTP/1.1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;获取请求方式 ：GET&lt;br /&gt;
String getMethod()&lt;/li&gt;
&lt;li&gt;(*) 获取虚拟目录：/day14&lt;br /&gt;
String getContextPath()&lt;/li&gt;
&lt;li&gt;获取 Servlet 路径: /demo1&lt;br /&gt;
String getServletPath()&lt;/li&gt;
&lt;li&gt;获取 get 方式请求参数：name=zhangsan&lt;br /&gt;
String getQueryString()&lt;/li&gt;
&lt;li&gt;(*) 获取请求 URI：/day14/demo1&lt;br /&gt;
String getRequestURI():		/day14/demo1&lt;br /&gt;
StringBuffer getRequestURL()  :&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdC9kYXkxNC9kZW1vMQ==&#34;&gt;http://localhost/day14/demo1&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;URL: 统一资源定位符 ： &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdC9kYXkxNC9kZW1vMQ==&#34;&gt;http://localhost/day14/demo1&lt;/span&gt;	中华人民共和国&lt;br /&gt;
 URI：统一资源标识符 : /day14/demo1					共和国&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;
&lt;p&gt;获取协议及版本：HTTP/1.1&lt;br /&gt;
String getProtocol()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取客户机的 IP 地址：&lt;br /&gt;
String getRemoteAddr()&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;获取请求头数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#获取请求头数据&#34;&gt;#&lt;/a&gt; 获取请求头数据&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;方法：
&lt;ul&gt;
&lt;li&gt;(*) String getHeader (String name): 通过请求头的名称获取请求头的值&lt;/li&gt;
&lt;li&gt;Enumeration&amp;lt;String&amp;gt; getHeaderNames (): 获取所有的请求头名称&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;获取请求体数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#获取请求体数据&#34;&gt;#&lt;/a&gt; 获取请求体数据&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;请求体：只有 POST 请求方式，才有请求体，在请求体中封装了 POST 请求的请求参数&lt;/li&gt;
&lt;li&gt;步骤：
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;获取流对象&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BufferedReader getReader ()：获取字符输入流，只能操作字符数据&lt;/li&gt;
&lt;li&gt;ServletInputStream getInputStream ()：获取字节输入流，可以操作所有类型数据
&lt;ul&gt;
&lt;li&gt;在文件上传知识点后讲解&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;再从流对象中拿数据&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/Servlet-HTTP/image-20230815084125312.png&#34; alt=&#34;image-20230815084125312&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;其他功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#其他功能&#34;&gt;#&lt;/a&gt; 其他功能&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;获取请求参数通用方式：不论 get 还是 post 请求方式都可以使用下列方法来获取请求参数
&lt;ol&gt;
&lt;li&gt;String getParameter (String name): 根据参数名称获取参数值    username=zs&amp;amp;password=123&lt;br /&gt;
2. String [] getParameterValues (String name): 根据参数名称获取参数值的数组  hobby=xx&amp;amp;hobby=game&lt;br /&gt;
3. Enumeration&amp;lt;String&amp;gt; getParameterNames (): 获取所有请求的参数名称&lt;br /&gt;
 4. Map&amp;lt;String,String []&amp;gt; getParameterMap (): 获取所有参数的 map 集合
&lt;ul&gt;
&lt;li&gt;中文乱码问题：
&lt;ul&gt;
&lt;li&gt;get 方式：tomcat 8 已经将 get 方式乱码问题解决了&lt;/li&gt;
&lt;li&gt;post 方式：会乱码
&lt;ul&gt;
&lt;li&gt;解决：在获取参数前，设置 request 的编码 request.setCharacterEncoding (&amp;quot;utf-8&amp;quot;);&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;请求转发&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#请求转发&#34;&gt;#&lt;/a&gt; 请求转发&lt;/h2&gt;
&lt;p&gt;一种在服务器内部的资源跳转方式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过 request 对象获取请求转发器对象：RequestDispatcher getRequestDispatcher (String path)&lt;/li&gt;
&lt;li&gt;使用 RequestDispatcher 对象来进行转发：forward (ServletRequest request, ServletResponse response)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;特点：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;浏览器地址栏路径不发生变化&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只能转发到当前服务器内部资源中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;转发是一次请求&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;共享数据：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;域对象：一个有作用范围的对象，可以在范围内共享数据&lt;/li&gt;
&lt;li&gt;request 域：代表一次请求的范围，一般用于请求转发的多个资源中共享数据
&lt;ul&gt;
&lt;li&gt;方法：&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;void setAttribute (String name,Object obj): 存储数据&lt;/li&gt;
&lt;li&gt;Object getAttitude (String name): 通过键获取值&lt;/li&gt;
&lt;li&gt;void removeAttribute (String name): 通过键移除键值对&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取 ServletContext：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;ServletContext getServletContext()&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;案例用户登录&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例用户登录&#34;&gt;#&lt;/a&gt; 案例：用户登录&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;用户登录案例需求：（见例题）
1.编写login.html登录页面
	username &amp;amp; password 两个输入框
2. 使用Druid数据库连接池技术,操作mysql，day14数据库中user表
3. 使用JdbcTemplate技术封装JDBC
4. 登录成功跳转到SuccessServlet展示：登录成功！用户名,欢迎您
5. 登录失败跳转到FailServlet展示：登录失败，用户名或密码错误
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;beanutils工具类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#beanutils工具类&#34;&gt;#&lt;/a&gt; BeanUtils 工具类&lt;/h1&gt;
&lt;p&gt;简化数据封装，用于封装 JavaBean 的&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;JavaBean：标准的 Java 类&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;要求：&lt;br /&gt;
类必须被 public 修饰&lt;/p&gt;
&lt;p&gt;​		必须提供空参的构造器&lt;/p&gt;
&lt;p&gt;​		成员变量必须使用 private 修饰&lt;/p&gt;
&lt;p&gt;​		提供公共 setter 和 getter 方法&lt;/p&gt;
&lt;p&gt;​		功能：封装数据&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;概念：&lt;br /&gt;
成员变量：&lt;/p&gt;
&lt;p&gt;​	属性：setter 和 getter 方法截取后的产物&lt;br /&gt;
​	例如：getUsername () --&amp;gt; Username--&amp;gt; username&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方法：&lt;br /&gt;
1. setProperty()&lt;br /&gt;
2. getProperty()&lt;br /&gt;
 3. populate (Object obj , Map map): 将 map 集合的键值对信息，封装到对应的 JavaBean 对象中&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;http协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#http协议&#34;&gt;#&lt;/a&gt; HTTP 协议&lt;/h1&gt;
&lt;h2 id=&#34;请求消息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#请求消息&#34;&gt;#&lt;/a&gt; 请求消息&lt;/h2&gt;
&lt;p&gt;客户端发送给服务器端的数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据格式：
&lt;ol&gt;
&lt;li&gt;请求行&lt;/li&gt;
&lt;li&gt;请求头&lt;/li&gt;
&lt;li&gt;请求空行&lt;/li&gt;
&lt;li&gt;请求体&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;响应消息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#响应消息&#34;&gt;#&lt;/a&gt; 响应消息&lt;/h2&gt;
&lt;p&gt;服务器端发送给客户端的数据&lt;/p&gt;
&lt;h3 id=&#34;响应行&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#响应行&#34;&gt;#&lt;/a&gt; 响应行&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;组成：协议 / 版本 响应状态码 状态码描述&lt;/li&gt;
&lt;li&gt;响应状态码：服务器告诉客户端浏览器本次请求和响应的一个状态。
&lt;ol&gt;
&lt;li&gt;状态码都是 3 位数字&lt;/li&gt;
&lt;li&gt;分类：
&lt;ol&gt;
&lt;li&gt;1xx：服务器就收客户端消息，但没有接受完成，等待一段时间后，发送 1xx 多状态码&lt;/li&gt;
&lt;li&gt;2xx：成功。代表：200&lt;/li&gt;
&lt;li&gt;3xx：重定向。代表：302 (重定向)，304 (访问缓存)&lt;/li&gt;
&lt;li&gt;4xx：客户端错误。
&lt;ul&gt;
&lt;li&gt;代表：
&lt;ul&gt;
&lt;li&gt;404（请求路径没有对应的资源）&lt;/li&gt;
&lt;li&gt;405：请求方式没有对应的 doXxx 方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;5xx：服务器端错误。代表：500 (服务器内部出现异常)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;响应头&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#响应头&#34;&gt;#&lt;/a&gt; 响应头&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;格式：头名称： 值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常见的响应头：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Content-Type：服务器告诉客户端本次响应体数据格式以及编码格式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Content-disposition：服务器告诉客户端以什么格式打开响应体数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;值：
&lt;ul&gt;
&lt;li&gt;in-line: 默认值，在当前页面内打开&lt;/li&gt;
&lt;li&gt;attachment;filename=xxx：以附件形式打开响应体。文件下载&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;响应空行&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#响应空行&#34;&gt;#&lt;/a&gt; 响应空行&lt;/h3&gt;
&lt;h3 id=&#34;响应体&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#响应体&#34;&gt;#&lt;/a&gt; 响应体&lt;/h3&gt;
&lt;p&gt;传输的数据&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;响应字符串格式&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		HTTP/1.1 200 OK&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		Content-Type: text/html;charset=UTF-8&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		Content-Length: 101&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		Date: Wed, 06 Jun 2018 07:08:42 GMT&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;$Title$&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		  hello , response&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;response对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#response对象&#34;&gt;#&lt;/a&gt; Response 对象&lt;/h1&gt;
&lt;h2 id=&#34;功能设置响应消息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#功能设置响应消息&#34;&gt;#&lt;/a&gt; 功能：设置响应消息&lt;/h2&gt;
&lt;h3 id=&#34;设置响应行&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设置响应行&#34;&gt;#&lt;/a&gt; 设置响应行&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;格式：HTTP/1.1 200 ok&lt;/li&gt;
&lt;li&gt;设置状态码：setStatus (int sc)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;设置响应头&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设置响应头&#34;&gt;#&lt;/a&gt; 设置响应头&lt;/h3&gt;
&lt;p&gt;setHeader(String name, String value)&lt;/p&gt;
&lt;h3 id=&#34;设置响应体&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设置响应体&#34;&gt;#&lt;/a&gt; 设置响应体&lt;/h3&gt;
&lt;p&gt;使用步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;获取输出流&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;字符输出流：PrintWriter getWriter ()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;字节输出流：ServletOutputStream getOutputStream ()&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用输出流，将数据输出到客户端浏览器&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例&#34;&gt;#&lt;/a&gt; 案例&lt;/h2&gt;
&lt;h3 id=&#34;完成重定向&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#完成重定向&#34;&gt;#&lt;/a&gt; 完成重定向&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;重定向：资源跳转的方式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代码实现：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;设置状态码为 302&lt;/p&gt;
&lt;p&gt;response.setStatus(302);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置响应头 location&lt;br /&gt;
response.setHeader(&amp;quot;location&amp;quot;,&amp;quot;/day15/responseDemo2&amp;quot;);&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简单的重定向方法&lt;br /&gt;
 response.sendRedirect (&amp;quot;/day15/responseDemo2&amp;quot;);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;转发的特点：forward&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;转发地址栏路径不变&lt;/li&gt;
&lt;li&gt;转发只能访问当前服务器下的资源&lt;/li&gt;
&lt;li&gt;转发是一次请求，可以使用 request 对象来共享数据&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;forward 和  redirect 区别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;路径写法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;路径分类&lt;/p&gt;
&lt;p&gt;相对路径：通过相对路径不可以确定唯一资源&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如：./index.html&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不以 / 开头，以。开头路径&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;规则：找到当前资源和目标资源之间的相对位置关系&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;./：当前目录&lt;/li&gt;
&lt;li&gt;../: 后退一级目录&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;绝对路径：通过绝对路径可以确定唯一资源&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdC9kYXkxNS9yZXNwb25zZURlbW8y&#34;&gt;http://localhost/day15/responseDemo2&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以 / 开头的路径&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;规则：判断定义的路径是给谁用的？判断请求将来从哪儿发出&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;给客户端浏览器使用：需要加虚拟目录 (项目的访问路径)
&lt;ul&gt;
&lt;li&gt;建议虚拟目录动态获取：request.getContextPath ()&lt;/li&gt;
&lt;li&gt;&amp;lt;a&amp;gt; , &amp;lt;form&amp;gt; 重定向...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;给服务器使用：不需要加虚拟目录
&lt;ul&gt;
&lt;li&gt;转发路径&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;服务器输出字符数据到浏览器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#服务器输出字符数据到浏览器&#34;&gt;#&lt;/a&gt; 服务器输出字符数据到浏览器&lt;/h3&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;获取字符输出流&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输出数据&lt;/p&gt;
&lt;p&gt;注意：&lt;br /&gt;
* 乱码问题：&lt;br /&gt;
1. PrintWriter pw = response.getWriter (); 获取的流的默认编码是 ISO-8859-1&lt;br /&gt;
2. 设置该流的默认编码&lt;br /&gt;
 3. 告诉浏览器响应体使用的编码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;	//简单的形式，设置编码，是在获取流之前设置
	response.setContentType(&amp;quot;text/html;charset=utf-8&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;服务器输出字节数据到浏览器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#服务器输出字节数据到浏览器&#34;&gt;#&lt;/a&gt; 服务器输出字节数据到浏览器&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;步骤：
&lt;ol&gt;
&lt;li&gt;获取字节输出流&lt;/li&gt;
&lt;li&gt;输出数据&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;验证码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#验证码&#34;&gt;#&lt;/a&gt; 验证码&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;本质：图片&lt;/li&gt;
&lt;li&gt;目的：防止恶意表单注册&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;servletcontext对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#servletcontext对象&#34;&gt;#&lt;/a&gt; ServletContext 对象&lt;/h1&gt;
&lt;h2 id=&#34;概念-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念-3&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;概念：代表整个 web 应用，可以和程序的容器 (服务器) 来通信&lt;/li&gt;
&lt;li&gt;获取：
&lt;ol&gt;
&lt;li&gt;通过 request 对象获取&lt;br /&gt;
 request.getServletContext ();&lt;/li&gt;
&lt;li&gt;通过 HttpServlet 获取&lt;br /&gt;
 this.getServletContext ();&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;功能：
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;获取 MIME 类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;MIME 类型：在互联网通信过程中定义的一种文件数据类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;格式： 大类型 / 小类型   text/html		image/jpeg&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取：String getMimeType (String file)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;域对象：共享数据&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;setAttribute(String name,Object value)&lt;/li&gt;
&lt;li&gt;getAttribute(String name)&lt;/li&gt;
&lt;li&gt;removeAttribute(String name)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;ServletContext 对象范围：所有用户所有请求的数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取文件的真实 (服务器) 路径&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;方法：String getRealPath (String path)&lt;br /&gt;
 String b = context.getRealPath (&amp;quot;/b.txt&amp;quot;);//web 目录下资源访问&lt;br /&gt;
 System.out.println (b);&lt;/p&gt;
&lt;p&gt;String c = context.getRealPath (&amp;quot;/WEB-INF/c.txt&amp;quot;);//WEB-INF 目录下的资源访问&lt;br /&gt;
 System.out.println (c);&lt;/p&gt;
&lt;p&gt;String a = context.getRealPath (&amp;quot;/WEB-INF/classes/a.txt&amp;quot;);//src 目录下的资源访问&lt;br /&gt;
 System.out.println (a);&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;案例-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例-2&#34;&gt;#&lt;/a&gt; 案例&lt;/h2&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;* 文件下载需求：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	1. 页面显示超链接&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	2. 点击超链接后弹出下载提示框&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	3. 完成图片文件下载&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;* 分析：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	1. 超链接指向的资源如果能够被浏览器解析，则在浏览器中展示，如果不能解析，则弹出下载提示框。不满足需求&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	2. 任何资源都必须弹出下载提示框&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	3. 使用响应头设置资源的打开方式：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		* content-disposition:attachment;filename=xxx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;* 步骤：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	1. 定义页面，编辑超链接href属性，指向Servlet，传递资源名称filename&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	2. 定义Servlet&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		1. 获取文件名称&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		2. 使用字节输入流加载文件进内存&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		3. 指定response的响应头： content-disposition:attachment;filename=xxx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		4. 将数据写出到response输出流&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="JavaWeb" scheme="https://jihaipeng123.github.io/categories/JavaWeb/" />
        <updated>2023-08-15T00:16:20.000Z</updated>
    </entry>
    <entry>
        <id>https://jihaipeng123.github.io/5xml-Tomcat/</id>
        <title>5.xml&amp;Tomcat</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/5xml-Tomcat/"/>
        <content type="html">&lt;h1 id=&#34;xml&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xml&#34;&gt;#&lt;/a&gt; XML&lt;/h1&gt;
&lt;h2 id=&#34;概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;p&gt;Extensible Markup Language 可扩展标记语言&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可扩展：标签都是自定义的。 &amp;lt;user&amp;gt;  &amp;lt;student&amp;gt;&lt;/li&gt;
&lt;li&gt;功能
&lt;ul&gt;
&lt;li&gt;存储数据
&lt;ol&gt;
&lt;li&gt;配置文件&lt;/li&gt;
&lt;li&gt;在网络中传输&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;xml 与 html 的区别
&lt;ol&gt;
&lt;li&gt;xml 标签都是自定义的，html 标签是预定义。&lt;/li&gt;
&lt;li&gt;xml 的语法严格，html 语法松散&lt;/li&gt;
&lt;li&gt;xml 是存储数据的，html 是展示数据&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基本语法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;xml 文档的后缀名 .xml&lt;/li&gt;
&lt;li&gt;xml 第一行必须定义为文档声明&lt;/li&gt;
&lt;li&gt;xml 文档中有且仅有一个根标签&lt;/li&gt;
&lt;li&gt;属性值必须使用引号 (单双都可) 引起来&lt;/li&gt;
&lt;li&gt;标签必须正确关闭&lt;/li&gt;
&lt;li&gt;xml 标签名称区分大小写&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;快速入门：&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token prolog&#34;&gt;&amp;lt;?xml version=&#39;1.0&#39; ?&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;users&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;user&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;1&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;zhangsan&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;age&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;23&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;age&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;gender&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;male&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;gender&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;user&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;2&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;lisi&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;age&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;24&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;age&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;gender&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;female&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;gender&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;users&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组成部分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;文档声明&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;格式：&lt;strong&gt;&amp;lt;?xml 属性列表？&amp;gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;属性列表：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;version：版本号，必须的属性，一般都是 **&amp;lt;?xml version=&#39;1.0&#39; ?&amp;gt;**&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;encoding：编码方式。告知解析引擎当前文档使用的字符集，默认值：ISO-8859-1&lt;/p&gt;
&lt;p&gt;​							 换解码方式：encoding=&#39; GBK&#39;  或 ‘utf-8’&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;standalone：是否独立        standalone = &#39;yes&#39;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;取值：
&lt;ul&gt;
&lt;li&gt;yes：不依赖其他文件&lt;/li&gt;
&lt;li&gt;no：依赖其他文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;指令 (了解)：结合 css 的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;?xml-stylesheet type=&amp;quot;text/css&amp;quot; href=&amp;quot;a.css&amp;quot; ?&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;标签：标签名称自定义的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;规则：
&lt;ul&gt;
&lt;li&gt;名称可以包含字母、数字以及其他的字符&lt;/li&gt;
&lt;li&gt;名称不能以数字或者标点符号开始&lt;/li&gt;
&lt;li&gt;名称不能以字母 xml（或者 XML、Xml 等等）开始&lt;/li&gt;
&lt;li&gt;名称不能包含空格&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;属性：&lt;br /&gt;
id 属性值唯一   ，单双引号都可以引起来&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文本：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;CDATA 区&lt;/strong&gt;&lt;/em&gt;：在该区域中的数据会被原样展示&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;格式：  &amp;lt;![CDATA [ 数据]]&amp;gt;**&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;约束：规定 xml 文档的书写规则&lt;br /&gt;
​			* 作为框架的使用者 (程序员)：&lt;br /&gt;
​				1. 能够在 xml 中引入约束文档&lt;br /&gt;
​				2. 能够简单的读懂约束文档&lt;br /&gt;
​&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分类：
&lt;ol&gt;
&lt;li&gt;DTD: 一种简单的约束技术&lt;/li&gt;
&lt;li&gt;Schema: 一种复杂的约束技术&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;dtd&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dtd&#34;&gt;#&lt;/a&gt; DTD&lt;/h2&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;引入dtd文档到xml文档中&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; 内部dtd：将约束规则定义在xml文档中&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; 外部dtd：将约束的规则定义在外部的dtd文件中&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		 本地：&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;根标签名&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;dtd文件的位置&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		 网络：&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;根标签名&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;PUBLIC&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;dtd文件名字&#34;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;dtd文件的位置URL&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;schema&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#schema&#34;&gt;#&lt;/a&gt; Schema&lt;/h2&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;* 引入：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	1.填写xml文档的根元素&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	2.引入xsi前缀.  xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	3.引入xsd文件命名空间.  xsi:schemaLocation=&#34;http://www.itcast.cn/xml  student.xsd&#34;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	4.为每一个xsd约束声明一个前缀,作为标识  xmlns=&#34;http://www.itcast.cn/xml&#34; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;students&lt;/span&gt;   &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;xmlns:&lt;/span&gt;xsi&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;http://www.w3.org/2001/XMLSchema-instance&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token attr-name&#34;&gt;xmlns&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;http://www.itcast.cn/xml&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;xsi:&lt;/span&gt;schemaLocation&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;http://www.itcast.cn/xml  student.xsd&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	&lt;img data-src=&#34;../pictures/xml-Tomcat/image-20230815072655929.png&#34; alt=&#34;image-20230815072655929&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;解析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解析&#34;&gt;#&lt;/a&gt; 解析&lt;/h2&gt;
&lt;p&gt;操作 xml 文档，将文档中的数据读取到内存中&lt;br /&gt;
 * 操作 xml 文档&lt;br /&gt;
 1. 解析 (读取)：将文档中的数据读取到内存中&lt;br /&gt;
 2. 写入：将内存中的数据保存到 xml 文档中。持久化的存储&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解析 xml 的方式：
&lt;ol&gt;
&lt;li&gt;DOM：将标记语言文档一次性加载进内存，在内存中形成一颗 dom 树
&lt;ul&gt;
&lt;li&gt;优点：操作方便，可以对文档进行 CRUD 的所有操作&lt;/li&gt;
&lt;li&gt;缺点：占内存&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SAX：逐行读取，基于事件驱动的。
&lt;ul&gt;
&lt;li&gt;优点：不占内存。&lt;/li&gt;
&lt;li&gt;缺点：只能读取，不能增删改&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;xml常见的解析器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xml常见的解析器&#34;&gt;#&lt;/a&gt; xml 常见的解析器&lt;/h1&gt;
&lt;p&gt;Jsoup：jsoup 是一款 Java 的 HTML 解析器，可直接解析某个 URL 地址、HTML 文本内容。它提供了一套非常省力的 API，可通过 DOM，CSS 以及类似于 jQuery 的操作方法来取出和操作数据。&lt;/p&gt;
&lt;h1 id=&#34;jsoup&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jsoup&#34;&gt;#&lt;/a&gt; Jsoup&lt;/h1&gt;
&lt;h2 id=&#34;快速入门&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#快速入门&#34;&gt;#&lt;/a&gt; 快速入门&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;导入 jar 包&lt;/li&gt;
&lt;li&gt;获取 Document 对象&lt;/li&gt;
&lt;li&gt;获取对应的标签 Element 对象&lt;/li&gt;
&lt;li&gt;获取数据&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对象的使用：&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;1. Jsoup：工具类，可以解析html或xml文档，返回Document&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    * parse：解析html或xml文档，返回Document&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    * parse(File in, String charsetName)：解析xml或html文件的。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * parse(String html)：解析xml或html字符串&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * parse(URL url, int timeoutMillis)：通过网络路径获取指定的html或xml的文档对象&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;2. Document：文档对象。代表内存中的dom树&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    * 获取Element对象&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * getElementById(String id)：根据id属性值获取唯一的element对象&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * getElementsByTag(String tagName)：根据标签名称获取元素对象集合&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * getElementsByAttribute(String key)：根据属性名称获取元素对象集合&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * getElementsByAttributeValue(String key, String value)：根据对应的属性名和属性值获取元素对象集合&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;3. Elements：元素Element对象的集合。可以当做 ArrayList&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;Element&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;来使用&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;4. Element：元素对象&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   1. 获取子元素对象&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      * getElementById(String id)：根据id属性值获取唯一的element对象&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      * getElementsByTag(String tagName)：根据标签名称获取元素对象集合&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      * getElementsByAttribute(String key)：根据属性名称获取元素对象集合&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      * getElementsByAttributeValue(String key, String value)：根据对应的属性名和属性值获取元素对象集合&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   2. 获取属性值&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      1. String attr(String key)：根据属性名称获取属性值&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      2. 获取文本内容&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         * String text():获取文本内容&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         * String html():获取标签体的所有内容(包括字标签的字符串内容)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; 5. Node：节点对象&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      * 是Document和Element的父类&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;h2 id=&#34;快捷查询方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#快捷查询方式&#34;&gt;#&lt;/a&gt; 快捷查询方式&lt;/h2&gt;
&lt;p&gt;selector: 选择器&lt;br /&gt;
使用的方法：Elements	select (String cssQuery)&lt;/p&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;1.获取student.xml的path&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	 String path = JsoupDemo6.class.getClassLoader().getResource(&#34;student.xml&#34;).getPath();&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;2.获取Document对象&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	Document document = Jsoup.parse(new File(path), &#34;utf-8&#34;);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;3.根据document对象，创建JXDocument对象&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	JXDocument jxDocument = new JXDocument(document);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;4.结合xpath语法查询&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	4.1查询所有student标签&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	List&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;JXNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; jxNodes = jxDocument.selN(&#34;//student&#34;);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	for (JXNode jxNode : jxNodes) &amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		  System.out.println(jxNode);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    * 语法：参考Selector类中定义的语法&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	   2. XPath：XPath即为XML路径语言，它是一种用来确定XML（标准通用标记语言的子集）文档中某部分位置的语言&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		* 使用Jsoup的Xpath需要额外导入jar包。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		* 查询w3cshool参考手册，使用xpath的语法完成查询&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	  4.2查询所有student标签下的name标签&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	  List&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;JXNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; jxNodes2 = jxDocument.selN(&#34;//student/name&#34;);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	  for (JXNode jxNode : jxNodes2) &amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	      System.out.println(jxNode);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	   &amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	  4.3查询student标签下带有id属性的name标签&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	   List&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;JXNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; jxNodes3 = jxDocument.selN(&#34;//student/name[@id]&#34;);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	   for (JXNode jxNode : jxNodes3) &amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	      system.out.println(jxNode);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	    &amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	    4.4查询student标签下带有id属性的name标签 并且id属性值为itcast&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	    List&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;JXNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; jxNodes4 = jxDocument.selN(&#34;//student/name[@id=&#39;itcast&#39;]&#34;);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	    for (JXNode jxNode : jxNodes4) &amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        system.out.println(jxNode);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	    &amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​&lt;/p&gt;
&lt;h1 id=&#34;web服务器软件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web服务器软件&#34;&gt;#&lt;/a&gt; web 服务器软件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;服务器：安装了服务器软件的计算机&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;服务器软件：接收用户的请求，处理请求，做出响应&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;web 服务器软件：接收用户的请求，处理请求，做出响应。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 web 服务器软件中，可以部署 web 项目，让用户通过浏览器来访问这些项目&lt;/li&gt;
&lt;li&gt;web 容器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常见的 java 相关的 web 服务器软件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;webLogic：oracle 公司，大型的 JavaEE 服务器，支持所有的 JavaEE 规范，收费的。&lt;/li&gt;
&lt;li&gt;webSphere：IBM 公司，大型的 JavaEE 服务器，支持所有的 JavaEE 规范，收费的。&lt;/li&gt;
&lt;li&gt;JBOSS：JBOSS 公司的，大型的 JavaEE 服务器，支持所有的 JavaEE 规范，收费的。&lt;/li&gt;
&lt;li&gt;Tomcat：Apache 基金组织，中小型的 JavaEE 服务器，仅仅支持少量的 JavaEE 规范 servlet/jsp。开源的，免费的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​			JavaEE：Java 语言在企业级开发中使用的技术规范的总和，一共规定了 13 项大的规范&lt;/p&gt;
&lt;h1 id=&#34;tomcat&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tomcat&#34;&gt;#&lt;/a&gt; Tomcat&lt;/h1&gt;
&lt;h2 id=&#34;下载&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#下载&#34;&gt;#&lt;/a&gt; 下载&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;下载：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3RvbWNhdC5hcGFjaGUub3JnLw==&#34;&gt;http://tomcat.apache.org/&lt;/span&gt;
&lt;ol&gt;
&lt;li&gt;安装：解压压缩包即可。			安装目录建议不要有中文和空格&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;卸载：删除目录就行了&lt;/li&gt;
&lt;li&gt;启动：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;bin/startup.bat , 双击运行该文件即可&lt;/li&gt;
&lt;li&gt;访问：浏览器输入：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDo4MDgw&#34;&gt;http://localhost:8080&lt;/span&gt; 回车访问自己&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​			  &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1pcC1zYjNjbjlrbDUzZDo4MDgw&#34;&gt;http:// 别人的 ip:8080&lt;/span&gt; 访问别人&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可能遇到的问题：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;1. 黑窗口一闪而过：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	 原因： 没有正确配置JAVA_HOME环境变量&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	 解决方案：正确配置JAVA_HOME环境变量&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;2. 启动报错：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	1. 暴力：找到占用的端口号，并且找到对应的进程，杀死该进程&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		* netstat -ano&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	2. 温柔：修改自身的端口号&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		 conf/server.xml&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;Connector&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;8888&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;HTTP/1.1&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;             &lt;span class=&#34;token attr-name&#34;&gt;connectionTimeout&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;20000&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;             &lt;span class=&#34;token attr-name&#34;&gt;redirectPort&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;8445&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		 一般会将tomcat的默认端口号修改为80。80端口号是http协议的默认端口号。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			* 好处：在访问时，就不用输入端口号&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;关闭：&lt;/p&gt;
&lt;p&gt;正常关闭：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bin/shutdown.bat&lt;/li&gt;
&lt;li&gt;ctrl+c&lt;br /&gt;
 强制关闭：点击启动窗口的 ×&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置&#34;&gt;#&lt;/a&gt; 配置&lt;/h2&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;部署项目的方式&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;1. 直接将项目放到webapps目录下即可。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	* /hello：项目的访问路径--&gt;虚拟目录&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	* 简化部署：将项目打成一个war包，再将war包放置到webapps目录下。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		* war包会自动解压缩&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;2. 配置conf/server.xml文件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	在&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;Host&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;标签体中配置&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;Context&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;docBase&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;D:\hello&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;/hehe&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	* docBase:项目存放的路径&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	* path：虚拟目录&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;3. 在conf\Catalina\localhost创建任意名称的xml文件。在文件中编写&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;Context&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;docBase&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;D:\hello&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	* 虚拟目录：xml文件的名称&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;静态项目和动态项目：&lt;/li&gt;
&lt;li&gt;目录结构&lt;br /&gt;
 java 动态项目的目录结构：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;-- 项目的根目录&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		-- WEB-INF目录：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		-- web.xml：web项目的核心配置文件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		-- classes目录：放置字节码文件的目录&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		-- lib目录：放置依赖的jar包&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​		* 将 Tomcat 集成到 IDEA 中，并且创建 JavaEE 的项目，部署项目。&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;h1 id=&#34;idea与tomcat的相关配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#idea与tomcat的相关配置&#34;&gt;#&lt;/a&gt; IDEA 与 tomcat 的相关配置&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;IDEA 会为每一个 tomcat 部署的项目单独建立一份配置文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看控制台的 log：Using CATALINA_BASE:   &amp;quot;C:\Users\fqy.IntelliJIdea2018.1\system\tomcat_itcast&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;工作空间项目    和     tomcat 部署的 web 项目&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tomcat 真正访问的是 “tomcat 部署的 web 项目”，&amp;quot;tomcat 部署的 web 项目&amp;quot; 对应着 &amp;quot;工作空间项目&amp;quot; 的 web 目录下的所有资源&lt;/li&gt;
&lt;li&gt;WEB-INF 目录下的资源不能被浏览器直接访问。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;断点调试：使用 &amp;quot;小虫子&amp;quot; 启动 dubug 启动&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="JavaWeb" scheme="https://jihaipeng123.github.io/categories/JavaWeb/" />
        <updated>2023-08-14T23:20:44.000Z</updated>
    </entry>
    <entry>
        <id>https://jihaipeng123.github.io/4JavaScript/</id>
        <title>4.JavaScript</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/4JavaScript/"/>
        <content type="html">&lt;h1 id=&#34;javascript基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#javascript基础&#34;&gt;#&lt;/a&gt; JavaScript 基础&lt;/h1&gt;
&lt;h2 id=&#34;概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;p&gt;一门客户端脚本语言&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行在客户端浏览器中的。每一个浏览器都有 JavaScript 的解析引擎&lt;/li&gt;
&lt;li&gt;脚本语言：不需要编译，直接就可以被浏览器解析执行了&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#功能&#34;&gt;#&lt;/a&gt; 功能&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可以来增强用户和 html 页面的交互过程，可以来控制 html 元素，让页面有一些动态的效果，增强用户的体验。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;javascript发展史&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#javascript发展史&#34;&gt;#&lt;/a&gt; JavaScript 发展史&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;1992 年，Nombase 公司，开发出第一门客户端脚本语言，专门用于表单的校验。命名为 ： C--	，后来更名为：ScriptEase&lt;/li&gt;
&lt;li&gt;1995 年，Netscape (网景) 公司，开发了一门客户端脚本语言：LiveScript。后来，请来 SUN 公司的专家，修改 LiveScript，命名为 JavaScript&lt;/li&gt;
&lt;li&gt;1996 年，微软抄袭 JavaScript 开发出 JScript 语言&lt;/li&gt;
&lt;li&gt;1997 年，ECMA (欧洲计算机制造商协会)，制定出客户端脚本语言的标准：ECMAScript，就是统一了所有客户端脚本语言的编码方式。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;JavaScript = ECMAScript + JavaScript 自己特有的东西 (BOM+DOM)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;ecmascript客户端脚本语言的标准&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ecmascript客户端脚本语言的标准&#34;&gt;#&lt;/a&gt; ECMAScript：客户端脚本语言的标准&lt;/h1&gt;
&lt;h2 id=&#34;基本语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本语法&#34;&gt;#&lt;/a&gt; 基本语法&lt;/h2&gt;
&lt;h3 id=&#34;与html结合方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#与html结合方式&#34;&gt;#&lt;/a&gt; 与 html 结合方式&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;内部 JS：&lt;br /&gt;
定义 &amp;lt;script&amp;gt;，标签体内容就是 js 代码&lt;/li&gt;
&lt;li&gt;外部 JS：&lt;br /&gt;
定义 &amp;lt;script&amp;gt;，通过 src 属性引入外部的 js 文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意&lt;/p&gt;
&lt;p&gt;&amp;lt;script&amp;gt; 可以定义在 html 页面的任何地方。但是定义的位置会影响执行顺序。&lt;br /&gt;
&amp;lt;script&amp;gt; 可以定义多个。&lt;/p&gt;
&lt;h3 id=&#34;注释&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注释&#34;&gt;#&lt;/a&gt; 注释&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;单行注释：// 注释内容&lt;/li&gt;
&lt;li&gt;多行注释：/&lt;em&gt; 注释内容&lt;/em&gt; /&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;数据类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据类型&#34;&gt;#&lt;/a&gt; 数据类型&lt;/h3&gt;
&lt;p&gt;​	1. 原始数据类型 (基本数据类型)：&lt;br /&gt;
​			1. number：数字。 整数 / 小数 / NaN (not a number 一个不是数字的数字类型)&lt;br /&gt;
​			2. string：字符串。 字符串  &amp;quot;abc&amp;quot; &amp;quot;a&amp;quot; &#39;abc&#39;&lt;br /&gt;
​			3. boolean: true 和 false&lt;br /&gt;
​			4. null：一个对象为空的占位符&lt;br /&gt;
​			5. undefined：未定义。如果一个变量没有给初始化值，则会被默认赋值 undefined&lt;br /&gt;
​	2. 引用数据类型：对象&lt;/p&gt;
&lt;h3 id=&#34;变量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#变量&#34;&gt;#&lt;/a&gt; 变量&lt;/h3&gt;
&lt;p&gt;变量：一小块存储数据的内存空间&lt;br /&gt;
 Java 语言是强类型语言，而 JavaScript 是弱类型语言。&lt;br /&gt;
强类型：在开辟变量存储空间时，定义了空间将来存储的数据的数据类型。只能存储固定类型的数据&lt;br /&gt;
弱类型：在开辟变量存储空间时，不定义空间将来的存储数据类型，可以存放任意类型的数据。&lt;br /&gt;
语法：&lt;br /&gt;
var 变量名 = 初始化值；&lt;br /&gt;
typeof 运算符：获取变量的类型。&lt;br /&gt;
注：null 运算后得到的是 object&lt;/p&gt;
&lt;h3 id=&#34;运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#运算符&#34;&gt;#&lt;/a&gt; 运算符&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;一元运算符：只有一个运算数的运算符&lt;br /&gt;
 ++，-- ， +(正号)&lt;br /&gt;
++ --: 自增 (自减)&lt;br /&gt;
++(--) 在前，先自增 (自减)，再运算&lt;br /&gt;
 ++(--) 在后，先运算，再自增 (自减)&lt;br /&gt;
+(-)：正负号&lt;br /&gt;
注意：在 JS 中，如果运算数不是运算符所要求的类型，那么 js 引擎会自动的将运算数进行类型转换&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他类型转 number：&lt;br /&gt;
string 转 number：按照字面值转换。如果字面值不是数字，则转为 NaN（不是数字的数字）&lt;br /&gt;
boolean 转 number：true 转为 1，false 转为 0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;算数运算符&lt;br /&gt;
 / % + - *&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;赋值运算符&lt;br /&gt;
 = += -+....&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;比较运算符&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;&amp;gt;= &amp;lt;= == ===(全等于)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;比较方式&lt;br /&gt;
 1. 类型相同：直接比较&lt;br /&gt;
 * 字符串：按照字典顺序比较。按位逐一比较，直到得出大小为止。&lt;br /&gt;
2. 类型不同：先进行类型转换，再比较&lt;br /&gt;
 * ===：全等于。在比较之前，先判断类型，如果类型不一样，则直接返回 false&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;逻辑运算符&lt;br /&gt;
 &amp;amp;&amp;amp; || !&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;其他类型转 boolean：&lt;br /&gt;
1. number：0 或 NaN 为假，其他为真&lt;br /&gt;
 2. string：除了空字符串 (&amp;quot;&amp;quot;)，其他都是 true&lt;br /&gt;
3. null&amp;amp;undefined: 都是 false&lt;br /&gt;
4. 对象：所有对象都为 true&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;三元运算符&lt;br /&gt;
？: 表达式&lt;br /&gt;
 var a = 3;&lt;br /&gt;
var b = 4;&lt;br /&gt;
var c = a &amp;gt; b ? 1:0;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法：&lt;br /&gt;
表达式？值 1: 值 2;&lt;br /&gt;
 判断表达式的值，如果是 true 则取值 1，如果是 false 则取值 2；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;流程控制语句：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;if...else...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;switch:&lt;/p&gt;
&lt;p&gt;在 java 中，switch 语句可以接受的数据类型： byte int shor char, 枚举 (1.5) ,String (1.7)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;switch (变量):&lt;/p&gt;
&lt;p&gt;case 值:&lt;/p&gt;
&lt;p&gt;在 JS 中，switch 语句可以接受任意的原始数据类型&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;while&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;do...while&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;for&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JS 特殊语法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;语句以；结尾，如果一行只有一条语句则；可以省略 (不建议)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;变量的定义使用 var 关键字，也可以不使用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;用： 定义的变量是局部变量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不用：定义的变量是全局变量 (不建议)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;练习：99 乘法表&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DOCTYPE&lt;/span&gt; html&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;html lang&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;en&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;meta charset&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;UTF-8&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;99&lt;/span&gt;乘法表&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;title&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;style&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	      td&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	          &lt;span class=&#34;token literal-property property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; 1px solid&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	       &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;style&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;table  align=&#39;center&#39;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;//1. 完成基本的 for 循环嵌套，展示乘法表&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;tr&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; j &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; j &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt;i &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; j&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;td&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;       &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 输出  1 * 1 = 1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34; * &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; j &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34; = &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;/td&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    	&lt;span class=&#34;token comment&#34;&gt;/*// 输出换行&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    	document.write (&#34;&amp;lt;br&gt;&#34;);*/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   		 document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;/tr&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token comment&#34;&gt;//2. 完成表格嵌套&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;/table&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; 	&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;script&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;head&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;body&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;html&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;基本对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本对象&#34;&gt;#&lt;/a&gt; 基本对象&lt;/h2&gt;
&lt;h3 id=&#34;function函数方法对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#function函数方法对象&#34;&gt;#&lt;/a&gt; Function：函数 (方法) 对象&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建&lt;/p&gt;
&lt;p&gt;var fun = new Function (形式参数列表，方法体);  // 忘掉吧&lt;/p&gt;
&lt;p&gt;function 方法名称 (形式参数列表){&lt;br /&gt;
方法体&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;var 方法名 = function (形式参数列表){&lt;/p&gt;
&lt;p&gt;​			方法体&lt;br /&gt;
​		}&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​	属性：length: 代表形参的个数&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;特点：
&lt;ol&gt;
&lt;li&gt;方法定义是，形参的类型不用写，返回值类型也不写。&lt;/li&gt;
&lt;li&gt;方法是一个对象，如果定义名称相同的方法，会覆盖&lt;/li&gt;
&lt;li&gt;在 JS 中，方法的调用只与方法的名称有关，和参数列表无关&lt;/li&gt;
&lt;li&gt;在方法声明中有一个隐藏的内置对象（数组），arguments, 封装所有的实际参数&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;调用：&lt;br /&gt;
方法名称 (实际参数列表);&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;array数组对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#array数组对象&#34;&gt;#&lt;/a&gt; Array: 数组对象&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;创建：
&lt;ol&gt;
&lt;li&gt;var arr = new Array (元素列表);&lt;/li&gt;
&lt;li&gt;var arr = new Array (默认长度);&lt;/li&gt;
&lt;li&gt;var arr = [元素列表];&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;方法&lt;br /&gt;
 join (参数): 将数组中的元素按照指定的分隔符拼接为字符串&lt;br /&gt;
 push ()	向数组的末尾添加一个或更多元素，并返回新的长度。&lt;/li&gt;
&lt;li&gt;属性&lt;br /&gt;
 length: 数组的长度&lt;/li&gt;
&lt;li&gt;特点：
&lt;ol&gt;
&lt;li&gt;JS 中，数组元素的类型可变的。&lt;/li&gt;
&lt;li&gt;JS 中，数组长度可变的。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;boolean&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#boolean&#34;&gt;#&lt;/a&gt; Boolean&lt;/h3&gt;
&lt;h3 id=&#34;date日期对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#date日期对象&#34;&gt;#&lt;/a&gt; Date：日期对象&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建：&lt;br /&gt;
var date = new Date();&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方法：&lt;br /&gt;
toLocaleString ()：返回当前 date 对象对应的时间本地字符串格式&lt;br /&gt;
 getTime (): 获取毫秒值。返回当前如期对象描述的时间到 1970 年 1 月 1 日零点的毫秒值差&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;math数学对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#math数学对象&#34;&gt;#&lt;/a&gt; Math：数学对象&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特点：Math 对象不用创建，直接使用。  Math. 方法名 ();&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方法：&lt;br /&gt;
random (): 返回 0 ~ 1 之间的随机数。 含 0 不含 1&lt;br /&gt;
ceil (x)：对数进行上舍入。&lt;br /&gt;
floor (x)：对数进行下舍入。&lt;br /&gt;
round (x)：把数四舍五入为最接近的整数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;属性：&lt;br /&gt;
PI&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;number&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#number&#34;&gt;#&lt;/a&gt; Number&lt;/h3&gt;
&lt;h3 id=&#34;string&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#string&#34;&gt;#&lt;/a&gt; String&lt;/h3&gt;
&lt;h3 id=&#34;regexp正则表达式对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#regexp正则表达式对象&#34;&gt;#&lt;/a&gt; RegExp：正则表达式对象&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;正则表达式：定义字符串的组成规则。&lt;/p&gt;
&lt;p&gt;单个字符:[]&lt;/p&gt;
&lt;p&gt;如： [a] [ab] [a-zA-Z0-9_]&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;特殊符号代表特殊含义的单个字符:&lt;br /&gt;
\d: 单个数字字符 [0-9]			\w: 单个单词字符 [a-zA-Z0-9_]&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;量词符号：&lt;br /&gt;
?：表示出现 0 次或 1 次&lt;br /&gt;
 *：表示出现 0 次或多次&lt;br /&gt;
 +：出现 1 次或多次&lt;br /&gt;
 {m,n}: 表示 m&amp;lt;= 数量 &amp;lt;= n
&lt;ul&gt;
&lt;li&gt;m 如果缺省： {,n}: 最多 n 次&lt;/li&gt;
&lt;li&gt;n 如果缺省：{m,} 最少 m 次&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;开始结束符号
&lt;ul&gt;
&lt;li&gt;^: 开始&lt;/li&gt;
&lt;li&gt;$: 结束&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;正则对象：&lt;/li&gt;
&lt;li&gt;创建
&lt;ol&gt;
&lt;li&gt;var reg = new RegExp (&amp;quot;正则表达式&amp;quot;);&lt;/li&gt;
&lt;li&gt;var reg = / 正则表达式 /;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;方法
&lt;ol&gt;
&lt;li&gt;test (参数): 验证指定的字符串是否符合正则定义的规范&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;global&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#global&#34;&gt;#&lt;/a&gt; Global&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;特点：全局对象，这个 Global 中封装的方法不需要对象就可以直接调用。  方法名 ();&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方法：&lt;br /&gt;
encodeURI ():url 编码&lt;br /&gt;
 decodeURI ():url 解码&lt;/p&gt;
&lt;p&gt;encodeURIComponent ():url 编码，编码的字符更多&lt;br /&gt;
 decodeURIComponent ():url 解码&lt;/p&gt;
&lt;p&gt;parseInt (): 将字符串转为数字&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;逐一判断每一个字符是否是数字，直到不是数字为止，将前边数字部分转为 number&lt;br /&gt;
isNaN (): 判断一个值是否是 NaN&lt;/li&gt;
&lt;li&gt;NaN 六亲不认，连自己都不认。NaN 参与的 == 比较全部问 false&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eval (): 讲 JavaScript 字符串，并把它作为脚本代码来执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;URL 编码&lt;br /&gt;
传智播客 =  % E4% BC% A0% E6%99% BA% E6%92% AD% E5% AE% A2&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;超链接功能：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;可以被点击；不加href看不到超链接的样式&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;2.&lt;/span&gt;点击之后跳转到href指定的url&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;dom简单学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dom简单学习&#34;&gt;#&lt;/a&gt; DOM 简单学习&lt;/h1&gt;
&lt;p&gt;为了满足案例要求&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;功能：控制 html 文档的内容&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取页面标签 (元素) 对象：Element&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;document.getElementById (&amp;quot;id 值&amp;quot;): 通过元素的 id 获取元素对象&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;操作 Element 对象：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;修改属性值：&lt;/p&gt;
&lt;p&gt;​			1 明确获取的对象是哪一个？&lt;/p&gt;
&lt;p&gt;​			2  查看 API 文档，找其中有哪些属性可以设置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改标签体内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;属性：innerHTML&lt;/p&gt;
&lt;p&gt;​		获取元素对象&lt;/p&gt;
&lt;p&gt;​	使用 innerHTML 属性修改标签体内容&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;事件简单学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事件简单学习&#34;&gt;#&lt;/a&gt; 事件简单学习&lt;/h1&gt;
&lt;p&gt;功能： 某些组件被执行了某些操作后，触发某些代码的执行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;造句：  xxx 被 xxx, 我就 xxx
&lt;ul&gt;
&lt;li&gt;我方水晶被摧毁后，我就责备对友。&lt;/li&gt;
&lt;li&gt;敌方水晶被摧毁后，我就夸奖自己。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;绑定事件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绑定事件&#34;&gt;#&lt;/a&gt; 绑定事件&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;直接在 html 标签上，指定事件的属性 (操作)，属性值就是 js 代码&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;事件：&lt;em&gt;onclick-&lt;/em&gt;-- 单击事件&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过 js 获取元素对象，指定事件属性，设置一个函数&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;案例电灯开关&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例电灯开关&#34;&gt;#&lt;/a&gt; 案例：电灯开关&lt;/h2&gt;
&lt;p&gt;（见练习题）&lt;/p&gt;
&lt;h1 id=&#34;bom浏览器对象模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bom浏览器对象模型&#34;&gt;#&lt;/a&gt; BOM: 浏览器对象模型&lt;/h1&gt;
&lt;h2 id=&#34;概念-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念-2&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;p&gt;Browser Object Model 浏览器对象模型&lt;/p&gt;
&lt;p&gt;将浏览器的各个组成部分封装成对象。&lt;/p&gt;
&lt;h2 id=&#34;组成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#组成&#34;&gt;#&lt;/a&gt; 组成&lt;/h2&gt;
&lt;p&gt;Window：窗口对象&lt;/p&gt;
&lt;p&gt;Screen：显示器屏幕对象&lt;/p&gt;
&lt;p&gt;History：历史记录对象&lt;/p&gt;
&lt;p&gt;Location：地址栏对象&lt;/p&gt;
&lt;p&gt;Navigator：浏览器对象&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/JavaScript/image-20230814222410072.png&#34; alt=&#34;image-20230814222410072&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;window窗口对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#window窗口对象&#34;&gt;#&lt;/a&gt; Window: 窗口对象&lt;/h2&gt;
&lt;h3 id=&#34;与弹出框有关的方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#与弹出框有关的方法&#34;&gt;#&lt;/a&gt; 与弹出框有关的方法&lt;/h3&gt;
&lt;p&gt;​	&lt;em&gt;&lt;strong&gt;alert()&lt;/strong&gt;&lt;/em&gt;	显示带有一段消息和一个确认按钮的警告框。&lt;br /&gt;
&lt;em&gt;&lt;strong&gt;confirm()&lt;/strong&gt;&lt;/em&gt;	显示带有一段消息以及确认按钮和取消按钮的对话框。&lt;/p&gt;
&lt;p&gt;​				如果用户点击确定按钮，则方法返回 true&lt;/p&gt;
&lt;p&gt;​				如果用户点击取消按钮，则方法返回 false&lt;br /&gt;
​	&lt;em&gt;&lt;strong&gt;prompt()&lt;/strong&gt;&lt;/em&gt;	显示可提示用户输入的对话框。&lt;/p&gt;
&lt;p&gt;​				返回值：获取用户输入的值&lt;/p&gt;
&lt;p&gt;​				与打开关闭有关的方法：&lt;br /&gt;
&lt;em&gt;&lt;strong&gt;close()&lt;/strong&gt;&lt;/em&gt;	关闭浏览器窗口。&lt;/p&gt;
&lt;p&gt;​				谁调用我 ，我关谁&lt;br /&gt;
&lt;em&gt;&lt;strong&gt; open ()&lt;/strong&gt;&lt;/em&gt;	打开一个新的浏览器窗口&lt;/p&gt;
&lt;p&gt;​				返回新的 Window 对象&lt;/p&gt;
&lt;h3 id=&#34;与定时器有关的方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#与定时器有关的方式&#34;&gt;#&lt;/a&gt; 与定时器有关的方式&lt;/h3&gt;
&lt;p&gt;​		&lt;em&gt;&lt;strong&gt;setTimeout()&lt;/strong&gt;&lt;/em&gt;	在指定的毫秒数后调用函数或计算表达式。&lt;/p&gt;
&lt;p&gt;​			参数：&lt;/p&gt;
&lt;p&gt;​				js 代码或者方法对象&lt;/p&gt;
&lt;p&gt;​				毫秒值&lt;/p&gt;
&lt;p&gt;​		返回值：唯一标识，用于取消定时器&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;clearTimeout()&lt;/strong&gt;&lt;/em&gt;	取消由 setTimeout () 方法设置的 timeout。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;setInterval()&lt;/strong&gt;&lt;/em&gt;	按照指定的周期（以毫秒计）来调用函数或计算表达式。&lt;br /&gt;
&lt;em&gt;&lt;strong&gt;clearInterval()&lt;/strong&gt;&lt;/em&gt;	取消由 setInterval () 设置的 timeout。&lt;/p&gt;
&lt;h3 id=&#34;属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#属性&#34;&gt;#&lt;/a&gt; 属性&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;获取其他 BOM 对象：&lt;br /&gt;
history&lt;br /&gt;
location&lt;br /&gt;
Navigator&lt;br /&gt;
Screen:&lt;/li&gt;
&lt;li&gt;获取 DOM 对象&lt;br /&gt;
 document&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#特点&#34;&gt;#&lt;/a&gt; 特点&lt;/h3&gt;
&lt;p&gt;​			Window 对象不需要创建可以直接使用 window 使用。 window. 方法名 ();&lt;/p&gt;
&lt;p&gt;​			window 引用可以省略。  方法名 ();   例如：alert（）；&lt;/p&gt;
&lt;h2 id=&#34;location地址栏对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#location地址栏对象&#34;&gt;#&lt;/a&gt; Location: 地址栏对象&lt;/h2&gt;
&lt;p&gt;​       1. 创建 (获取)：&lt;/p&gt;
&lt;p&gt;​				window.location&lt;/p&gt;
&lt;p&gt;​				location&lt;/p&gt;
&lt;p&gt;​		2. 方法：&lt;/p&gt;
&lt;p&gt;​				&lt;em&gt;&lt;strong&gt;reload()&lt;/strong&gt;&lt;/em&gt;	重新加载当前文档。刷新   &lt;em&gt;&lt;strong&gt;location.relode();&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;​		3. 属性&lt;/p&gt;
&lt;p&gt;​				&lt;em&gt;&lt;strong&gt;href&lt;/strong&gt;&lt;/em&gt;	设置或返回完整的 URL 路径。  &lt;em&gt;&lt;strong&gt;location.href = &amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5pdGNhc3QuY24=&#34;&gt;http://www.itcast.cn&lt;/span&gt;&amp;quot;;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;history历史记录对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#history历史记录对象&#34;&gt;#&lt;/a&gt; History: 历史记录对象&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建 (获取)：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;window.history&lt;/li&gt;
&lt;li&gt;history&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;back ()	加载 history 列表中的前一个 URL。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;forward ()	加载 history 列表中的下一个 URL。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;go (参数)	加载 history 列表中的某个具体页面。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;参数：&lt;/p&gt;
&lt;p&gt;​	正数：前进几个历史记录&lt;/p&gt;
&lt;p&gt;​	负数：后退几个历史记录&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;属性：&lt;/p&gt;
&lt;p&gt;​           length	返回当前窗口历史列表中的 URL 数量。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;dom文档对象模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dom文档对象模型&#34;&gt;#&lt;/a&gt; DOM: 文档对象模型&lt;/h1&gt;
&lt;p&gt;概念： Document Object Model&lt;/p&gt;
&lt;p&gt;​					将标记语言文档的各个组成部分，封装为对象。可以使用这些对象，对标记语言文档进行 CRUD 的动态操作&lt;/p&gt;
&lt;p&gt;W3C DOM 标准被分为 3 个不同的部分：&lt;/p&gt;
&lt;p&gt;​		1. 核心 DOM - 针对任何结构化文档的标准模型&lt;/p&gt;
&lt;p&gt;​					Document：文档对象&lt;/p&gt;
&lt;p&gt;​					Element：元素对象&lt;/p&gt;
&lt;p&gt;​					Attribute：属性对象&lt;/p&gt;
&lt;p&gt;​					Text：文本对象&lt;/p&gt;
&lt;p&gt;​					Comment: 注释对象&lt;/p&gt;
&lt;p&gt;​					Node：节点对象，其他 5 个的父对象&lt;/p&gt;
&lt;p&gt;​		2.XML DOM - 针对 XML 文档的标准模型&lt;/p&gt;
&lt;p&gt;​		3.HTML DOM - 针对 HTML 文档的标准模型&lt;/p&gt;
&lt;h1 id=&#34;核心dom模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#核心dom模型&#34;&gt;#&lt;/a&gt; 核心 DOM 模型：&lt;/h1&gt;
&lt;h2 id=&#34;document文档对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#document文档对象&#34;&gt;#&lt;/a&gt; Document：文档对象&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建 (获取)：在 html dom 模型中可以使用 window 对象来获取&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;window.document&lt;/li&gt;
&lt;li&gt;document&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方法：&lt;/p&gt;
&lt;p&gt;a 获取 Element 对象：&lt;/p&gt;
&lt;p&gt;​			getElementById ()	： 根据 id 属性值获取元素对象。id 属性值一般唯一&lt;/p&gt;
&lt;p&gt;​			getElementsByTagName ()：根据元素名称获取元素对象们。返回值是一个数组&lt;/p&gt;
&lt;p&gt;​			getElementsByClassName (): 根据 Class 属性值获取元素对象们。返回值是一个数组&lt;/p&gt;
&lt;p&gt;​			getElementsByName (): 根据 name 属性值获取元素对象们。返回值是一个数组&lt;/p&gt;
&lt;p&gt;b 创建其他 DOM 对象：&lt;br /&gt;
createAttribute(name)&lt;br /&gt;
createComment()&lt;br /&gt;
createElement()&lt;br /&gt;
createTextNode()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;属性&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;element元素对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#element元素对象&#34;&gt;#&lt;/a&gt; Element：元素对象&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;获取 / 创建：通过 document 来获取和创建&lt;/li&gt;
&lt;li&gt;方法：
&lt;ol&gt;
&lt;li&gt;removeAttribute ()：删除属性&lt;/li&gt;
&lt;li&gt;setAttribute ()：设置属性&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;node节点对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#node节点对象&#34;&gt;#&lt;/a&gt; Node：节点对象&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;特点：所有 dom 对象都可以被认为是一个节点，，，其他 5 个的父对象&lt;/li&gt;
&lt;li&gt;方法：
&lt;ul&gt;
&lt;li&gt;CRUD (增删改查）dom 树：
&lt;ul&gt;
&lt;li&gt;appendChild ()：向节点的子节点列表的结尾添加新的子节点。&lt;/li&gt;
&lt;li&gt;removeChild ()	：删除（并返回）当前节点的指定子节点。&lt;/li&gt;
&lt;li&gt;replaceChild ()：用新节点替换一个子节点。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;属性：
&lt;ul&gt;
&lt;li&gt;parentNode 返回节点的父节点。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;html-dom&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#html-dom&#34;&gt;#&lt;/a&gt; HTML DOM&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;标签体的设置和获取：innerHTML&lt;/li&gt;
&lt;li&gt;使用 html 元素对象的属性&lt;/li&gt;
&lt;li&gt;控制元素样式
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用元素的 style 属性来设置&lt;br /&gt;
如：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;//修改样式方式1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     div1.style.border = &#34;1px solid red&#34;;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     div1.style.width = &#34;200px&#34;;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     //font-size--&gt; fontSize&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     div1.style.fontSize = &#34;20px&#34;;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;提前定义好类选择器的样式，通过元素的 className 属性来设置其 class 属性值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;事件监听机制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事件监听机制&#34;&gt;#&lt;/a&gt; 事件监听机制：&lt;/h1&gt;
&lt;h2 id=&#34;概念-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念-3&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;p&gt;某些组件被执行了某些操作后，触发某些代码的执行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;事件：某些操作。如： 单击，双击，键盘按下了，鼠标移动了&lt;/li&gt;
&lt;li&gt;事件源：组件。如： 按钮 文本输入框...&lt;/li&gt;
&lt;li&gt;监听器：代码。&lt;/li&gt;
&lt;li&gt;注册监听：将事件，事件源，监听器结合在一起。 当事件源上发生了某个事件，则触发执行某个监听器代码。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常见的事件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见的事件&#34;&gt;#&lt;/a&gt; 常见的事件&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;点击事件：
&lt;ol&gt;
&lt;li&gt;onclick：单击事件&lt;/li&gt;
&lt;li&gt;ondblclick：双击事件&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;焦点事件
&lt;ol&gt;
&lt;li&gt;onblur：失去焦点&lt;/li&gt;
&lt;li&gt;onfocus: 元素获得焦点。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;加载事件：
&lt;ol&gt;
&lt;li&gt;onload：一张页面或一幅图像完成加载。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;鼠标事件：
&lt;ol&gt;
&lt;li&gt;onmousedown	鼠标按钮被按下。&lt;/li&gt;
&lt;li&gt;onmouseup	鼠标按键被松开。&lt;/li&gt;
&lt;li&gt;onmousemove	鼠标被移动。&lt;/li&gt;
&lt;li&gt;onmouseover	鼠标移到某元素之上。&lt;/li&gt;
&lt;li&gt;onmouseout	鼠标从某元素移开。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;键盘事件：&lt;br /&gt;
1. onkeydown	某个键盘按键被按下。	&lt;br /&gt;
2. onkeyup		某个键盘按键被松开。&lt;br /&gt;
3. onkeypress	某个键盘按键被按下并松开。&lt;/li&gt;
&lt;li&gt;选择和改变&lt;br /&gt;
 1. onchange	域的内容被改变。&lt;br /&gt;
2. onselect	文本被选中。&lt;/li&gt;
&lt;li&gt;表单事件：
&lt;ol&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;onsubmit&lt;/strong&gt;&lt;/em&gt;	确认按钮被点击。&lt;/li&gt;
&lt;li&gt;onreset	重置按钮被点击。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;bootstrap&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bootstrap&#34;&gt;#&lt;/a&gt; Bootstrap&lt;/h1&gt;
&lt;h2 id=&#34;概念-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念-4&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;p&gt;一个前端开发的框架，Bootstrap，来自 Twitter，是目前很受欢迎的前端框架。Bootstrap 是基于 HTML、CSS、JavaScript 的，它简洁灵活，使得 Web 开发更加快捷。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;框架：一个半成品软件，开发人员可以在框架基础上，在进行开发，简化编码。&lt;/li&gt;
&lt;li&gt;好处：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;定义了很多的 css 样式和 js 插件。我们开发人员直接可以使用这些样式和插件得到丰富的页面效果。&lt;/p&gt;
&lt;p&gt;响应式布局。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同一套页面可以兼容不同分辨率的设备。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速入门&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载 Bootstrap&lt;/li&gt;
&lt;li&gt;在项目中将这三个文件夹复制&lt;/li&gt;
&lt;li&gt;创建 html 页面，引入必要的资源文件&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;基本框架bootstrap_hellowworld&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本框架bootstrap_hellowworld&#34;&gt;#&lt;/a&gt; 基本框架：Bootstrap_HellowWorld&lt;/h2&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;zh-CN&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;utf-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;http-equiv&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;X-UA-Compatible&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;IE=edge&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;viewport&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;width=device-width, initial-scale=1&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Bootstrap HelloWorld&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;css/bootstrap.min.css&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;stylesheet&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;js/jquery-3.2.1.min.js&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;js/bootstrap.min.js&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        你好，世界！&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;响应式布局&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#响应式布局&#34;&gt;#&lt;/a&gt; 响应式布局&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;同一套页面可以兼容不同分辨率的设备。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实现：依赖于栅格系统：将一行平均分成 12 个格子，可以指定元素占几个格子&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;定义容器。相当于之前的 table、
&lt;ul&gt;
&lt;li&gt;容器分类：
&lt;ol&gt;
&lt;li&gt;container：两边留白&lt;/li&gt;
&lt;li&gt;container-fluid：每一种设备都是 100% 宽度&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;定义行。相当于之前的 tr   样式：row&lt;/li&gt;
&lt;li&gt;定义元素。指定该元素在不同的设备上，所占的格子数目。样式：col - 设备代号 - 格子数目
&lt;ul&gt;
&lt;li&gt;设备代号：
&lt;ol&gt;
&lt;li&gt;xs：超小屏幕 手机 (&amp;lt;768px)：col-xs-12&lt;/li&gt;
&lt;li&gt;sm：小屏幕 平板 (≥768px)&lt;/li&gt;
&lt;li&gt;md：中等屏幕 桌面显示器 (≥992px)&lt;/li&gt;
&lt;li&gt;lg：大屏幕 大桌面显示器 (≥1200px)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;注意：
&lt;ol&gt;
&lt;li&gt;一行中如果格子数目超过 12，则超出部分自动换行。&lt;/li&gt;
&lt;li&gt;栅格类属性可以向上兼容。栅格类适用于与屏幕宽度大于或等于分界点大小的设备。&lt;/li&gt;
&lt;li&gt;如果真实设备宽度小于了设置栅格类属性的设备代码的最小值，会一个元素沾满一整行。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;css样式和js插件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css样式和js插件&#34;&gt;#&lt;/a&gt; CSS 样式和 JS 插件&lt;/h1&gt;
&lt;h2 id=&#34;全局css样式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#全局css样式&#34;&gt;#&lt;/a&gt; 全局 CSS 样式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;按钮：class=&amp;quot;btn btn-default&amp;quot;&lt;/li&gt;
&lt;li&gt;图片：
&lt;ul&gt;
&lt;li&gt;class=&amp;quot;img-responsive&amp;quot;：图片在任意尺寸都占 100%&lt;/li&gt;
&lt;li&gt;图片形状
&lt;ul&gt;
&lt;li&gt;&amp;lt;img src=&amp;quot;...&amp;quot; alt=&amp;quot;...&amp;quot; class=&amp;quot;img-rounded&amp;quot;&amp;gt;：方形&lt;/li&gt;
&lt;li&gt;&amp;lt;img src=&amp;quot;...&amp;quot; alt=&amp;quot;...&amp;quot; class=&amp;quot;img-circle&amp;quot;&amp;gt; ： 圆形&lt;/li&gt;
&lt;li&gt;&amp;lt;img src=&amp;quot;...&amp;quot; alt=&amp;quot;...&amp;quot; class=&amp;quot;img-thumbnail&amp;quot;&amp;gt; ：相框&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;表格
&lt;ul&gt;
&lt;li&gt;table&lt;/li&gt;
&lt;li&gt;table-bordered&lt;/li&gt;
&lt;li&gt;table-hover&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;表单
&lt;ul&gt;
&lt;li&gt;给表单项添加：class=&amp;quot;form-control&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;组件：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;导航条&lt;/li&gt;
&lt;li&gt;分页条&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;插件：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;轮播图&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;案例-见练习题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例-见练习题&#34;&gt;#&lt;/a&gt; 案例  见练习题&lt;/h2&gt;
</content>
        <category term="JavaWeb" scheme="https://jihaipeng123.github.io/categories/JavaWeb/" />
        <updated>2023-08-14T13:30:09.000Z</updated>
    </entry>
    <entry>
        <id>https://jihaipeng123.github.io/3HTML-CSS/</id>
        <title>3.HTML&amp;CSS</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/3HTML-CSS/"/>
        <content type="html">&lt;h1 id=&#34;web概念概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web概念概述&#34;&gt;#&lt;/a&gt; web 概念概述&lt;/h1&gt;
&lt;h2 id=&#34;javaweb&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#javaweb&#34;&gt;#&lt;/a&gt; JavaWeb：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;使用 Java 语言开发基于互联网的项目&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;软件架构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#软件架构&#34;&gt;#&lt;/a&gt; 软件架构：&lt;/h2&gt;
&lt;h3 id=&#34;cs-clientserver-客户端服务器端&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cs-clientserver-客户端服务器端&#34;&gt;#&lt;/a&gt; C/S: Client/Server 客户端 / 服务器端&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在用户本地有一个客户端程序，在远程有一个服务器端程序&lt;/p&gt;
&lt;p&gt;​	如：QQ，迅雷...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：  用户体验好&lt;/li&gt;
&lt;li&gt;缺点： 开发、安装，部署，维护 麻烦&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bs-browserserver-浏览器服务器端&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bs-browserserver-浏览器服务器端&#34;&gt;#&lt;/a&gt; B/S: Browser/Server 浏览器 / 服务器端&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;只需要一个浏览器，用户通过不同的网址 (URL)，客户访问不同的服务器端程序&lt;/li&gt;
&lt;li&gt;优点：
&lt;ol&gt;
&lt;li&gt;开发、安装，部署，维护 简单&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;缺点：
&lt;ol&gt;
&lt;li&gt;如果应用过大，用户的体验可能会受到影响&lt;/li&gt;
&lt;li&gt;对硬件要求过高&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;bs架构详解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bs架构详解&#34;&gt;#&lt;/a&gt; B/S 架构详解&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;资源分类（服务器端）：
&lt;ol&gt;
&lt;li&gt;静态资源：
&lt;ul&gt;
&lt;li&gt;使用静态网页开发技术发布的资源。&lt;/li&gt;
&lt;li&gt;特点：
&lt;ul&gt;
&lt;li&gt;所有用户访问，得到的结果是一样的。&lt;/li&gt;
&lt;li&gt;如：文本，图片，音频、视频，（HTML,CSS,JavaScript）&lt;/li&gt;
&lt;li&gt;如果用户请求的是静态资源，那么服务器会直接将静态资源发送给浏览器。浏览器中内置了静态资源的解析引擎，可以展示静态资源&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;动态资源：
&lt;ul&gt;
&lt;li&gt;使用动态网页技术发布的资源。&lt;/li&gt;
&lt;li&gt;特点：&lt;/li&gt;
&lt;li&gt;所有用户访问，得到的结果可能不一样。&lt;/li&gt;
&lt;li&gt;如：jsp/servlet,php,asp...&lt;/li&gt;
&lt;li&gt;如果用户请求的是动态资源，那么服务器会执行动态资源，转换为静态资源，再发送给浏览器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们要学习动态资源，必须先学习静态资源！&lt;/p&gt;
&lt;h2 id=&#34;静态资源&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#静态资源&#34;&gt;#&lt;/a&gt; 静态资源：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;HTML：用于搭建基础网页，展示页面的内容&lt;/li&gt;
&lt;li&gt;CSS：用于美化页面，布局页面&lt;/li&gt;
&lt;li&gt;JavaScript：控制页面的元素，让页面有一些动态的效果&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;html&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#html&#34;&gt;#&lt;/a&gt; HTML&lt;/h1&gt;
&lt;h2 id=&#34;概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;p&gt;​	是最基础的网页开发语言，用于搭建基础网页，展示页面的内容&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hyper Text Markup Language 超文本标记语言
&lt;ul&gt;
&lt;li&gt;超文本:
&lt;ul&gt;
&lt;li&gt;超文本是用超链接的方法，将各种不同空间的文字信息组织在一起的网状文本.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;标记语言:
&lt;ul&gt;
&lt;li&gt;由标签构成的语言。&amp;lt;标签名称&amp;gt; 如 html，xml&lt;/li&gt;
&lt;li&gt;标记语言不是编程语言&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法&#34;&gt;#&lt;/a&gt; 语法：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;html 文档后缀名 .html 或者 .htm&lt;/li&gt;
&lt;li&gt;标签分为
&lt;ol&gt;
&lt;li&gt;围堵标签：有开始标签和结束标签。如 &amp;lt;html&amp;gt; &amp;lt;/html&amp;gt;&lt;/li&gt;
&lt;li&gt;自闭和标签：开始标签和结束标签在一起。如 &amp;lt;br/&amp;gt; 换行标签&lt;/li&gt;
&lt;li&gt;标签可以嵌套：&lt;br /&gt;
需要正确嵌套，不能你中有我，我中有你 &amp;lt;a&amp;gt;&amp;lt;b&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;/a&amp;gt;&lt;/li&gt;
&lt;li&gt;在开始标签中可以定义属性。属性是由键值对构成，值需要用引号 (单双都可) 引起来&lt;/li&gt;
&lt;li&gt;html 的标签不区分大小写，但是建议使用小写。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;标签学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#标签学习&#34;&gt;#&lt;/a&gt; 标签学习：&lt;/h2&gt;
&lt;p&gt;打关键字，然后   ctrl + j   快捷出  或   Table 键&lt;/p&gt;
&lt;h3 id=&#34;文件标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件标签&#34;&gt;#&lt;/a&gt; 文件标签&lt;/h3&gt;
&lt;p&gt;构成 html 最基本的标签&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;* html:html文档的根标签&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	* head：头标签。用于指定html文档的一些属性。引入外部的资源&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	* title：标题标签。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	* body：体标签&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	* &lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;：html5中定义该文档是html文档&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;文本标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文本标签&#34;&gt;#&lt;/a&gt; 文本标签&lt;/h3&gt;
&lt;p&gt;和文本有关的标签&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;注释：&amp;lt;!-- 注释内容 --&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;标题标签: &amp;lt;h1&amp;gt; to &amp;lt;h6&amp;gt;：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;h1~h6: 字体大小逐渐递减，带换行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;段落标签: &amp;lt;p&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;换行标签  : &amp;lt;br&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;展示一条水平线 : &amp;lt;hr&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;color：颜色&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;width：宽度&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;size：高度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;align：对其方式&lt;br /&gt;
 center：居中&lt;br /&gt;
 left：左对齐&lt;br /&gt;
 right：右对齐&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;lt;b&amp;gt;：字体加粗&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;lt;i&amp;gt;：字体斜体&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;lt;font&amp;gt;: 字体标签&lt;br /&gt;
属性：&lt;br /&gt;
color：颜色&lt;br /&gt;
 size：大小&lt;br /&gt;
 face：字体&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文本居中:&amp;lt;center&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;属性定义：&lt;br /&gt;
color：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;英文单词：red,green,blue&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;rgb (值 1，值 2，值 3)：值的范围：0~255  如  rgb (0,0,255)&lt;/p&gt;
&lt;p&gt;#值 1 值 2 值 3：值的范围：00~FF 之间。如： #FF00FF&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;width：&lt;/p&gt;
&lt;p&gt;数值：width=&#39;20&#39; , 数值的单位，默认是 px (像素)&lt;/p&gt;
&lt;p&gt;数值 %：占比相对于父元素的比例&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;公司简介&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;ch&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;黑马程序员简介&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 公司简介&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;hr&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;#ffd700&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;font&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;#FF0000&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&#34;中关村黑马程序员训练营&#34;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;font&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    是由&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;i&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;传智播客&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;i&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;联合中关村软件园委托传智播客进行教致力于服务各大而企业招不到优秀人才的困扰。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;目前，“中关村黑马程序员训练营”已成长为行业“学员质量好”的移动开发高端训练基地&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;hr&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;#ffd700&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;font&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;gray&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;2&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;center&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;江苏传智播客教育科技股份有限公司&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;版权所有Copyright 2006-2018&lt;span class=&#34;token entity named-entity&#34; title=&#34;&amp;copy;&#34;&gt;&amp;amp;copy;&lt;/span&gt;, All Rights Reserved 苏ICP备16007882&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;center&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;font&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;图片标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#图片标签&#34;&gt;#&lt;/a&gt; 图片标签&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;img：展示图片&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;属性：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;src：指定图片的位置&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 展示一张图片 img--&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;image/jingxuan_2.jpg&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;right&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;alt&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;古镇&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;500&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;500&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 相对路径&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          以。开头的路径&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          ./：代表当前目录  ./image/1.jpg&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          ../: 代表上一级目录&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;./image/jiangwai_1.jpg&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;../image/jiangwai_1.jpg&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;列表标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#列表标签&#34;&gt;#&lt;/a&gt; 列表标签&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;有序列表：&lt;br /&gt;
ol:&lt;br /&gt;
 早上起床干的事情&lt;br /&gt;
 &amp;lt;ol type=&amp;quot;A&amp;quot;&amp;gt;&lt;br /&gt;
&amp;lt;li&amp;gt; 睁眼睛 &amp;lt;/li&amp;gt;&lt;br /&gt;
&amp;lt;li&amp;gt; 看手机 &amp;lt;/li&amp;gt;&lt;br /&gt;
&amp;lt;li&amp;gt; 床衣服 &amp;lt;/li&amp;gt;&lt;br /&gt;
&amp;lt;/ol&amp;gt;&lt;/li&gt;
&lt;li&gt;无序列表： 同上&lt;br /&gt;
 ul:&lt;br /&gt;
li:&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;链接标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#链接标签&#34;&gt;#&lt;/a&gt; 链接标签：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;a: 定义一个超链接&lt;br /&gt;
属性：&lt;br /&gt;
href：指定访问资源的 URL (统一资源定位符)&lt;br /&gt;
 target：指定打开资源的方式&lt;br /&gt;
_self: 默认值，在当前页面打开&lt;br /&gt;
&lt;em&gt; blank：在空白页面打开&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代码：&lt;br /&gt;
&amp;lt;!-- 超链接  a--&amp;gt;_&lt;br /&gt;
&amp;lt;a href=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5pdGNhc3QuY24=&#34;&gt;http://www.itcast.cn&lt;/span&gt;&amp;quot;&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;div和span&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#div和span&#34;&gt;#&lt;/a&gt; div 和 span：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;div: 每一个 div 占满一整行。块级标签&lt;/li&gt;
&lt;li&gt;span：文本信息在一行展示，行内标签 内联标签&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;语义化标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语义化标签&#34;&gt;#&lt;/a&gt; 语义化标签&lt;/h3&gt;
&lt;p&gt;html5 中为了提高程序的可读性，提供了一些标签。&amp;lt;footer&amp;gt;：页脚     &amp;lt;footer&amp;gt;：页脚&lt;/p&gt;
&lt;h3 id=&#34;表格标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表格标签&#34;&gt;#&lt;/a&gt; 表格标签&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;table：定义表格&lt;/li&gt;
&lt;li&gt;width：宽度&lt;/li&gt;
&lt;li&gt;border：边框&lt;/li&gt;
&lt;li&gt;cellpadding：定义内容和单元格的距离&lt;/li&gt;
&lt;li&gt;cellspacing：定义单元格之间的距离。如果指定为 0，则单元格的线会合为一条、&lt;/li&gt;
&lt;li&gt;bgcolor：背景色&lt;/li&gt;
&lt;li&gt;align：对齐方式&lt;/li&gt;
&lt;li&gt;tr：定义行&lt;/li&gt;
&lt;li&gt;bgcolor：背景色&lt;/li&gt;
&lt;li&gt;align：对齐方式&lt;/li&gt;
&lt;li&gt;td：定义单元格&lt;/li&gt;
&lt;li&gt;colspan：合并列&lt;/li&gt;
&lt;li&gt;rowspan：合并行&lt;/li&gt;
&lt;li&gt;th：定义表头单元格&lt;/li&gt;
&lt;li&gt;&amp;lt;caption&amp;gt;：表格标题&lt;/li&gt;
&lt;li&gt;&amp;lt;thead&amp;gt;：表示表格的头部分&lt;/li&gt;
&lt;li&gt;&amp;lt;tbody&amp;gt;：表示表格的体部分&lt;/li&gt;
&lt;li&gt;&amp;lt;tfoot&amp;gt;：表示表格的脚部分&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;## 案例：旅游网站首页&lt;br /&gt;
见例题&lt;br /&gt;
单行单列用&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;tr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;td&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;td&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;tr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;表单标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表单标签&#34;&gt;#&lt;/a&gt; 表单标签&lt;/h2&gt;
&lt;p&gt;表单：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;概念：用于采集用户输入的数据的。用于和服务器进行交互。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;form：用于定义表单的。可以定义一个范围，范围代表采集用户数据的范围 +&lt;/p&gt;
&lt;p&gt;属性：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​		action：指定提交数据的 URL&lt;/p&gt;
&lt;p&gt;​		method: 指定提交方式&lt;/p&gt;
&lt;p&gt;分类：一共 7 种，2 种比较常用&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;get：&lt;/p&gt;
&lt;p&gt;请求参数会在地址栏中显示。会封装到请求行中 (HTTP 协议后讲解)。&lt;/p&gt;
&lt;p&gt;请求参数大小是有限制的。&lt;/p&gt;
&lt;p&gt;不太安全。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;post：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​			请求参数不会再地址栏中显示。会封装在请求体中 (HTTP 协议后讲解)&lt;/p&gt;
&lt;p&gt;​		请求参数的大小没有限制。&lt;/p&gt;
&lt;p&gt;​			较为安全。&lt;/p&gt;
&lt;p&gt;表单项中的数据要想被提交：必须指定其 name 属性&lt;/p&gt;
&lt;h2 id=&#34;表单项标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表单项标签&#34;&gt;#&lt;/a&gt; 表单项标签&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;input：可以通过 type 属性值，改变元素展示的样式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;type 属性：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* text：文本输入框，默认值
	 placeholder：指定输入框的提示信息，当输入框的内容发生变化，会自动清空提示信息	
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;password：密码输入框&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;radio: 单选框&lt;/p&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;要想让多个单选框实现单选的效果，则多个单选框的 name 属性值必须一样。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一般会给每一个单选框提供 value 属性，指定其被选中后提交的值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;checked 属性，可以指定默认值 checked 或 checked=&amp;quot;checked&amp;quot;;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;checkbox：复选框&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;一般会给每一个单选框提供 value 属性，指定其被选中后提交的值&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;checked 属性，可以指定默认值&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;file：文件选择框&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hidden：隐藏域，用于提交一些信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按钮：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;submit：提交按钮。可以提交表单&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;button：普通按钮&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;image：图片提交按钮&lt;/p&gt;
&lt;p&gt;src 属性指定图片的路径&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;label：指定输入项的文字描述信息&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;注意：
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;label 的 for 属性一般会和 input 的 id 属性值 对应。如果对应了，则点击 label 区域，会让 input 输入框获取焦点。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;用户名&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;placeholder&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;请输入用户名&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;select: 下拉列表&lt;br /&gt;
子元素：option，指定列表项&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;省份&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;select&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;province&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;option&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;--请选择--&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;option&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;option&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;1&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;北京&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;option&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;option&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;2&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;上海&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;option&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;option&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;3&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;天津&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;option&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;option&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;4&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;selected&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;陕西&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;option&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;select&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;textarea：文本域&lt;br /&gt;
 cols：指定列数，每一行有多少个字符&lt;br /&gt;
 rows：默认多少行。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;自我描述&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;textarea&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;cols&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;20&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;5&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;discribe&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;textarea&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;css页面美化和布局控制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css页面美化和布局控制&#34;&gt;#&lt;/a&gt; CSS：页面美化和布局控制&lt;/h1&gt;
&lt;p&gt;概念： Cascading Style Sheets 层叠样式表&lt;br /&gt;
层叠：多个样式可以作用在同一个 html 的元素上，同时生效&lt;/p&gt;
&lt;h2 id=&#34;好处&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#好处&#34;&gt;#&lt;/a&gt; 好处&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;功能强大&lt;/li&gt;
&lt;li&gt;将内容展示和样式控制分离&lt;br /&gt;
降低耦合度。解耦&lt;br /&gt;
让分工协作更容易&lt;br /&gt;
提高开发效率&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;css与html结合方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css与html结合方式&#34;&gt;#&lt;/a&gt; CSS 与 html 结合方式&lt;/h2&gt;
&lt;h3 id=&#34;内联样式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内联样式&#34;&gt;#&lt;/a&gt; 内联样式&lt;/h3&gt;
&lt;p&gt;在标签内使用 style 属性指定 css 代码&lt;br /&gt;
如：&amp;lt;div style=&amp;quot;color:red;&amp;quot;&amp;gt;hello css&amp;lt;/div&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;内部样式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内部样式&#34;&gt;#&lt;/a&gt; 内部样式&lt;/h3&gt;
&lt;p&gt;在 head 标签内，定义 style 标签，style 标签的标签体内容就是 css 代码&lt;br /&gt;
如：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token style&#34;&gt;&lt;span class=&#34;token language-css&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;blue&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;hello css&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;外部样式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#外部样式&#34;&gt;#&lt;/a&gt; 外部样式&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;定义 css 资源文件。&lt;/li&gt;
&lt;li&gt;在 head 标签内，定义 link 标签，引入外部的资源文件&lt;br /&gt;
如： a.css 文件：&lt;br /&gt;
div{&lt;br /&gt;
color:green;&lt;br /&gt;
}&lt;br /&gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;css/a.css&amp;quot;&amp;gt;&lt;br /&gt;
&amp;lt;div&amp;gt;hello css&amp;lt;/div&amp;gt;&lt;br /&gt;
&amp;lt;div&amp;gt;hello css&amp;lt;/div&amp;gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;注意：&lt;br /&gt;
1,2,3 种方式 css 作用范围越来越大&lt;br /&gt;
 1 方式不常用，后期常用 2,3&lt;br /&gt;
 第 3 种格式可以写为：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token style&#34;&gt;&lt;span class=&#34;token language-css&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token atrule&#34;&gt;&lt;span class=&#34;token rule&#34;&gt;@import&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;css/a.css&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;css语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css语法&#34;&gt;#&lt;/a&gt; css 语法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;格式：&lt;br /&gt;
选择器 {&lt;br /&gt;
属性名 1: 属性值 1;&lt;br /&gt;
 属性名 2: 属性值 2;&lt;br /&gt;
...&lt;br /&gt;
}&lt;/li&gt;
&lt;li&gt;选择器：筛选具有相似特征的元素&lt;/li&gt;
&lt;li&gt;注意：
&lt;ul&gt;
&lt;li&gt;每一对属性需要使用；隔开，最后一对属性可以不加；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#选择器&#34;&gt;#&lt;/a&gt; 选择器&lt;/h2&gt;
&lt;p&gt;筛选具有相似特征的元素&lt;br /&gt;
分类：&lt;/p&gt;
&lt;h3 id=&#34;基础选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基础选择器&#34;&gt;#&lt;/a&gt; 基础选择器&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;id 选择器：选择具体的 id 属性值的元素。建议在一个 html 页面中 id 值唯一&lt;br /&gt;
语法：#id 属性值 {}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;元素选择器：选择具有相同标签名称的元素&lt;br /&gt;
语法： 标签名称 {}&lt;br /&gt;
 注意：id 选择器优先级高于元素选择器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;类选择器：选择具有相同的 class 属性值的元素。&lt;br /&gt;
语法：.class 属性值 {}&lt;br /&gt;
 注意：类选择器选择器优先级高于元素选择器&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;扩展选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#扩展选择器&#34;&gt;#&lt;/a&gt; 扩展选择器&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;选择所有元素：&lt;br /&gt;
语法： *{}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;并集选择器：&lt;br /&gt;
选择器 1, 选择器 2 {}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基础选择器子选择器：筛选选择器 1 元素下的选择器 2 元素&lt;br /&gt;
语法：  选择器 1 选择器 2 {}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;父选择器：筛选选择器 2 的父元素选择器 1&lt;br /&gt;
 语法：  选择器 1 &amp;gt; 选择器 2 {}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;属性选择器：选择元素名称，属性名 = 属性值的元素&lt;br /&gt;
语法：  元素名称&lt;span&gt;属性名 =&amp;quot;属性值&amp;quot;&lt;/span&gt;{}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;伪类选择器：选择一些元素具有的状态&lt;br /&gt;
语法： 元素：状态 {}&lt;br /&gt;
 如： &amp;lt;a&amp;gt; 超链接&lt;br /&gt;
 * 状态：&lt;br /&gt;
* link：初始化的状态&lt;br /&gt;
 * visited：被访问过的状态&lt;br /&gt;
 * active：正在访问状态&lt;br /&gt;
 * hover：鼠标悬浮状态&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#属性&#34;&gt;#&lt;/a&gt; 属性&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;字体、文本&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;font-size：字体大小&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;color：文本颜色&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;text-align：对其方式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;line-height：行高&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;背景   * background：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;边框    * border：设置边框，符合属性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;尺寸&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;width：宽度&lt;/li&gt;
&lt;li&gt;height：高度&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;盒子模型：控制布局&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;* margin：外边距&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;* padding：内边距&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	* 默认情况下内边距会影响整个盒子的大小&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	* box-sizing: border-box;  设置盒子的属性，让width和height就是最终盒子的大小&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;* float：浮动&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	* left&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	* right&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;注册页面案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注册页面案例&#34;&gt;#&lt;/a&gt; 注册页面案例&lt;/h2&gt;
&lt;p&gt;见代码例题&lt;/p&gt;
</content>
        <category term="JavaWeb" scheme="https://jihaipeng123.github.io/categories/JavaWeb/" />
        <updated>2023-08-14T11:47:06.000Z</updated>
    </entry>
    <entry>
        <id>https://jihaipeng123.github.io/2JDBC-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/</id>
        <title>2.JDBC&amp;数据库连接池</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/2JDBC-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/"/>
        <content type="html">&lt;h1 id=&#34;jdbc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jdbc&#34;&gt;#&lt;/a&gt; JDBC&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;概念：Java DataBase Connectivity  Java 数据库连接， Java 语言操作数据库&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;JDBC 本质：其实是官方（sun 公司）定义的一套操作所有关系型数据库的规则，** 即接口。** 各个数据库厂商去实现这套接口，提供数据库驱动 jar 包。我们可以使用这套接口（JDBC）编程，真正执行的代码是驱动 jar 包中的实现类。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;快速入门&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;导入驱动 jar 包 mysql-connector-java-5.1.37-bin.jar&lt;br /&gt;
1. 复制 mysql-connector-java-5.1.37-bin.jar 到项目的 libs 目录下&lt;br /&gt;
 2. 右键 --&amp;gt;Add As Library&lt;/li&gt;
&lt;li&gt;注册驱动&lt;/li&gt;
&lt;li&gt;获取数据库连接对象 Connection&lt;/li&gt;
&lt;li&gt;定义 sql&lt;/li&gt;
&lt;li&gt;获取执行 sql 语句的对象 Statement&lt;/li&gt;
&lt;li&gt;执行 sql，接受返回结果&lt;/li&gt;
&lt;li&gt;处理结果&lt;/li&gt;
&lt;li&gt;释放资源&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;详解各个对象&lt;/p&gt;
&lt;h2 id=&#34;drivermanager驱动管理对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#drivermanager驱动管理对象&#34;&gt;#&lt;/a&gt; DriverManager：驱动管理对象&lt;/h2&gt;
&lt;p&gt;功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;注册驱动：告诉程序该使用哪一个数据库驱动 jar&lt;br /&gt;
static void registerDriver (Driver driver) : 注册与给定的驱动程序 DriverManager 。&lt;br /&gt;
写代码使用：  &lt;strong&gt;&amp;lt;u&amp;gt;Class.forName(&amp;quot;com.mysql.jdbc.Driver&amp;quot;);&amp;lt;/u&amp;gt;&lt;/strong&gt;&lt;br /&gt;
 通过查看源码发现：在 com.mysql.jdbc.Driver 类中存在静态代码块&lt;br /&gt;
 static {&lt;br /&gt;
try {&lt;br /&gt;
java.sql.DriverManager.registerDriver(new Driver());&lt;br /&gt;
} catch (SQLException E) {&lt;br /&gt;
throw new RuntimeException(&amp;quot;Can&#39;t register driver!&amp;quot;);&lt;br /&gt;
}&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;注意：mysql5 之后的驱动 jar 包可以省略注册驱动的步骤。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取数据库连接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方法：static Connection getConnection (String url, String user, String password)&lt;/li&gt;
&lt;li&gt;参数：
&lt;ul&gt;
&lt;li&gt;url：指定连接的路径
&lt;ul&gt;
&lt;li&gt;语法：jdbc:mysql://ip 地址 (域名): 端口号 / 数据库名称&lt;/li&gt;
&lt;li&gt;例子：jdbc:mysql://localhost:3306/db3&lt;/li&gt;
&lt;li&gt;细节：如果连接的是本机 mysql 服务器，并且 mysql 服务默认端口是 3306，则 url 可以简写为：jdbc:mysql:/// 数据库名称&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;user：用户名&lt;/li&gt;
&lt;li&gt;password：密码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;connection数据库连接对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#connection数据库连接对象&#34;&gt;#&lt;/a&gt; Connection：数据库连接对象&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;功能：
&lt;ol&gt;
&lt;li&gt;获取执行 sql 的对象
&lt;ul&gt;
&lt;li&gt;Statement createStatement()&lt;/li&gt;
&lt;li&gt;PreparedStatement prepareStatement(String sql)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;管理事务：
&lt;ul&gt;
&lt;li&gt;开启事务：setAutoCommit (boolean autoCommit) ：调用该方法设置参数为 false，即开启事务&lt;/li&gt;
&lt;li&gt;提交事务：commit ()&lt;/li&gt;
&lt;li&gt;回滚事务：rollback ()&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;statement执行sql的对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#statement执行sql的对象&#34;&gt;#&lt;/a&gt; Statement：执行 sql 的对象&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;执行 sql&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;boolean execute (String sql) ：可以执行任意的 sql -- 了解&lt;/li&gt;
&lt;li&gt;int executeUpdate (String sql) ：执行 DML（insert、update、delete）语句、DDL (create，alter、drop) 语句
&lt;ul&gt;
&lt;li&gt;返回值：影响的行数，可以通过这个影响的行数判断 DML 语句是否执行成功 返回值 &amp;gt; 0 的则执行成功，反之，则失败。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ResultSet executeQuery (String sql)  ：执行 DQL（select) 语句&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;练习：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;account 表 添加一条记录&lt;/li&gt;
&lt;li&gt;account 表 修改记录&lt;/li&gt;
&lt;li&gt;account 表 删除一条记录&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt; 代码：
	Statement stmt = null;
     Connection conn = null;
     try &amp;#123;
         //1. 注册驱动
         Class.forName(&amp;quot;com.mysql.jdbc.Driver&amp;quot;);
         //2. 定义sql
         String sql = &amp;quot;insert into account values(null,&#39;王五&#39;,3000)&amp;quot;;
         //3.获取Connection对象
         conn = DriverManager.getConnection(&amp;quot;jdbc:mysql:///db3&amp;quot;, &amp;quot;root&amp;quot;, &amp;quot;root&amp;quot;);
         //4.获取执行sql的对象 Statement
         stmt = conn.createStatement();
         //5.执行sql
         int count = stmt.executeUpdate(sql);//影响的行数
         //6.处理结果
         System.out.println(count);
         if(count &amp;gt; 0)&amp;#123;
             System.out.println(&amp;quot;添加成功！&amp;quot;);
         &amp;#125;else&amp;#123;
             System.out.println(&amp;quot;添加失败！&amp;quot;);
         &amp;#125;
     &amp;#125; catch (ClassNotFoundException e) &amp;#123;
         e.printStackTrace();
     &amp;#125; catch (SQLException e) &amp;#123;
         e.printStackTrace();
     &amp;#125;finally &amp;#123;
         //stmt.close();
         //7. 释放资源
         //避免空指针异常
         if(stmt != null)&amp;#123;
             try &amp;#123;
                 stmt.close();
             &amp;#125; catch (SQLException e) &amp;#123;
                 e.printStackTrace();
             &amp;#125;
         &amp;#125;

         if(conn != null)&amp;#123;
             try &amp;#123;
                 conn.close();
             &amp;#125; catch (SQLException e) &amp;#123;
                 e.printStackTrace();
             &amp;#125;
         &amp;#125;
     &amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;resultset结果集对象封装查询结果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#resultset结果集对象封装查询结果&#34;&gt;#&lt;/a&gt; ResultSet：结果集对象，封装查询结果&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;boolean next (): 游标向下移动一行，判断当前行是否是最后一行末尾 (是否有数据)，如果是，则返回 false，如果不是则返回 true&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;getXxx (参数): 获取数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Xxx：代表数据类型   如： int getInt () ,	String getString ()&lt;/li&gt;
&lt;li&gt;参数：
&lt;ol&gt;
&lt;li&gt;int：代表列的编号，从 1 开始   如： getString (1)&lt;/li&gt;
&lt;li&gt;String：代表列名称。 如： getDouble (&amp;quot;balance&amp;quot;)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;游标向下移动一行&lt;/li&gt;
&lt;li&gt;判断是否有数据&lt;/li&gt;
&lt;li&gt;获取数据&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;// 循环判断游标是否是最后一行末尾。&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;span class=&#34;token comment&#34;&gt;// 获取数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;span class=&#34;token comment&#34;&gt;//6.2 获取数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; rs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getInt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         String name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; rs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getString&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;span class=&#34;token keyword&#34;&gt;double&lt;/span&gt; balance &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; rs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getDouble&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		System&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;println&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;---&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; name &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;---&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; balance&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;练习：jdbcDemo7&lt;br /&gt;
* 定义一个方法，查询 emp 表的数据将其封装为对象，然后装载集合，返回。&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1.&lt;/span&gt;定义Emp类&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;2.&lt;/span&gt; 定义方法 &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; List&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;Emp&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; findAll&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&amp;#123;&amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;3.&lt;/span&gt; 实现方法 &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; emp&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;preparedstatement执行sql的对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#preparedstatement执行sql的对象&#34;&gt;#&lt;/a&gt; PreparedStatement：执行 sql 的对象&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;SQL 注入问题：在拼接 sql 时，有一些 sql 的特殊关键字参与字符串的拼接。会造成安全性问题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入用户随便，输入密码：a&#39; or &#39;a&#39; = &#39;a&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sql：select * from user where username = &#39;fhdsjkf&#39; and password = &#39;a&#39; or &#39;a&#39; = &#39;a&#39;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解决 sql 注入问题：使用 PreparedStatement 对象来解决&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;预编译的 SQL：参数使用？作为占位符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;步骤：  // 重点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;导入驱动 jar 包 mysql-connector-java-5.1.37-bin.jar&lt;/li&gt;
&lt;li&gt;注册驱动&lt;/li&gt;
&lt;li&gt;获取数据库连接对象 Connection&lt;/li&gt;
&lt;li&gt;定义 sql
&lt;ul&gt;
&lt;li&gt;注意：sql 的参数使用？作为占位符。 如：select * from user where username = ? and password = ?;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;获取执行 sql 语句的对象 PreparedStatement  Connection.prepareStatement (String sql)&lt;/li&gt;
&lt;li&gt;给？赋值：
&lt;ul&gt;
&lt;li&gt;方法： setXxx (参数 1, 参数 2)
&lt;ul&gt;
&lt;li&gt;参数 1：？的位置编号 从 1 开始&lt;/li&gt;
&lt;li&gt;参数 2：？的值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;执行 sql，接受返回结果，不需要传递 sql 语句&lt;/li&gt;
&lt;li&gt;处理结果&lt;/li&gt;
&lt;li&gt;释放资源&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意：后期都会使用 PreparedStatement 来完成增删改查的所有操作&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以防止 SQL 注入&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;效率更高&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;抽取jdbc工具类-jdbcutils&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#抽取jdbc工具类-jdbcutils&#34;&gt;#&lt;/a&gt; 抽取 JDBC 工具类 ： JDBCUtils&lt;/h1&gt;
&lt;p&gt;目的：简化书写          jdbcUtils  +  jdbcDemo7  +  jdbc.properties  实现练习&lt;/p&gt;
&lt;p&gt;分析：1 注册驱动也抽取，2 抽取一个方法获取连接对象&lt;/p&gt;
&lt;p&gt;需求：不想传递参数（麻烦），还得保证工具类的通用性。&lt;/p&gt;
&lt;p&gt;解决：配置文件 jdbc.properties&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	password&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	driver&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;jdbc控制事务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jdbc控制事务&#34;&gt;#&lt;/a&gt; JDBC 控制事务&lt;/h1&gt;
&lt;p&gt;事务：一个包含多个步骤的业务操作。如果这个业务操作被事务管理，则这多个步骤要么同时成功，要么同时失败。&lt;/p&gt;
&lt;p&gt;操作：1 开启事务         2 提交事务          3 回滚事务&lt;/p&gt;
&lt;p&gt;使用 Connection 对象来管理事务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开启事务：setAutoCommit (boolean autoCommit) ：调用该方法设置参数为 false，即开启事务
&lt;ul&gt;
&lt;li&gt;在执行 sql 之前开启事务&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;提交事务：commit ()
&lt;ul&gt;
&lt;li&gt;当所有 sql 都执行完提交事务&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;回滚事务：rollback ()
&lt;ul&gt;
&lt;li&gt;在 catch 中回滚事务&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; class JDBCDemo10 &amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; static void main&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        Connection conn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        PreparedStatement pstmt1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        PreparedStatement pstmt2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        try &amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token comment&#34;&gt;//1. 获取连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            conn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; JDBCUtils&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getConnection&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token comment&#34;&gt;// 开启事务&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            conn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setAutoCommit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token comment&#34;&gt;//2. 定义 sql&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token comment&#34;&gt;//2.1 张三 - 500&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            String sql1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;update account set balance = balance - ? where id = ?&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token comment&#34;&gt;//2.2 李四 + 500&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            String sql2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;update account set balance = balance + ? where id = ?&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token comment&#34;&gt;//3. 获取执行 sql 对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            pstmt1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; conn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prepareStatement&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            pstmt2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; conn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prepareStatement&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token comment&#34;&gt;//4. 设置参数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            pstmt1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setDouble&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            pstmt1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setInt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            pstmt2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setDouble&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            pstmt2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setInt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token comment&#34;&gt;//5. 执行 sql&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            pstmt1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;executeUpdate&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token comment&#34;&gt;// 手动制造异常&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            pstmt2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;executeUpdate&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token comment&#34;&gt;// 提交事务&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            conn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;commit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &amp;#125; catch &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Exception e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &lt;span class=&#34;token comment&#34;&gt;// 事务回滚&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            try &amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;conn &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                    conn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;rollback&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                &amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &amp;#125; catch &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SQLException e1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	                e1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;printStackTrace&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            &amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;printStackTrace&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &amp;#125;finally &amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            JDBCUtils&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pstmt1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;conn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	            JDBCUtils&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pstmt2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	        &amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	   &amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;数据库连接池&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库连接池&#34;&gt;#&lt;/a&gt; 数据库连接池&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;概念：其实就是一个容器 (集合)，存放数据库连接的容器。&lt;br /&gt;
当系统初始化好后，容器被创建，容器中会申请一些连接对象，当用户来访问数据库时，从容器中获取连接对象，用户访问完之后，会将连接对象归还给容器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;好处：  节约资源          用户访问高效&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实现：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;标准接口：DataSource  Javax.sql 包下的
&lt;ol&gt;
&lt;li&gt;方法：
&lt;ul&gt;
&lt;li&gt;获取连接：getConnection ()&lt;/li&gt;
&lt;li&gt;归还连接：Connectionless ()。如果连接对象 Connection 是从连接池中获取的，那么调用 Connection.close () 方法，则不会再关闭连接了。而是归还连接&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;一般我们不去实现它，有数据库厂商来实现
&lt;ol&gt;
&lt;li&gt;C3p0：数据库连接池技术&lt;/li&gt;
&lt;li&gt;Druid：数据库连接池实现技术，由阿里巴巴提供&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;c3p0数据库连接池技术&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#c3p0数据库连接池技术&#34;&gt;#&lt;/a&gt; C3p0：数据库连接池技术&lt;/h1&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;导入 jar 包 (两个)       c3p0-0.9.5.2.jar         mchange-commons-java-0.2.12.jar&lt;/p&gt;
&lt;p&gt;不要忘记导入数据库驱动 jar 包&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;定义配置文件：&lt;/p&gt;
&lt;p&gt;名称： c3p0.properties 或者 c3p0-config.xml&lt;/p&gt;
&lt;p&gt;​	路径：直接将文件放在 src 目录下即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建核心对象 数据库连接池对象 ComboPooledDataSource&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取连接： getConnection&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建数据库连接池对象&lt;/p&gt;
&lt;p&gt;DataSource ds  = new ComboPooledDataSource();&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取连接对象&lt;br /&gt;
 Connection conn = ds.getConnection ();&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;druid数据库连接池&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#druid数据库连接池&#34;&gt;#&lt;/a&gt; Druid：数据库连接池&lt;/h1&gt;
&lt;h2 id=&#34;步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#步骤&#34;&gt;#&lt;/a&gt; 步骤&lt;/h2&gt;
&lt;p&gt;1 导入 jar 包 druid-1.0.9.jar&lt;/p&gt;
&lt;p&gt;2 定义配置文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是 properties 形式的&lt;/li&gt;
&lt;li&gt;可以叫任意名称，可以放在任意目录下&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3 加载配置文件。Properties&lt;/p&gt;
&lt;p&gt;4 获取数据库连接池对象：通过工厂类来获取  DruidDataSourceFactory&lt;/p&gt;
&lt;p&gt;5 获取连接：getConnection&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1 导入jar包
2 导入配置文件
3 加载配置文件
  	Properties pro = new Properties();
 	 InputStream is = DruidDemo.class.getClassLoader().getResourceAsStream(&amp;quot;druid.properties&amp;quot;);
 	 pro.load(is);
4  获取连接池对象
 	 DataSource ds = DruidDataSourceFactory.createDataSource(pro);
5  获取连接
	  Connection conn = ds.getConnection();
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;定义工具类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定义工具类&#34;&gt;#&lt;/a&gt; 定义工具类&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;定义一个类 JDBCUtils&lt;/li&gt;
&lt;li&gt;提供静态代码块加载配置文件，初始化连接池对象&lt;/li&gt;
&lt;li&gt;提供方法
&lt;ol&gt;
&lt;li&gt;获取连接方法：通过数据库连接池获取连接&lt;/li&gt;
&lt;li&gt;释放资源&lt;/li&gt;
&lt;li&gt;获取连接池的方法&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;spring-jdbc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#spring-jdbc&#34;&gt;#&lt;/a&gt; Spring JDBC&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Spring 框架对 JDBC 的简单封装。提供了一个 JDBCTemplate 对象简化 JDBC 的开发&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;导入 jar 包&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建 JdbcTemplate 对象。依赖于数据源 DataSource&lt;br /&gt;
JdbcTemplate template = new JdbcTemplate(ds);&lt;br /&gt;
3. 调用 JdbcTemplate 的方法来完成 CRUD 的操作&lt;br /&gt;
 update (): 执行 DML 语句。增、删、改语句&lt;br /&gt;
 4.queryForMap (): 查询结果将结果集封装为 map 集合，将列名作为 key，将值作为 value 将这条记录封装为一个 map 集合&lt;br /&gt;
注意：这个方法查询的结果集长度只能是 1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;queryForList (): 查询结果将结果集封装为&lt;strong&gt; list&lt;/strong&gt; 集合&lt;br /&gt;
注意：将每一条记录封装为一个 Map 集合，再将 Map 集合装载到 List 集合中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;query (): 查询结果，将结果封装为 JavaBean 对象&lt;br /&gt;
 uery 的参数：RowMapper&lt;br /&gt;
 一般我们使用 BeanPropertyRowMapper 实现类。可以完成数据到 JavaBean 的自动封装&lt;br /&gt;
 new BeanPropertyRowMapper &amp;lt;类型&amp;gt;(类型.class)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;queryForObject：查询结果，将结果封装为对象&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;般用于聚合函数的查询&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; void test6_2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	String &lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;select * from emp&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	List&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;Emp&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; list &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; template&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;query&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; new BeanPropertyRowMapper&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;Emp&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Emp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;class&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Emp emp : list&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		System&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;println&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;emp&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="JavaWeb" scheme="https://jihaipeng123.github.io/categories/JavaWeb/" />
        <updated>2023-08-14T11:13:17.000Z</updated>
    </entry>
    <entry>
        <id>https://jihaipeng123.github.io/1%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
        <title>1.数据库</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/1%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
        <content type="html">&lt;h1 id=&#34;javaweb&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#javaweb&#34;&gt;#&lt;/a&gt; &lt;em&gt;JavaWeb&lt;/em&gt;&lt;/h1&gt;
&lt;p&gt;1.What: 使用 Java 语言开发互联网项目；开发网站；&lt;/p&gt;
&lt;h1 id=&#34;数据库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库&#34;&gt;#&lt;/a&gt; &lt;em&gt;数据库&lt;/em&gt;&lt;/h1&gt;
&lt;h2 id=&#34;数据库基本概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库基本概念&#34;&gt;#&lt;/a&gt; 数据库基本概念&lt;/h2&gt;
&lt;p&gt;​		1. 数据库 DateBase  DB&lt;/p&gt;
&lt;p&gt;​		2.what: 用于存储管理数据的仓库&lt;/p&gt;
&lt;p&gt;​		3. 数据库特点：a 持久化存储数据，数据库就是一个文件系统		b 方便存储管理数据 		c 使用同一的方式操作数据库 SQL&lt;/p&gt;
&lt;p&gt;​		4 常见数据库软件：  Oracle   MySQL (Oracle 公司）&lt;/p&gt;
&lt;h2 id=&#34;mysql数据库软件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql数据库软件&#34;&gt;#&lt;/a&gt; MySQL 数据库软件&lt;/h2&gt;
&lt;p&gt;​			1. 安装		2. 卸载		3. 配置  a.mysql 服务，启动命令：cmd-&amp;lt;services.msc 打开服务窗口&lt;/p&gt;
&lt;p&gt;​		使用管理员打开 cmd       查询状态  mysql  -uroot  -proot&lt;/p&gt;
&lt;p&gt;​		启动服务 net start mysql 			关闭服务 net stop mysql&lt;/p&gt;
&lt;p&gt;​		b.mysql 的登陆   1.mysql -uroot -proot&lt;/p&gt;
&lt;p&gt;​		c.mysql 退出  1.exit   2.quit&lt;/p&gt;
&lt;p&gt;​		d.mysql 的目录结构&lt;/p&gt;
&lt;p&gt;​		1. 安装目录 D 盘     核心配置文件 my.ini&lt;/p&gt;
&lt;p&gt;​		2. 数据目录 C 盘隐藏  （数据库 ：文件夹）（表 ：文件 ）  数据&lt;/p&gt;
&lt;h2 id=&#34;sql&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql&#34;&gt;#&lt;/a&gt; SQL&lt;/h2&gt;
&lt;h3 id=&#34;what&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#what&#34;&gt;#&lt;/a&gt; what: “&lt;/h3&gt;
&lt;p&gt;​	结构化查询语言；定义了操作所有关系型数据库的规则；每一种数据库操作的方式存在不一样的地方，称为” 方言 “&lt;/p&gt;
&lt;h3 id=&#34;sql通用语言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql通用语言&#34;&gt;#&lt;/a&gt; SQL 通用语言&lt;/h3&gt;
&lt;p&gt;​		a. 单行或多行书写，分号结尾；&lt;/p&gt;
&lt;p&gt;​		b.SQL 中不区分大小写，关键字中认为大写和小写是一样的；j 建议大写&lt;/p&gt;
&lt;p&gt;c.3 种注释 a 单行 -- 空格   或 #   b 多行 /*  */&lt;/p&gt;
&lt;h3 id=&#34;sql分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql分类&#34;&gt;#&lt;/a&gt; SQL 分类&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Data Definition Language (DDL 数据定义语言) 如：建库，建表&lt;/li&gt;
&lt;li&gt;Data Manipulation Language (DML 数据操纵语言)，如：对表中的记录操作增删改&lt;/li&gt;
&lt;li&gt;Data Query Language (DQL 数据查询语言)，如：对表中的查询操作&lt;/li&gt;
&lt;li&gt;Data Control Language (DCL 数据控制语言)，如：对用户权限的设置&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;../pictures/shujuku/image-20230814155128212.png&#34; alt=&#34;image-20230814155128212&#34; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;ddl-操作数据库表&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ddl-操作数据库表&#34;&gt;#&lt;/a&gt; DDL : 操作数据库，表&lt;/h1&gt;
&lt;h2 id=&#34;操作数据库crud&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#操作数据库crud&#34;&gt;#&lt;/a&gt; 操作数据库 CRUD&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;C-- 创建&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建数据库&lt;/p&gt;
&lt;p&gt;create database 数据库名称；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建 db4 数据库，判断是否存在；&lt;/p&gt;
&lt;p&gt;create database if not  exists db4；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建 db4 数据库，判断是否存在，并制定字符集为 gbk;&lt;/p&gt;
&lt;p&gt;create database if not  exists db4 character set gbk;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;​	R-- 查询&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;$ 查询所有数据库的名称&lt;br /&gt;
 show databases;&lt;/li&gt;
&lt;li&gt;$ 查看某个数据库的字符集&lt;br /&gt;
 show create database 数据库名称；&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;​	U-- 修改&lt;/p&gt;
&lt;p&gt;修改数据库的字符集&lt;/p&gt;
&lt;p&gt;alter database 数据库名称 character set  字符集名称（utf8 ）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;​	D-- 删除&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;删除数据库&lt;/p&gt;
&lt;p&gt;drop database 数据库名称；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;先判断是否存在再删除&lt;/p&gt;
&lt;p&gt;drop database if not exists 数据库名称；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查询当前正在使用的数据库名称&lt;/p&gt;
&lt;p&gt;select database()；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用数据库&lt;/p&gt;
&lt;p&gt;use 数据库名称&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;操作表&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#操作表&#34;&gt;#&lt;/a&gt; 操作表&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;C-- 创建&lt;/p&gt;
&lt;p&gt;​	1. 创建表&lt;br /&gt;
 create table 表名（列名 1 数据类型 1，列名 2 数据类型 1，...... 列名 n 数据类型 n）；&lt;/p&gt;
&lt;p&gt;2. 复制表：&lt;br /&gt;
create table 新表名  like 被复制的表名&lt;br /&gt;
 int : 整数；  		&lt;br /&gt;
double: 小数；score double (5,2) 最多 5 位，小数 2 位&lt;br /&gt;
 data: 日期，只包含年月日 yyyy-MM--dd&lt;br /&gt;
datetime:  年月日时分秒 yyyy-MM--dd     HH:mm:ss;&lt;br /&gt;
varchar: 字符串  name varchar (20);  姓名最大 20 个字符	    		&lt;br /&gt;
timestamp: 默认使用系统时间&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; student&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	id &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	name &lt;span class=&#34;token keyword&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	age &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	score &lt;span class=&#34;token keyword&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	birthday &lt;span class=&#34;token keyword&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	insert_time &lt;span class=&#34;token keyword&#34;&gt;timestamp&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	3. 创建 db4 数据库，判断是否存在；&lt;/p&gt;
&lt;p&gt;​	create database if not  exists db4；&lt;/p&gt;
&lt;p&gt;4.. 创建 db4 数据库，判断是否存在，并制定字符集为 gbk;&lt;/p&gt;
&lt;p&gt;​	create database if not  exists db4 character set gbk;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;R-- 查询&lt;/p&gt;
&lt;p&gt;$ 查询数据库中所有表的名称&lt;br /&gt;
 show tables;&lt;/p&gt;
&lt;p&gt;​	$ 查看表的结构 desc 表名称；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;U-- 修改&lt;/p&gt;
&lt;p&gt;1. 修改表名&lt;br /&gt;
 alter table 表名 rename to 新表名；&lt;/p&gt;
&lt;p&gt;2. 修改表的字符集&lt;br /&gt;
 alter table 表名 character set  字符集名称（utf8 ）；&lt;br /&gt;
​3. 添加列&lt;br /&gt;
 alter table 表名 add 列名 数据类型；alter table 表名 add 列名 数据类型；&lt;/p&gt;
&lt;p&gt;4. 修改列名称  类型&lt;br /&gt;
 alter table 表名 change 原列名 新列名 数据类型；&lt;br /&gt;
alter table 表名 modify 列名 新数据类型；&lt;/p&gt;
&lt;p&gt;5. 删除列&lt;br /&gt;
 alter table 表名  drop 列名；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;D-- 删除&lt;/p&gt;
&lt;p&gt;​	删除表&lt;br /&gt;
 drop table  表名称；&lt;/p&gt;
&lt;p&gt;​	先判断是否存在再删除&lt;/p&gt;
&lt;p&gt;drop table  if not exists 表名称；&lt;/p&gt;
&lt;p&gt;SQLYog&lt;/p&gt;
&lt;p&gt;客户端图形化工具&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;dml增删改表中数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dml增删改表中数据&#34;&gt;#&lt;/a&gt; DML: 增删改表中数据&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;添加数据：insert into 表名（列名 1.... 列名你）values (值 1.... 值 n);&lt;/p&gt;
&lt;p&gt;注意：a 列名和值对应；b 表名后不定义列名，默认给所有列都添加值；c 除了数字，其余都需要用引号引起来，单双引号都行；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除数据： delete form 表名   where 条件；&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;注意：如果不加条件，删除全部数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;​	删除表，再创建一个一样的空表；&lt;/p&gt;
&lt;p&gt;truncate table 表名；&lt;/p&gt;
&lt;p&gt;delete from 表名；-- 不推荐使用，多次删除操作；&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改数据：  update 表名 set 列名 1 = 值 1，... 列名 n = 值 n  where 条件；&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​		注意：如果不加条件，修改全部。&lt;/p&gt;
&lt;h1 id=&#34;dql查找表中数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dql查找表中数据&#34;&gt;#&lt;/a&gt; DQL: 查找表中数据&lt;/h1&gt;
&lt;p&gt;​		select * from  表名；&lt;/p&gt;
&lt;h2 id=&#34;语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;p&gt;select  字段名列表  from 表名列表   where 条件列表  group by 分组字段&lt;/p&gt;
&lt;p&gt;having 分组之后的条件  order by 排序  limit 分页限定&lt;/p&gt;
&lt;h2 id=&#34;基础查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基础查询&#34;&gt;#&lt;/a&gt; 基础查询&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;多个字段的查询&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 查询所有表数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; student3&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	NAME&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	age &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	student3&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; address &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; student3&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;去除重复  distinct&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;distinct&lt;/span&gt;  address &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; student3&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算列  数值型计算  ifnull (表达式 1，表达式 2)&lt;/p&gt;
&lt;p&gt;​	表达式 1：那个字段需要判断是否为 null;   表达式 2： 字段为 null 后的替换值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;起别名  As&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 计算 math+english 的和并输出&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	NAME&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	math&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	english&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	math&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;english&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	student3&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 遇到 null 参与的运算，结果都为 null;	&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	NAME&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	math&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	english&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	math&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;IFNULL&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;english&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;-- 这样修改&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	student3&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 起个别名		&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	NAME&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	math&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	english&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	math&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;IFNULL&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;english&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; 总分  &lt;span class=&#34;token comment&#34;&gt;-- 起别名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	student3&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;条件查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#条件查询&#34;&gt;#&lt;/a&gt; 条件查询&lt;/h2&gt;
&lt;p&gt;where 字句后跟条件&lt;/p&gt;
&lt;p&gt;运算符 1.&amp;lt;&amp;gt; =&amp;gt;=  &amp;lt;=   2.&lt;strong&gt;BETWEEN...AND&lt;/strong&gt;  &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzMuSU4=&#34;&gt;3.IN&lt;/span&gt; (集合)   4. IS NULL&lt;/p&gt;
&lt;h2 id=&#34;模糊查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模糊查询&#34;&gt;#&lt;/a&gt; 模糊查询&lt;/h2&gt;
&lt;p&gt;Like  _ 单个任意字符    % 多个任意字符&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 查询年龄 &gt; 40 的  等于 = 不等于！= 或 &amp; lt;&gt;  并且 and   或者 or   &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; student3 &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; age&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; student3 &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; age&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; student3 &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; age&lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; age&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; student3 &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; age&lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; age&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; student3 &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; age &lt;span class=&#34;token operator&#34;&gt;BETWEEN&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 查询年龄 20，40 的人信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; student3 &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; student3 &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; age &lt;span class=&#34;token operator&#34;&gt;IN&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 只要是 in 中的数字都输出&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 查询英语成绩为 nill 的；&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; student3 &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; english &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;-- 写法错误不能用 = 判断，等于用 is 判断 ，不等于用 isnot;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; student3 &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; english &lt;span class=&#34;token operator&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; student3 &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; english &lt;span class=&#34;token operator&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 查询性马的数据  like&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; student3 &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; NAME &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;马%&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; student3 &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; NAME &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;_化%&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; student3 &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; NAME &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;___&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 查询姓名中含马的人&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; student3 &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; NAME &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%德%&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;排序查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#排序查询&#34;&gt;#&lt;/a&gt; 排序查询&lt;/h2&gt;
&lt;p&gt;order by 字句&lt;/p&gt;
&lt;p&gt;​		order by 排序字段 1  排序方式 1，排序字段 2 排序方式 2，....&lt;/p&gt;
&lt;p&gt;​		默认：ASC: 升序；   DESC: 降序；&lt;/p&gt;
&lt;p&gt;​		注意：如果有多个排序条件， 当前边条件值一样，才会判断第二条件；&lt;/p&gt;
&lt;h2 id=&#34;聚合函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#聚合函数&#34;&gt;#&lt;/a&gt; 聚合函数&lt;/h2&gt;
&lt;p&gt;将 1 一列数据作为一个整体，进行列纵向计算；、&lt;/p&gt;
&lt;p&gt;​		count： 计算个数    max   min   sum   avg: 计算平均值&lt;/p&gt;
&lt;p&gt;​		SELECT    COUNT(NAME)     FROM student3;&lt;/p&gt;
&lt;p&gt;注意： 排除 Null, 不计算在内；使用  ifnull（ , ）函数&lt;/p&gt;
&lt;h2 id=&#34;分组查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分组查询&#34;&gt;#&lt;/a&gt; 分组查询&lt;/h2&gt;
&lt;p&gt;​		语法： group by 分组字段&lt;/p&gt;
&lt;p&gt;​		注意：1. 分组之后查询字段：分组字段，聚合字段&lt;/p&gt;
&lt;p&gt;​     				2.where 和 having 区别： where 在分组前进行限定，不满足条件不进行分组；having 在分组后进行限定，不满足则不会被查询出来；&lt;/p&gt;
&lt;p&gt;​						3where 后不可以跟聚合函数，having 可以；&lt;/p&gt;
&lt;h2 id=&#34;分页查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分页查询&#34;&gt;#&lt;/a&gt; 分页查询&lt;/h2&gt;
&lt;p&gt;limit 开始的索引，每页查询的条数；&lt;/p&gt;
&lt;p&gt;​		-- 每页显示 3 条数据&lt;br /&gt;
​		SELECT * FROM student3 LIMIT 0,3; -- 第 1 页&lt;br /&gt;
​		SELECT * FROM student3 LIMIT 3,3; -- 第 2 页&lt;br /&gt;
​		SELECT * FROM student3 LIMIT 6,3; -- 第 3 页&lt;/p&gt;
&lt;p&gt;-- 公式：开始的索引 = （当前页码 - 1）* 每页显示的条数；&lt;/p&gt;
&lt;p&gt;​		分页操作 limit 是一个 mysql “方言”；&lt;/p&gt;
&lt;h1 id=&#34;约束&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#约束&#34;&gt;#&lt;/a&gt; 约束&lt;/h1&gt;
&lt;p&gt;​		对数据进行限定；&lt;/p&gt;
&lt;p&gt;​		分类：主键约束：primary key&lt;/p&gt;
&lt;p&gt;​					非空约束 ： not null&lt;/p&gt;
&lt;p&gt;​					唯一约束：unique&lt;/p&gt;
&lt;p&gt;​					外键约束： foreign key&lt;/p&gt;
&lt;h2 id=&#34;非空约束-not-null&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#非空约束-not-null&#34;&gt;#&lt;/a&gt; 非空约束 ： not null&lt;/h2&gt;
&lt;p&gt;​			1. 创建表时添加约束；&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; st&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	id &lt;span class=&#34;token keyword&#34;&gt;INT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	NAME &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- name 为非空&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; st&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 删除 name 的非空约束；&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; st &lt;span class=&#34;token keyword&#34;&gt;MODIFY&lt;/span&gt; NAME &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​      		2. 创建表完添加约束；&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; st&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	id &lt;span class=&#34;token keyword&#34;&gt;INT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	NAME &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; st &lt;span class=&#34;token keyword&#34;&gt;MODIFY&lt;/span&gt; NAME &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;唯一约束unique&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#唯一约束unique&#34;&gt;#&lt;/a&gt; 唯一约束：unique&lt;/h2&gt;
&lt;p&gt;​				，某一列的值不能重复；&lt;/p&gt;
&lt;p&gt;​				注意： 唯一约束可以用 null;  但是只能有一个；&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 创建表示添加唯一约束&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; st&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	id &lt;span class=&#34;token keyword&#34;&gt;INT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	number &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;UNIQUE&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 手机号唯一&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 删除唯一约束&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; st &lt;span class=&#34;token keyword&#34;&gt;MODIFY&lt;/span&gt; number &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- 错误&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; st &lt;span class=&#34;token keyword&#34;&gt;DROP&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INDEX&lt;/span&gt; number&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;-- 正确&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;2.&lt;/span&gt;可以创建表完添加约束；&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;主键约束-primary-key&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#主键约束-primary-key&#34;&gt;#&lt;/a&gt; 主键约束： primary   key&lt;/h2&gt;
&lt;p&gt;​		1. 非空 且 唯一&lt;/p&gt;
&lt;p&gt;​		2. 一张表只能有一个字段为主键&lt;/p&gt;
&lt;p&gt;​		3. 主键就是唯一标识&lt;/p&gt;
&lt;p&gt;​		自动增长： 如果某一列是数值类型的，使用 auto-increment 可完成自动增长&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 创建表示添加主键约束&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; st&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	id &lt;span class=&#34;token keyword&#34;&gt;INT&lt;/span&gt; primer &lt;span class=&#34;token keyword&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;auto_increment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;-- 给 id 添加主键约束并完成自增长&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	number &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 删除主键约束&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; st &lt;span class=&#34;token keyword&#34;&gt;DROP&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PRIMARY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;-- 正确&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;外键约束-foreign-key&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#外键约束-foreign-key&#34;&gt;#&lt;/a&gt; 外键约束： foreign key&lt;/h2&gt;
&lt;p&gt;​		语法   让表于表产生关系，保证数据正确性；&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; 表名（&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	外键列&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;constraint&lt;/span&gt;  外键名称   &lt;span class=&#34;token keyword&#34;&gt;foreign&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;key&lt;/span&gt;  外键列明称 &lt;span class=&#34;token keyword&#34;&gt;references&lt;/span&gt; 主表名称（主表列名称）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 删除外键&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;级联操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#级联操作&#34;&gt;#&lt;/a&gt; 级联操作&lt;/h2&gt;
&lt;p&gt;​		添加外键，设置级联更新 ---- 添加操作     删除操作&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/shujuku/image-20230814163629355.png&#34; alt=&#34;image-20230814163629355&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;数据库的设计&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库的设计&#34;&gt;#&lt;/a&gt; 数据库的设计&lt;/h1&gt;
&lt;h2 id=&#34;多表之间的关系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多表之间的关系&#34;&gt;#&lt;/a&gt; 多表之间的关系&lt;/h2&gt;
&lt;p&gt;​	1. 分类&lt;/p&gt;
&lt;p&gt;​		一对一： 一个人 - 一张身份证&lt;/p&gt;
&lt;p&gt;​		一对多，多对一：  一个部门 - 多个员工&lt;/p&gt;
&lt;p&gt;​		多对多：多个学生 - 多个课程&lt;/p&gt;
&lt;p&gt;​	2. 实现：&lt;br /&gt;
一对一：&lt;br /&gt;
​			&lt;img data-src=&#34;../pictures/shujuku/image-20230814163753539.png&#34; alt=&#34;image-20230814163753539&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​	多对多：  联合主键&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/shujuku/image-20230814164038351.png&#34; alt=&#34;image-20230814164038351&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;数据库设计的范式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库设计的范式&#34;&gt;#&lt;/a&gt; 数据库设计的范式&lt;/h2&gt;
&lt;p&gt;​			设计数据库遵循的规范&lt;/p&gt;
&lt;p&gt;​				第一范式（1FN）: 每一列都是不可分割的原子数据项；&lt;/p&gt;
&lt;p&gt;​						1 存在非常严重的数据冗余；2 数据添加存在问题；3 数据删除存在问题&lt;/p&gt;
&lt;p&gt;​				第二范式：在 1FN 基础上，非码属性必须依赖于候选码 (&lt;strong&gt;消除非主属性带主属性的部分依赖&lt;/strong&gt;)&lt;/p&gt;
&lt;p&gt;​						函数依赖： A -&amp;gt; B;  通过 A 属性（属性组）确定唯一 B 属性的值；则称 B 依赖于 A;&lt;/p&gt;
&lt;p&gt;​											学号 -&amp;gt; 姓名        （学号，课程 ）-&amp;gt; 分数&lt;/p&gt;
&lt;p&gt;​						 完全函数依赖 ：  如果 A 是属性组，则 B 属性值依赖 A 属性组的所有的属性值；（学号，课程 ）-&amp;gt; 分数&lt;/p&gt;
&lt;p&gt;​						部分函数依赖 ：  如果 A 是属性组，则 B 属性值只需要依赖 A 属性组的某一些的属性值；（学号，课程 ）-&amp;gt; 姓名&lt;/p&gt;
&lt;p&gt;​						传递函数依赖： a-&amp;gt;b;    b-&amp;gt;c;  c 传递函数依赖于 a;        学号 -&amp;gt; 姓名，姓名 -&amp;gt; 性别；&lt;/p&gt;
&lt;p&gt;​						&lt;strong&gt;码&lt;/strong&gt;：  一张表中，一个属性或属性组，被其他属性完全依赖，则称这个属性或属性组为该表的码；&lt;/p&gt;
&lt;p&gt;​						主属性： 码属性组中的所有属性；&lt;/p&gt;
&lt;p&gt;​						非主属性： 除码属性外其他的属性；&lt;/p&gt;
&lt;p&gt;​				第三范式：在 2FN 基础上，任何非主属性不依赖其他非主属性（取消传递依赖）&lt;/p&gt;
&lt;h1 id=&#34;数据库的备份还原&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库的备份还原&#34;&gt;#&lt;/a&gt; 数据库的备份还原&lt;/h1&gt;
&lt;p&gt;​				1. 备份命令行： mysqldump  -u 用户名 -p 密码   数据库名称 &amp;gt; 保存的路径&lt;/p&gt;
&lt;p&gt;​				2. 还原： 登录，创建，使用数据库，执行文件 source  文件路径；&lt;/p&gt;
&lt;p&gt;​				图形化工具：&lt;/p&gt;
&lt;h1 id=&#34;多表查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多表查询&#34;&gt;#&lt;/a&gt; 多表查询&lt;/h1&gt;
&lt;p&gt;​	查询语法：&lt;/p&gt;
&lt;p&gt;​	·		select&lt;br /&gt;
​	・			列名列表&lt;br /&gt;
​	・		from&lt;br /&gt;
​	・			表名列表&lt;br /&gt;
​	・		where....&lt;/p&gt;
&lt;p&gt;笛卡尔积：&lt;/p&gt;
&lt;p&gt;​	有两个集合 A,B . 取这两个集合的所有组成情况。&lt;/p&gt;
&lt;p&gt;​	要完成多表查询，需要消除无用的数据&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; 准备&lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;# 创建部门表&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; dept&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		id &lt;span class=&#34;token keyword&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PRIMARY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AUTO_INCREMENT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		NAME &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; dept &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;NAME&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;开发部&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;市场部&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;财务部&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;# 创建员工表&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; emp &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		id &lt;span class=&#34;token keyword&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PRIMARY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AUTO_INCREMENT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		NAME &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		gender &lt;span class=&#34;token keyword&#34;&gt;CHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 性别&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		salary &lt;span class=&#34;token keyword&#34;&gt;DOUBLE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 工资&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		join_date &lt;span class=&#34;token keyword&#34;&gt;DATE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 入职日期&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		dept_id &lt;span class=&#34;token keyword&#34;&gt;INT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;FOREIGN&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;REFERENCES&lt;/span&gt; dept&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 外键，关联部门表 (部门表的主键)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; emp&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;NAME&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;gender&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;salary&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;join_date&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;孙悟空&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;男&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2013-02-24&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; emp&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;NAME&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;gender&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;salary&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;join_date&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;猪八戒&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;男&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2010-12-02&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; emp&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;NAME&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;gender&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;salary&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;join_date&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;唐僧&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;男&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2008-08-08&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; emp&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;NAME&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;gender&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;salary&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;join_date&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;白骨精&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;女&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2015-10-07&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; emp&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;NAME&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;gender&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;salary&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;join_date&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;蜘蛛精&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;女&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4500&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2011-03-14&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; 多表查询的分类：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token number&#34;&gt;1.&lt;/span&gt; 内连接查询：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token number&#34;&gt;1.&lt;/span&gt; 隐式内连接：使用&lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt;条件消除无用数据&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;-- 查询所有员工信息和对应的部门信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; emp&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;dept &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; emp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; dept&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;-- 查询员工表的名称，性别。部门表的名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; emp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;emp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;gender&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;dept&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; emp&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;dept &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; emp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; dept&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 员工表的姓名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;gender&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- 员工表的性别&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token comment&#34;&gt;-- 部门表的名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				emp t1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; 起别名&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				dept t2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token number&#34;&gt;2.&lt;/span&gt; 显式内连接：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; 语法： &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; 字段列表 &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; 表名&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;inner&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;join&lt;/span&gt; 表名&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt; 条件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; 例如：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; emp &lt;span class=&#34;token keyword&#34;&gt;INNER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;JOIN&lt;/span&gt; dept &lt;span class=&#34;token keyword&#34;&gt;ON&lt;/span&gt; emp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; dept&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; emp &lt;span class=&#34;token keyword&#34;&gt;JOIN&lt;/span&gt; dept &lt;span class=&#34;token keyword&#34;&gt;ON&lt;/span&gt; emp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; dept&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token number&#34;&gt;3.&lt;/span&gt; 内连接查询：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token number&#34;&gt;1.&lt;/span&gt; 从哪些表中查询数据&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token number&#34;&gt;2.&lt;/span&gt; 条件是什么&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token number&#34;&gt;3.&lt;/span&gt; 查询哪些字段&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token number&#34;&gt;2.&lt;/span&gt; 外链接查询：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token number&#34;&gt;1.&lt;/span&gt; 左外连接：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; 语法：&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; 字段列表 &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; 表&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;outer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;join&lt;/span&gt; 表&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt; 条件；&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; 查询的是左表所有数据以及其交集部分。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; 例子：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token comment&#34;&gt;-- 查询所有员工信息，如果员工有部门，则查询部门名称，没有部门，则不显示部门名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; 	t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; emp t1 &lt;span class=&#34;token keyword&#34;&gt;LEFT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;JOIN&lt;/span&gt; dept t2 &lt;span class=&#34;token keyword&#34;&gt;ON&lt;/span&gt; t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token number&#34;&gt;2.&lt;/span&gt; 右外连接：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; 语法：&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; 字段列表 &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; 表&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;outer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;join&lt;/span&gt; 表&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt; 条件；&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; 查询的是右表所有数据以及其交集部分。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; 例子：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; 	&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; dept t2 &lt;span class=&#34;token keyword&#34;&gt;RIGHT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;JOIN&lt;/span&gt; emp t1 &lt;span class=&#34;token keyword&#34;&gt;ON&lt;/span&gt; t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token number&#34;&gt;3.&lt;/span&gt; 子查询：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; 概念：查询中嵌套查询，称嵌套查询为子查询。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;-- 查询工资最高的员工信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;-- 1 查询最高的工资是多少 9000                 SELECT MAX (salary) FROM emp;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;-- 2 查询员工信息，并且工资等于 9000 的   	     SELECT * FROM emp WHERE emp.`salary` = 9000;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;-- 一条 sql 就完成这个操作。子查询&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; emp &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; emp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;salary&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;MAX&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;salary&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; emp&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; 子查询不同情况&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token number&#34;&gt;1.&lt;/span&gt; 子查询的结果是单行单列的：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; 子查询可以作为条件，使用运算符去判断。 运算符： &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token comment&#34;&gt;-- 查询员工工资小于平均工资的人&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; emp &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; emp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;salary &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;AVG&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;salary&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; emp&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token number&#34;&gt;2.&lt;/span&gt; 子查询的结果是多行单列的：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; 子查询可以作为条件，使用运算符&lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt;来判断&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token comment&#34;&gt;-- 查询 &#39; 财务部 &#39; 和 &#39; 市场部 &#39; 所有的员工信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; id &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; dept &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; NAME &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;财务部&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; NAME &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;市场部&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; emp &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; dept_id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; dept_id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token comment&#34;&gt;-- 子查询&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; emp &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; dept_id &lt;span class=&#34;token operator&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; id &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; dept &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; NAME &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;财务部&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; NAME &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;市场部&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token number&#34;&gt;3.&lt;/span&gt; 子查询的结果是多行多列的：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; 子查询可以作为一张虚拟表参与查询&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token comment&#34;&gt;-- 查询员工入职日期是 2011-11-11 日之后的员工信息和部门信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token comment&#34;&gt;-- 子查询&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;88&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; dept t1 &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; emp &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; emp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;join_date&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;2011-11-11&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; t2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;89&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;90&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;91&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token comment&#34;&gt;-- 普通内连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;92&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; emp t1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;dept t2 &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;join_date&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;  &#39;&lt;span class=&#34;token number&#34;&gt;2011&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;多表练习查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多表练习查询&#34;&gt;#&lt;/a&gt; 多表练习查询&lt;/h2&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; 多表查询练习&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 部门表&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; dept &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			  id &lt;span class=&#34;token keyword&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PRIMARY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PRIMARY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 部门 id&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			  dname &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 部门名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			  loc &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 部门所在地&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;		&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 添加 4 个部门&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; dept&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;dname&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;loc&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;教研部&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;北京&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;学工部&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;上海&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;销售部&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;广州&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;财务部&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;深圳&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;-- 职务表，职务名称，职务描述&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; job &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			  id &lt;span class=&#34;token keyword&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PRIMARY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			  jname &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			  description &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;		&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 添加 4 个职务&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; job &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; jname&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; description&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;董事长&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;管理整个公司，接单&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;经理&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;管理部门员工&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;销售员&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;向客人推销产品&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;文员&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;使用办公软件&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;		&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 员工表&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; emp &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			  id &lt;span class=&#34;token keyword&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PRIMARY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 员工 id&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			  ename &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 员工姓名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			  job_id &lt;span class=&#34;token keyword&#34;&gt;INT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 职务 id&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			  mgr &lt;span class=&#34;token keyword&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 上级领导&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			  joindate &lt;span class=&#34;token keyword&#34;&gt;DATE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 入职日期&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			  salary &lt;span class=&#34;token keyword&#34;&gt;DECIMAL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 工资&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			  bonus &lt;span class=&#34;token keyword&#34;&gt;DECIMAL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 奖金&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			  dept_id &lt;span class=&#34;token keyword&#34;&gt;INT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 所在部门编号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			  &lt;span class=&#34;token keyword&#34;&gt;CONSTRAINT&lt;/span&gt; emp_jobid_ref_job_id_fk &lt;span class=&#34;token keyword&#34;&gt;FOREIGN&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;job_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;REFERENCES&lt;/span&gt; job &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 关联&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			  &lt;span class=&#34;token keyword&#34;&gt;CONSTRAINT&lt;/span&gt; emp_deptid_ref_dept_id_fk &lt;span class=&#34;token keyword&#34;&gt;FOREIGN&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;REFERENCES&lt;/span&gt; dept &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 添加员工&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; emp&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;ename&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;job_id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;mgr&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;joindate&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;salary&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;bonus&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1001&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;孙悟空&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1004&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2000-12-17&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;8000.00&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1002&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;卢俊义&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1006&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2001-02-20&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;16000.00&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;3000.00&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1003&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;林冲&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1006&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2001-02-22&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;12500.00&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;5000.00&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1004&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;唐僧&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1009&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2001-04-02&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;29750.00&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1005&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;李逵&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1006&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2001-09-28&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;12500.00&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;14000.00&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1006&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;宋江&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1009&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2001-05-01&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;28500.00&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1007&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;刘备&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1009&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2001-09-01&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;24500.00&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1008&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;猪八戒&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1004&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2007-04-19&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;30000.00&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1009&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;罗贯中&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2001-11-17&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;50000.00&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1010&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;吴用&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1006&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2001-09-08&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;15000.00&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;0.00&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1011&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;沙僧&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1004&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2007-05-23&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;11000.00&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1012&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;李逵&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1006&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2001-12-03&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;9500.00&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1013&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;小白龙&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1004&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2001-12-03&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;30000.00&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1014&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;关羽&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1007&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2002-01-23&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;13000.00&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 工资等级表&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; salarygrade &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			  grade &lt;span class=&#34;token keyword&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PRIMARY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;-- 级别&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			  losalary &lt;span class=&#34;token keyword&#34;&gt;INT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;-- 最低工资&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			  hisalary &lt;span class=&#34;token keyword&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 最高工资&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;		&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 添加 5 个工资等级&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; salarygrade&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;grade&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;losalary&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;hisalary&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;12000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;12010&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;14000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;14010&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20010&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30010&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;99990&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 需求：&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;-- 1. 查询所有员工信息。查询员工编号，员工姓名，工资，职务名称，职务描述&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;/*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				分析：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					1. 员工编号，员工姓名，工资，需要查询 emp 表  职务名称，职务描述 需要查询 job 表&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					2. 查询条件 emp.job_id = job.id&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			*/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 员工编号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;ename&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 员工姓名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;salary&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- 工资&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;jname&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 职务名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;description&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 职务描述&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				emp t1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; job t2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;88&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;job_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;89&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 2. 查询员工编号，员工姓名，工资，职务名称，职务描述，部门名称，部门位置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;90&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;/*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;91&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				分析：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;92&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					1. 员工编号，员工姓名，工资 emp  职务名称，职务描述 job  部门名称，部门位置 dept&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;93&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					2. 条件： emp.job_id = job.id and emp.dept_id = dept.id&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;94&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			*/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;95&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;96&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;97&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 员工编号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;98&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;ename&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 员工姓名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;99&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;salary&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- 工资&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;100&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;jname&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 职务名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;101&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;description&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 职务描述&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;102&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;dname&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 部门名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;103&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;loc&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 部门位置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;104&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;105&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				emp t1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; job t2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dept t3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;106&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;107&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;job_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;108&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;109&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 3. 查询员工姓名，工资，工资等级&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;110&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;/*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;111&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				分析：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;112&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					1. 员工姓名，工资 emp  工资等级 salarygrade&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;113&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					2. 条件 emp.salary &gt;= salarygrade.losalary and emp.salary &amp;lt;= salarygrade.hisalary&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;114&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						emp.salary BETWEEN salarygrade.losalary and salarygrade.hisalary&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;115&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			*/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;116&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;117&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ename &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;118&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;salary&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;119&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;120&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; emp t1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; salarygrade t2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;121&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;salary&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;BETWEEN&lt;/span&gt; t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;losalary&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;hisalary&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;122&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 4. 查询员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;123&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;/*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;124&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				分析：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;125&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					1. 员工姓名，工资 emp ， 职务名称，职务描述 job 部门名称，部门位置，dept  工资等级 salarygrade&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;126&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					2. 条件： emp.job_id = job.id and emp.dept_id = dept.id and emp.salary BETWEEN salarygrade.losalary and salarygrade.hisalary		&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;127&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			*/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;128&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;129&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;ename&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;130&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;salary&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;131&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;jname&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;132&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;description&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;133&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;dname&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;134&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;loc&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;135&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t4&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;grade&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;136&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;137&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				emp t1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;job t2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;dept t3&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;salarygrade t4&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;138&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;139&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;job_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;140&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;141&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;salary&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;BETWEEN&lt;/span&gt; t4&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;losalary&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; t4&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;hisalary&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;142&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 5. 查询出部门编号、部门名称、部门位置、部门人数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;143&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;/*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;144&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				分析：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;145&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					1. 部门编号、部门名称、部门位置 dept 表。 部门人数 emp 表&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;146&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					2. 使用分组查询。按照 emp.dept_id 完成分组，查询 count (id)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;147&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					3. 使用子查询将第 2 步的查询结果和 dept 表进行关联查询&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;148&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;149&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			*/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;150&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;151&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;dname&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;loc&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;total&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;152&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;153&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				dept t1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;154&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;155&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					dept_id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; total&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;156&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;157&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					emp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;158&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BY&lt;/span&gt; dept_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; t2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;159&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dept_id&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;160&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 6. 查询所有员工的姓名及其直接上级的姓名，没有领导的员工也需要查询&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;161&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;/*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;162&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				分析：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;163&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					1. 姓名 emp， 直接上级的姓名 emp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;164&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						* emp 表的 id 和 mgr 是自关联&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;165&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					2. 条件 emp.id = emp.mgr&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;166&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					3. 查询左表的所有数据，和 交集数据&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;167&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						* 使用左外连接查询&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;168&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			*/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;169&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;/*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;170&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			select&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;171&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1.ename,&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;172&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1.mgr,&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;173&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t2.`id`,&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;174&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t2.ename&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;175&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			from emp t1, emp t2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;176&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			where t1.mgr = t2.`id`;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;177&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;178&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			*/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;179&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;180&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;181&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ename&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;182&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mgr&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;183&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;184&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;ename&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;185&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; emp t1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;186&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;LEFT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;JOIN&lt;/span&gt; emp t2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;187&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;ON&lt;/span&gt; t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;mgr&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;事务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事务&#34;&gt;#&lt;/a&gt; 事务&lt;/h1&gt;
&lt;h2 id=&#34;基本介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本介绍&#34;&gt;#&lt;/a&gt; 基本介绍&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;开启事务： start transaction;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;回滚：rollback;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;提交：commit;&lt;/p&gt;
&lt;p&gt;​		-- 发现执行没有问题，提交事务&lt;br /&gt;
​				COMMIT;&lt;/p&gt;
&lt;p&gt;​		-- 发现出问题了，回滚事务&lt;br /&gt;
​			ROLLBACK;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;MySQL 数据库中事务默认&lt;strong&gt;自动提交&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;a 事务提交的两种方式：&lt;/p&gt;
&lt;p&gt;​		自动提交：&lt;/p&gt;
&lt;p&gt;​				mysql 就是自动提交的&lt;/p&gt;
&lt;p&gt;​				一条 DML (增删改) 语句会自动提交一次事务。&lt;/p&gt;
&lt;p&gt;​		手动提交：&lt;/p&gt;
&lt;p&gt;​				Oracle 数据库默认是&lt;strong&gt;手动提交&lt;/strong&gt;事务&lt;/p&gt;
&lt;p&gt;​				需要先开启事务，再提交&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​					b 修改事务的默认提交方式：&lt;/p&gt;
&lt;p&gt;​						查看事务的默认提交方式：SELECT @@autocommit; -- 1 代表自动提交  0 代表手动提交&lt;/p&gt;
&lt;p&gt;​						修改默认提交方式： set @@autocommit = 0;&lt;/p&gt;
&lt;h2 id=&#34;事务的四大特征&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事务的四大特征&#34;&gt;#&lt;/a&gt; 事务的四大特征&lt;/h2&gt;
&lt;p&gt;​			1 原子性：是不可分割的最小操作单位，要么同时成功，要么同时失败。&lt;/p&gt;
&lt;p&gt;​			2 持久性：当事务提交或回滚后，数据库会持久化的保存数据。&lt;/p&gt;
&lt;p&gt;​			3 隔离性：多个事务之间。相互独立。&lt;/p&gt;
&lt;p&gt;​			4 一致性：事务操作前后，数据总量不变&lt;/p&gt;
&lt;h2 id=&#34;事务的隔离级别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事务的隔离级别&#34;&gt;#&lt;/a&gt; 事务的隔离级别&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;概念：多个事务之间隔离的，相互独立的。但是如果多个事务操作同一批数据，则会引发一些问题，设置不同的隔离级别就可以解决这些问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;存在问题：、&lt;/p&gt;
&lt;p&gt;​         脏读：一个事务，读取到另一个事务中没有提交的数据&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;不可重复读&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;虚读&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;：在同一个事务中，两次读取到的数据不一样。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	 	幻读：一个事务操作 (DML) 数据表中所有记录，另一个事务添加了一条数据，则第一个事务查询不到自己的修改。&lt;/p&gt;
&lt;p&gt;隔离级别：&lt;/p&gt;
&lt;p&gt;​	read uncommitted：读未提交&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;产生的问题：脏读、不可重&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	read committed：读已提交 （Oracle）&lt;/p&gt;
&lt;p&gt;​				产生的问题：不可重复读、幻读&lt;/p&gt;
&lt;p&gt;​	repeatable read：可重复读 （MySQL 默认）&lt;/p&gt;
&lt;p&gt;​					产生的问题：幻读&lt;/p&gt;
&lt;p&gt;​	serializable：串行化&lt;/p&gt;
&lt;p&gt;​					可以解决所有的问题&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：隔离级别从小到大安全性越来越高，但是效率越来越低&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据库查询隔离级别：
&lt;ul&gt;
&lt;li&gt;select @@tx_isolation;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;数据库设置隔离级别：
&lt;ul&gt;
&lt;li&gt;set global transaction isolation level  级别字符串；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;dcl管理用户授权&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dcl管理用户授权&#34;&gt;#&lt;/a&gt; DCL: 管理用户，授权&lt;/h1&gt;
&lt;h2 id=&#34;管理用户&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#管理用户&#34;&gt;#&lt;/a&gt; 管理用户&lt;/h2&gt;
&lt;p&gt;​		添加用户 ---create user &#39; 用户名 &#39;@&#39; 主机名 &#39; identified  by &#39; 密码 &#39;；&lt;/p&gt;
&lt;p&gt;​		删除用户 ---drop user &#39; 用户名 &#39;@&#39; 主机名 &#39;;&lt;/p&gt;
&lt;p&gt;​		修改用户密码 ---1.update user set password = password (‘新密码’)  where user = &#39; 用户名 &#39;;&lt;/p&gt;
&lt;p&gt;​							 	2.set password for &#39; 用户名 &#39;@&#39; 主机名 &#39; = password (‘新密码’) ；&lt;/p&gt;
&lt;p&gt;​		查询用户 ---1. 切换到 mysql 数据库   use mysql;&lt;/p&gt;
&lt;p&gt;​							2. 查询 user 表  select * from uaer;&lt;/p&gt;
&lt;h2 id=&#34;授权&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#授权&#34;&gt;#&lt;/a&gt; 授权&lt;/h2&gt;
&lt;p&gt;​		查询权限  show grants for &#39; 用户名 &#39;@&#39; 主机名 &#39; ;&lt;/p&gt;
&lt;p&gt;​		授予权限  grant 权限列表  on 数据库名。表名  to &#39; 用户名 &#39;@&#39; 主机名 &#39; ；&lt;/p&gt;
&lt;p&gt;​		撤销权限  revoke  权限列表  on  数据库名。表名 from &#39; 用户名 &#39;@&#39; 主机名 &#39; ；&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
</content>
        <category term="JavaWeb" scheme="https://jihaipeng123.github.io/categories/JavaWeb/" />
        <updated>2023-08-14T07:43:21.000Z</updated>
    </entry>
    <entry>
        <id>https://jihaipeng123.github.io/%E6%88%AA%E5%9B%BE%E5%90%88%E9%9B%86/</id>
        <title>截图合集</title>
        <link rel="alternate" href="https://jihaipeng123.github.io/%E6%88%AA%E5%9B%BE%E5%90%88%E9%9B%86/"/>
        <content type="html">&lt;h1 id=&#34;常用dos命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用dos命令&#34;&gt;#&lt;/a&gt; 常用 DOS 命令&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814135358769.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;数据类型取值范围&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据类型取值范围&#34;&gt;#&lt;/a&gt; 数据类型取值范围&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814135442477.png&#34; alt=&#34;image-20230814135442477&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;短路逻辑运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#短路逻辑运算符&#34;&gt;#&lt;/a&gt; 短路逻辑运算符&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814135655545.png&#34; alt=&#34;image-20230814135655545&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;idea快捷键&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#idea快捷键&#34;&gt;#&lt;/a&gt; IDEA 快捷键&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814135947631.png&#34; alt=&#34;image-20230814135947631&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;数组内存图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数组内存图&#34;&gt;#&lt;/a&gt; 数组内存图&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814140130102.png&#34; alt=&#34;image-20230814140130102&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;对象内存图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#对象内存图&#34;&gt;#&lt;/a&gt; 对象内存图&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814140321224.png&#34; alt=&#34;image-20230814140321224&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;区别成员变量和局部变量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#区别成员变量和局部变量&#34;&gt;#&lt;/a&gt; 区别成员变量和局部变量&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814140429058.png&#34; alt=&#34;image-20230814140429058&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;private关键字&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#private关键字&#34;&gt;#&lt;/a&gt; private 关键字&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814140517025.png&#34; alt=&#34;image-20230814140517025&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;this关键字&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#this关键字&#34;&gt;#&lt;/a&gt; this 关键字&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814140557072.png&#34; alt=&#34;image-20230814140557072&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;标准类制作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#标准类制作&#34;&gt;#&lt;/a&gt; 标准类制作&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814140647004.png&#34; alt=&#34;image-20230814140647004&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;string&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#string&#34;&gt;#&lt;/a&gt; String&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814140732028.png&#34; alt=&#34;image-20230814140732028&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814140751109.png&#34; alt=&#34;image-20230814140751109&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814140906126.png&#34; alt=&#34;image-20230814140906126&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;stringbuilder&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#stringbuilder&#34;&gt;#&lt;/a&gt; StringBuilder&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814140948847.png&#34; alt=&#34;image-20230814140948847&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;../pictures/jietuheji/image-20230814141008666.png&amp;quot; alt=&amp;quot;image-20230814141008666&amp;quot; style=&amp;quot;zoom:150%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h1 id=&#34;集合arraylist&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#集合arraylist&#34;&gt;#&lt;/a&gt; 集合 ArrayList&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814141119594.png&#34; alt=&#34;image-20230814141119594&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814141142002.png&#34; alt=&#34;image-20230814141142002&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814141202386.png&#34; alt=&#34;image-20230814141202386&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;继承&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#继承&#34;&gt;#&lt;/a&gt; 继承&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814141252842.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;thissuper&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#thissuper&#34;&gt;#&lt;/a&gt; this&amp;amp;super&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814141332119.png&#34; alt=&#34;image-20230814141332119&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;包&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#包&#34;&gt;#&lt;/a&gt; 包&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814141451722.png&#34; alt=&#34;image-20230814141451722&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;final&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#final&#34;&gt;#&lt;/a&gt; final&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814141516721.png&#34; alt=&#34;image-20230814141516721&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814141949689.png&#34; alt=&#34;image-20230814141949689&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;static&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#static&#34;&gt;#&lt;/a&gt; static&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142013705.png&#34; alt=&#34;image-20230814142013705&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;多态&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多态&#34;&gt;#&lt;/a&gt; 多态&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142111263.png&#34; alt=&#34;image-20230814142111263&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142126810.png&#34; alt=&#34;image-20230814142126810&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;接口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#接口&#34;&gt;#&lt;/a&gt; 接口&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142216539.png&#34; alt=&#34;image-20230814142216539&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142233086.png&#34; alt=&#34;image-20230814142233086&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;math类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#math类&#34;&gt;#&lt;/a&gt; Math 类&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142329002.png&#34; alt=&#34;image-20230814142329002&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;system类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#system类&#34;&gt;#&lt;/a&gt; System 类&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142348733.png&#34; alt=&#34;image-20230814142348733&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;object类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#object类&#34;&gt;#&lt;/a&gt; Object 类&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142428174.png&#34; alt=&#34;image-20230814142428174&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142448930.png&#34; alt=&#34;image-20230814142448930&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;arrays类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#arrays类&#34;&gt;#&lt;/a&gt; Arrays 类&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142525450.png&#34; alt=&#34;image-20230814142525450&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;包装类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#包装类&#34;&gt;#&lt;/a&gt; 包装类&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142600999.png&#34; alt=&#34;image-20230814142600999&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;integer&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#integer&#34;&gt;#&lt;/a&gt; Integer&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142626986.png&#34; alt=&#34;image-20230814142626986&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142659053.png&#34; alt=&#34;image-20230814142659053&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;装箱拆箱&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#装箱拆箱&#34;&gt;#&lt;/a&gt; 装箱拆箱&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142748386.png&#34; alt=&#34;image-20230814142748386&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;date类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#date类&#34;&gt;#&lt;/a&gt; Date 类&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142809716.png&#34; alt=&#34;image-20230814142809716&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142826581.png&#34; alt=&#34;image-20230814142826581&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142901547.png&#34; alt=&#34;image-20230814142901547&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142916048.png&#34; alt=&#34;image-20230814142916048&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142928063.png&#34; alt=&#34;image-20230814142928063&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;异常&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异常&#34;&gt;#&lt;/a&gt; 异常&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814142956163.png&#34; alt=&#34;image-20230814142956163&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814143013486.png&#34; alt=&#34;image-20230814143013486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814143029526.png&#34; alt=&#34;image-20230814143029526&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814143054726.png&#34; alt=&#34;image-20230814143054726&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;集合体系结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#集合体系结构&#34;&gt;#&lt;/a&gt; 集合体系结构&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814143357012.png&#34; alt=&#34;image-20230814143357012&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;collection&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#collection&#34;&gt;#&lt;/a&gt; Collection&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814143418347.png&#34; alt=&#34;image-20230814143418347&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814143501562.png&#34; alt=&#34;image-20230814143501562&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814143522741.png&#34; alt=&#34;image-20230814143522741&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;list&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#list&#34;&gt;#&lt;/a&gt; List&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814143545278.png&#34; alt=&#34;image-20230814143545278&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814143601945.png&#34; alt=&#34;image-20230814143601945&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814143628276.png&#34; alt=&#34;image-20230814143628276&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814143718472.png&#34; alt=&#34;image-20230814143718472&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814143700091.png&#34; alt=&#34;image-20230814143700091&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;set&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#set&#34;&gt;#&lt;/a&gt; Set&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814143744108.png&#34; alt=&#34;image-20230814143744108&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;hashset&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hashset&#34;&gt;#&lt;/a&gt; HashSet&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814143755828.png&#34; alt=&#34;image-20230814143755828&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814143824876.png&#34; alt=&#34;image-20230814143824876&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;treeset&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#treeset&#34;&gt;#&lt;/a&gt; TreeSet&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814143845472.png&#34; alt=&#34;image-20230814143845472&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814143900305.png&#34; alt=&#34;image-20230814143900305&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;泛型编程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#泛型编程&#34;&gt;#&lt;/a&gt; 泛型编程&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814143925901.png&#34; alt=&#34;image-20230814143925901&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;类型通配符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#类型通配符&#34;&gt;#&lt;/a&gt; 类型通配符&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814143950687.png&#34; alt=&#34;image-20230814143950687&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;map&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#map&#34;&gt;#&lt;/a&gt; Map&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../pictures/jietuheji/image-20230814144036180.png&#34; alt=&#34;image-20230814144036180&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;../pictures/jietuheji/image-20230814144051088.png&amp;quot; alt=&amp;quot;image-20230814144051088&amp;quot;  /&amp;gt;&lt;/p&gt;
</content>
        <category term="JavaSE" scheme="https://jihaipeng123.github.io/categories/JavaSE/" />
        <updated>2023-08-14T05:50:07.000Z</updated>
    </entry>
</feed>
